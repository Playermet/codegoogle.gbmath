#pragma once

#include "_gbmath.h"


 
namespace gbmath
{


//=========================================================================
//    mat22_s
//=========================================================================
//
////=======================================================================
//mat22_s& mat22_s::operator = ( const mat22_s& m )
//{
//fggfgdfg
//
//	return *this;
//}
//
////=========================================================================
//mat22_s& mat22_s::operator = ( float f )
//{
//gfgdfdfgfdg
//
//	return *this;
//}
//
////=========================================================================
//mat22_s& mat22_s::operator += ( const mat22_s& m )
//{
//dfdsfsdfdsf
//}
//
////=========================================================================
//mat22_s& mat22_s::operator -= ( const mat22_s& m )
//gffgdfg
//
////=========================================================================
//mat22_s& mat22_s::operator *= ( const mat22_s& m )
//
//
////=========================================================================
//mat22_s& mat22_s::operator *= ( float f )
//gfdfgfgfd
//
////=========================================================================
//mat22_s& mat22_s::operator /= ( float f )
//{
//fddfs
//};
//
//
////=========================================================================
//mat22_s  mat22_s::operator + ( const mat22_s& m ) const
//gfggfggfgfggdgf fgfggf
//
////=========================================================================
//mat22_s  mat22_s::operator - ( const mat22_s& m) const
//dffdfdsf
//
////=========================================================================
//mat22_s  mat22_s::operator * ( const mat22_s& m) const
//fgdfgfdgfd
//
////=========================================================================
//mat22_s  mat22_s::operator * (  float f ) const
//fdfddf
//
////=========================================================================
//vec2_s   mat22_s::operator * ( const vec2_s& v ) const

/************************
//=========================================================================
mat22_s operator * ( float b, const mat22_s& a )
{
	mat22_s c;

	c.x[0][0]=a.x[0][0]*b;
	c.x[0][1]=a.x[0][1]*b;
	c.x[1][0]=a.x[1][0]*b;
	c.x[1][1]=a.x[1][1]*b;

	return c;
}
**************************************/

//=========================================================================

//
//
////=========================================================================
//mat22_s& mat22_s::invert ()
//fgfddgdfg
//
////=========================================================================
//mat22_s& mat22_s::setScaling ( const vec2_s& v )
//ggffdf
//
////=========================================================================
//mat22_s&   mat22_s::setScaling (float x, float y)
//dfdsdfsdfds
//
////=========================================================================
//mat22_s& mat22_s::setRotation ( float angle )
//dfdsfdsdf
//


 
}

