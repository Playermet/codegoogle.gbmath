<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: scalar.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>scalar.h</h1><a href="scalar_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 ﻿
<a name="l00006"></a>00006 <span class="preprocessor">#pragma once</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span>
<a name="l00008"></a>00008 <span class="preprocessor">#ifndef __GBMATH_H__</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span><span class="preprocessor">    #error  DO NOT INCLUDE THIS FILE. USE:   #include &lt;gbmath/_gbmath.h&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00011"></a>00011 <span class="preprocessor"></span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="comment">//#include &lt;/Config.h&gt;</span>
<a name="l00015"></a>00015 <span class="comment">//#include &lt;/base/Constants.h&gt;</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="comment">/*******************************************************</span>
<a name="l00018"></a>00018 <span class="comment"></span>
<a name="l00019"></a>00019 <span class="comment"> TODO:</span>
<a name="l00020"></a>00020 <span class="comment"></span>
<a name="l00021"></a>00021 <span class="comment">  -- возможно переделать некоторые операции на шаблоны.</span>
<a name="l00022"></a>00022 <span class="comment">  -- убрать все шаблоны</span>
<a name="l00023"></a>00023 <span class="comment"></span>
<a name="l00024"></a>00024 <span class="comment">STORY:</span>
<a name="l00025"></a>00025 <span class="comment"> --- добавлены ещё некоторые операции</span>
<a name="l00026"></a>00026 <span class="comment"> --- добавлена функция получения максимального по трём значениям</span>
<a name="l00027"></a>00027 <span class="comment"> -- round поправлена и перенесена в инлайн. Спасибо Zeux`у</span>
<a name="l00028"></a>00028 <span class="comment"></span>
<a name="l00029"></a>00029 <span class="comment">********************************************************/</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00034"></a>00034 <span class="keyword">namespace </span>gbmath
<a name="l00035"></a>00035 {
<a name="l00036"></a>00036  
<a name="l00037"></a>00037 
<a name="l00039"></a><a class="code" href="namespacegbmath_1_1constan.htm">00039</a>   <span class="keyword">namespace </span>constan
<a name="l00040"></a>00040   {
<a name="l00041"></a>00041 
<a name="l00042"></a><a class="code" href="namespacegbmath_1_1constan.htm#a525cd2e020a7a5ddb7aaf061aec38a97">00042</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a525cd2e020a7a5ddb7aaf061aec38a97">EPSILON</a>        =     1.0e-6f;
<a name="l00043"></a>00043 
<a name="l00044"></a><a class="code" href="namespacegbmath_1_1constan.htm#adc97d79b13e6cb0eafad99a8bfef01d5">00044</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#adc97d79b13e6cb0eafad99a8bfef01d5" title="PI.">PI</a>       = 3.1415926536f; 
<a name="l00045"></a><a class="code" href="namespacegbmath_1_1constan.htm#a0958ed07f4a949da9fa3bc2464702976">00045</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a0958ed07f4a949da9fa3bc2464702976" title="1/PI">C1BYPI</a>    = 0.3183098862f; 
<a name="l00046"></a>00046 
<a name="l00047"></a><a class="code" href="namespacegbmath_1_1constan.htm#ab2b5217314fa17e9249d418f08863549">00047</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#ab2b5217314fa17e9249d418f08863549" title="2*PI">PI2</a>         =  6.283185307f; 
<a name="l00048"></a><a class="code" href="namespacegbmath_1_1constan.htm#a754c709cb5f404ea0f2aa87099d63197">00048</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a754c709cb5f404ea0f2aa87099d63197" title="PI/2.">PI_DIV_2</a>      =  1.570796326f; 
<a name="l00049"></a><a class="code" href="namespacegbmath_1_1constan.htm#a48170109c147d829532affe7b8805011">00049</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a48170109c147d829532affe7b8805011" title="PI/4.">PI_DIV_4</a>      =  0.785398163f; 
<a name="l00050"></a><a class="code" href="namespacegbmath_1_1constan.htm#afb4f8f6ab876cdc6928ede17d8687daf">00050</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#afb4f8f6ab876cdc6928ede17d8687daf" title="PI/6.">PI_DIV_6</a>      =  0.523598776f; 
<a name="l00051"></a>00051 
<a name="l00052"></a><a class="code" href="namespacegbmath_1_1constan.htm#aac7fa07b389dfa2ab2a00b4b8c44d30d">00052</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#aac7fa07b389dfa2ab2a00b4b8c44d30d" title="PI/180.">PI_DIV_180</a>    =  0.017453292f; 
<a name="l00053"></a><a class="code" href="namespacegbmath_1_1constan.htm#aed9144f15535b945ef7d435274db3d9c">00053</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#aed9144f15535b945ef7d435274db3d9c" title="180/PI">C180DIVPI</a>    =  57.29577951f; 
<a name="l00054"></a>00054 
<a name="l00055"></a><a class="code" href="namespacegbmath_1_1constan.htm#a5fb22c7e47ea0c235d143a297b63a5b9">00055</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a5fb22c7e47ea0c235d143a297b63a5b9" title="3/4 PI">C3PIDIV4</a>     = 2.35619449f;   
<a name="l00056"></a><a class="code" href="namespacegbmath_1_1constan.htm#a224ddc1407a38aab4eefb8a0a5e72e90">00056</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a224ddc1407a38aab4eefb8a0a5e72e90" title="1/(2PI)">PI2_INV</a>      = 0.159154943f;  
<a name="l00057"></a><a class="code" href="namespacegbmath_1_1constan.htm#a550b9fd549b87067896d6ecf05dabf1e">00057</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a550b9fd549b87067896d6ecf05dabf1e" title="1/360">CINV360</a>      = 0.002777778f;  
<a name="l00058"></a><a class="code" href="namespacegbmath_1_1constan.htm#ab54994797259ebbb3f7d2b3848f95dec">00058</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#ab54994797259ebbb3f7d2b3848f95dec">C180</a>         = 180.0f;
<a name="l00059"></a><a class="code" href="namespacegbmath_1_1constan.htm#a53f78dd8fb4a20ac3576fb952ca9a8e8">00059</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a53f78dd8fb4a20ac3576fb952ca9a8e8">C360</a>         = 360.0f;
<a name="l00060"></a><a class="code" href="namespacegbmath_1_1constan.htm#ab3c19809edc9775ac05cbace112236e9">00060</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#ab3c19809edc9775ac05cbace112236e9">HALF</a>     = 0.5f;
<a name="l00061"></a><a class="code" href="namespacegbmath_1_1constan.htm#a17750f4df34c1ffa153f8f5f698a7d56">00061</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a17750f4df34c1ffa153f8f5f698a7d56">TWO</a>         = 2.0f;
<a name="l00062"></a><a class="code" href="namespacegbmath_1_1constan.htm#a6ed58064f509a884786c4ede99d99a8e">00062</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a6ed58064f509a884786c4ede99d99a8e">LN10</a>        = 2.302585093f;
<a name="l00063"></a>00063 
<a name="l00064"></a><a class="code" href="namespacegbmath_1_1constan.htm#a52d308f234d725c711df53e2d8f421cb">00064</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a52d308f234d725c711df53e2d8f421cb" title="sqrt(2)">SQRT_2</a>       = 1.4142135624f; 
<a name="l00065"></a><a class="code" href="namespacegbmath_1_1constan.htm#a237f6561047fe27c1354f660f52974b2">00065</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#a237f6561047fe27c1354f660f52974b2" title="sqrt(1/2)">SQRT_HALF</a>    = 0.7071067812f; 
<a name="l00066"></a>00066 
<a name="l00067"></a><a class="code" href="namespacegbmath_1_1constan.htm#ac0eac2f2ab8137e5e97abc1326190861">00067</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1constan.htm#ac0eac2f2ab8137e5e97abc1326190861" title="e">E</a>           = 2.718281828459f; 
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 
<a name="l00070"></a>00070   }
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 
<a name="l00075"></a>00075     <span class="keyword">namespace </span>scalar
<a name="l00076"></a>00076         {
<a name="l00077"></a>00077 
<a name="l00078"></a>00078         <span class="comment">//---------------------------------------------------------------------</span>
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 
<a name="l00082"></a>00082         <span class="comment">//inline bool is_nan( float a )</span>
<a name="l00083"></a>00083         <span class="comment">//{</span>
<a name="l00084"></a>00084         <span class="comment">//      bool r = a==a;</span>
<a name="l00085"></a>00085         <span class="comment">//      return !( a == a );</span>
<a name="l00086"></a>00086         <span class="comment">//}</span>
<a name="l00087"></a>00087 
<a name="l00088"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a73865f6b69205465a5a4bf15b12707d7">00088</a>         <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a73865f6b69205465a5a4bf15b12707d7">compare</a>(<span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> epsilon)
<a name="l00089"></a>00089         {
<a name="l00090"></a>00090            <span class="keywordflow">return</span> fabs(a - b) &lt; epsilon;
<a name="l00091"></a>00091         }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 
<a name="l00095"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a27317faf67c04d32ff9f748acaa530e0">00095</a>         <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a27317faf67c04d32ff9f748acaa530e0" title="Check the value the correct value.">check</a>(<span class="keywordtype">float</span> f)
<a name="l00096"></a>00096         {
<a name="l00097"></a>00097        <span class="keywordflow">if</span>( f == 0.0f ) 
<a name="l00098"></a>00098                    <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100            <span class="keywordflow">if</span>(f &lt; 0.0f) 
<a name="l00101"></a>00101                    f = -f;
<a name="l00102"></a>00102 
<a name="l00103"></a>00103        <span class="keywordflow">if</span>( (f &lt;= FLT_MAX) &amp;&amp; (f &gt;= FLT_MIN) ) 
<a name="l00104"></a>00104                    <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00105"></a>00105 
<a name="l00106"></a>00106            <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00107"></a>00107     }
<a name="l00108"></a>00108 
<a name="l00110"></a><a class="code" href="namespacegbmath_1_1scalar.htm#af3b8260314175ce09cde825ae7efc8ef">00110</a>         <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a27317faf67c04d32ff9f748acaa530e0" title="Check the value the correct value.">check</a>(<span class="keywordtype">double</span> d)
<a name="l00111"></a>00111         {
<a name="l00112"></a>00112        <span class="keywordflow">if</span>( d == 0.0 ) 
<a name="l00113"></a>00113                    <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00114"></a>00114 
<a name="l00115"></a>00115            <span class="keywordflow">if</span>(d &lt; 0.0) 
<a name="l00116"></a>00116                    d = -d;
<a name="l00117"></a>00117 
<a name="l00118"></a>00118        <span class="keywordflow">if</span>( (d &lt;= DBL_MAX) &amp;&amp; (d &gt;= DBL_MIN) ) 
<a name="l00119"></a>00119                    <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00120"></a>00120 
<a name="l00121"></a>00121            <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00122"></a>00122     }
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 
<a name="l00126"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a4c33c2f07dd7ff4cc887df0fff1735bc">00126</a>                 <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a4c33c2f07dd7ff4cc887df0fff1735bc" title="Квадрат.">sqr</a>(<span class="keywordtype">float</span> a) 
<a name="l00127"></a>00127                 { 
<a name="l00128"></a>00128                         <span class="keywordflow">return</span> a*a; 
<a name="l00129"></a>00129                 }
<a name="l00130"></a>00130 
<a name="l00131"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a89d4f791be2837461faf5ba2767bc95d">00131</a>                 <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a89d4f791be2837461faf5ba2767bc95d">abs</a>(<span class="keywordtype">float</span> val)
<a name="l00132"></a>00132                 {
<a name="l00133"></a>00133                     <span class="keywordflow">if</span>(val&lt;0.0f)
<a name="l00134"></a>00134                         {
<a name="l00135"></a>00135                                 <span class="keywordflow">return</span> -val;
<a name="l00136"></a>00136                         }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138                         <span class="keywordflow">return</span> val;
<a name="l00139"></a>00139                 }
<a name="l00140"></a>00140 
<a name="l00141"></a>00141 
<a name="l00142"></a>00142                 <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;
<a name="l00144"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a8f8bcd65f9a358ed5ef30b71e386aa4a">00144</a>                 <span class="keyword">inline</span> T <a class="code" href="namespacegbmath_1_1scalar.htm#a8f8bcd65f9a358ed5ef30b71e386aa4a" title="Calculate the linear interpolation.">lerp</a>( <span class="keywordtype">float</span> alpha, <span class="keyword">const</span> T&amp; v0, <span class="keyword">const</span> T&amp; v1 ) <span class="keywordflow">throw</span>()
<a name="l00145"></a>00145                 {
<a name="l00146"></a>00146                         <span class="keywordflow">return</span>( (T)(v0 + alpha * ( v1 - v0 )) );
<a name="l00147"></a>00147                 }
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 
<a name="l00150"></a>00150                 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00152"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a68ba8c80a2182da852ddfaa1d39bf061">00152</a>                 <span class="keyword">inline</span> T <a class="code" href="namespacegbmath_1_1scalar.htm#a68ba8c80a2182da852ddfaa1d39bf061" title="reduction in the range between">clamp</a>( <span class="keyword">const</span> T&amp; v, <span class="keyword">const</span> T&amp; l, <span class="keyword">const</span> T&amp; u ) <span class="keywordflow">throw</span>()
<a name="l00153"></a>00153                 {
<a name="l00154"></a>00154                         <span class="keywordflow">return</span> min(u, max(l,v));
<a name="l00155"></a>00155                 }
<a name="l00156"></a>00156 
<a name="l00157"></a>00157 
<a name="l00158"></a>00158                 <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;
<a name="l00160"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a2a409b9ea0e94d6a55342f35a3b2495c">00160</a>                 <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a2a409b9ea0e94d6a55342f35a3b2495c" title="fill the buffer dest value val number num.">fill</a>( T * dest, <span class="keyword">const</span> T val, <span class="keyword">const</span> <span class="keywordtype">int</span> num ) <span class="keywordflow">throw</span>()
<a name="l00161"></a>00161                 {
<a name="l00162"></a>00162                         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; num; i++)
<a name="l00163"></a>00163                         {
<a name="l00164"></a>00164                                 dest[i] = val;
<a name="l00165"></a>00165                         }
<a name="l00166"></a>00166                 }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 <span class="comment">//              template&lt;typename T, const unsigned int num&gt;</span>
<a name="l00169"></a>00169 <span class="comment">//              //! \brief   copy</span>
<a name="l00170"></a>00170 <span class="comment">//              inline void copy( T * dest, const T * val, const int num ) throw()</span>
<a name="l00171"></a>00171 <span class="comment">//              {</span>
<a name="l00172"></a>00172 <span class="comment">//                      for (int i = 0; i &lt; num; i++)</span>
<a name="l00173"></a>00173 <span class="comment">//                      {</span>
<a name="l00174"></a>00174 <span class="comment">//                              dest[i] = val[i];</span>
<a name="l00175"></a>00175 <span class="comment">//                      }</span>
<a name="l00176"></a>00176 <span class="comment">//              }</span>
<a name="l00177"></a>00177 
<a name="l00178"></a>00178 
<a name="l00179"></a>00179 
<a name="l00184"></a><a class="code" href="namespacegbmath_1_1scalar.htm#aa7659c9659e5d4d5b61848c6e1a6d829">00184</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span>  <a class="code" href="namespacegbmath_1_1scalar.htm#aa7659c9659e5d4d5b61848c6e1a6d829" title="Returns the sign of   x&amp;gt;0 : 1   x=0 : 0   x&amp;lt;0 : -1.">sign</a> (<span class="keyword">const</span> <span class="keywordtype">float</span> val)
<a name="l00185"></a>00185         {
<a name="l00186"></a>00186             <span class="keywordflow">if</span>(val==0.0f)
<a name="l00187"></a>00187                   <span class="keywordflow">return</span> 0.0f;
<a name="l00188"></a>00188 
<a name="l00189"></a>00189                 <span class="keywordflow">if</span>(val&gt;0.0f)
<a name="l00190"></a>00190                   <span class="keywordflow">return</span> 1.0f;
<a name="l00191"></a>00191 
<a name="l00192"></a>00192                 <span class="keywordflow">return</span> -1.0f;
<a name="l00193"></a>00193         }
<a name="l00194"></a>00194 
<a name="l00199"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a96481b1823622bebaad8b71e708cdf45">00199</a>         <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a96481b1823622bebaad8b71e708cdf45" title="Returns the sign of   x&amp;gt;0 : 1   x=0 : 0   x&amp;lt;0 : -1.">sign2</a>(<span class="keywordtype">float</span> x)
<a name="l00200"></a>00200         {
<a name="l00201"></a>00201                 <span class="keywordflow">return</span>  (x&gt;0)-(x&lt;0);
<a name="l00202"></a>00202         }
<a name="l00203"></a>00203 
<a name="l00204"></a>00204 
<a name="l00206"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a0a45e2f088c51c9da299f823b088d15c">00206</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a0a45e2f088c51c9da299f823b088d15c" title="Отсечение значения в пределах между минимумом...">clump</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> _min, <span class="keywordtype">float</span> _max)
<a name="l00207"></a>00207         {
<a name="l00208"></a>00208               <span class="keywordtype">float</span> r = value;
<a name="l00209"></a>00209             <span class="keywordflow">if</span>(r &lt; _min) r=_min;
<a name="l00210"></a>00210             <span class="keywordflow">if</span>(r &gt; _max) r=_max;
<a name="l00211"></a>00211               <span class="keywordflow">return</span> r;
<a name="l00212"></a>00212         }
<a name="l00213"></a>00213 
<a name="l00215"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a7bb171728d757d6772d3a398b84fe002">00215</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a7bb171728d757d6772d3a398b84fe002" title="sine and cosine.">sincos</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> a, <span class="keywordtype">float</span>&amp; outSin, <span class="keywordtype">float</span>&amp; outCos) 
<a name="l00216"></a>00216         {  
<a name="l00217"></a>00217                 outSin = sin(a); 
<a name="l00218"></a>00218                 outCos = cos(a); 
<a name="l00219"></a>00219         }
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 <span class="preprocessor">    #if defined (_MSC_VER)</span>
<a name="l00222"></a>00222 <span class="preprocessor"></span>
<a name="l00224"></a><a class="code" href="namespacegbmath_1_1scalar.htm#afaedfc972df033b238577ac67444c3ed">00224</a>         <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacegbmath_1_1scalar.htm#afaedfc972df033b238577ac67444c3ed" title="ассемблерный способ получить синус и косинус...">sincosAsm</a> (<span class="keywordtype">float</span> a, <span class="keywordtype">float</span>&amp; s, <span class="keywordtype">float</span>&amp; c)
<a name="l00225"></a>00225         {
<a name="l00226"></a>00226                 __asm  {
<a name="l00227"></a>00227                                 fld a;
<a name="l00228"></a>00228                                 fsincos;
<a name="l00229"></a>00229                                 mov eax, [c];
<a name="l00230"></a>00230                                 fstp [eax];
<a name="l00231"></a>00231                                 mov eax, [s];
<a name="l00232"></a>00232                                 fstp [eax];
<a name="l00233"></a>00233                         };
<a name="l00234"></a>00234         };
<a name="l00235"></a>00235 <span class="preprocessor">        #endif</span>
<a name="l00236"></a>00236 <span class="preprocessor"></span>
<a name="l00238"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a1402127afa7e907ac2466778f6331e66">00238</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a1402127afa7e907ac2466778f6331e66" title="Calculate the arc cotangent.">arccot</a>(<span class="keywordtype">float</span> f) <span class="comment">//throw()</span>
<a name="l00239"></a>00239         {
<a name="l00240"></a>00240            <span class="comment">//if(0.0f==f)</span>
<a name="l00241"></a>00241              <span class="comment">// throw std::runtime_error(&quot;Inv arg&quot;);</span>
<a name="l00242"></a>00242            <span class="keywordflow">return</span> atan(1.0f / f);
<a name="l00243"></a>00243         };
<a name="l00244"></a>00244 
<a name="l00246"></a><a class="code" href="namespacegbmath_1_1scalar.htm#ac1e8b236cdc4fe4824eea979052ec1e1">00246</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#ac1e8b236cdc4fe4824eea979052ec1e1" title="Calculate the arc tangent.">arctg</a>(<span class="keywordtype">float</span> y, <span class="keywordtype">float</span> x)
<a name="l00247"></a>00247         {
<a name="l00248"></a>00248                         <span class="comment">//#ifdef __BCPLUSPLUS__</span>
<a name="l00249"></a>00249                         <span class="comment">//      return atan2(y, x);</span>
<a name="l00250"></a>00250                         <span class="comment">//#else</span>
<a name="l00251"></a>00251                                 <span class="keywordflow">return</span> atan2f(y, x);
<a name="l00252"></a>00252                         <span class="comment">//#endif</span>
<a name="l00253"></a>00253         }
<a name="l00254"></a>00254 
<a name="l00259"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a33c8bf545ba86ec1ee2e4a703fca4529">00259</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a33c8bf545ba86ec1ee2e4a703fca4529" title="Same as acos(x), but if x is out of range, it is &amp;quot;clamped&amp;quot; to the nearest...">safeAcos</a>(<span class="keywordtype">float</span> x)
<a name="l00260"></a>00260         {
<a name="l00261"></a>00261                 <span class="comment">// Check limit conditions</span>
<a name="l00262"></a>00262                 <span class="keywordflow">if</span> (x &lt;= -1.0f)
<a name="l00263"></a>00263                 {
<a name="l00264"></a>00264                         <span class="keywordflow">return</span> <a class="code" href="namespacegbmath_1_1constan.htm#adc97d79b13e6cb0eafad99a8bfef01d5" title="PI.">gbmath::constan::PI</a>; <span class="comment">//   constPi &lt;float&gt;(); // kPi;</span>
<a name="l00265"></a>00265                 }
<a name="l00266"></a>00266                 <span class="keywordflow">if</span> (x &gt;= 1.0f)
<a name="l00267"></a>00267                 {
<a name="l00268"></a>00268                         <span class="keywordflow">return</span> 0.0f;
<a name="l00269"></a>00269                 }
<a name="l00270"></a>00270 
<a name="l00271"></a>00271                 <span class="comment">// Value is in the domain - use standard C function</span>
<a name="l00272"></a>00272                 <span class="keywordflow">return</span> acos(x);
<a name="l00273"></a>00273         }
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 
<a name="l00277"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a9ea7893b9f077f6c8c4f16dd10ce4378">00277</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a9ea7893b9f077f6c8c4f16dd10ce4378" title="cotangent">cotan</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> f) 
<a name="l00278"></a>00278         {  
<a name="l00279"></a>00279                 <span class="keywordflow">return</span>   1.0f / tanf(f); 
<a name="l00280"></a>00280         }
<a name="l00281"></a>00281 
<a name="l00283"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a746bb42327223fc612290d7b2c453256">00283</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a746bb42327223fc612290d7b2c453256" title="Angle in radians to degrees.">radiansToDegree</a>(<span class="keywordtype">float</span> rad) 
<a name="l00284"></a>00284         { 
<a name="l00285"></a>00285                 <span class="keywordflow">return</span> rad * ( 180.0f / <a class="code" href="namespacegbmath_1_1constan.htm#adc97d79b13e6cb0eafad99a8bfef01d5" title="PI.">gbmath::constan::PI</a> ); 
<a name="l00286"></a>00286         }
<a name="l00287"></a>00287 
<a name="l00288"></a>00288 
<a name="l00290"></a><a class="code" href="namespacegbmath_1_1scalar.htm#ad52f647cda331b3f6a1529fe84fe5b3d">00290</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#ad52f647cda331b3f6a1529fe84fe5b3d" title="Angle in degrees to radians.">degreeToRadians</a>(<span class="keywordtype">float</span> dgr)  
<a name="l00291"></a>00291         { 
<a name="l00292"></a>00292                 <span class="keywordflow">return</span> dgr * ( <a class="code" href="namespacegbmath_1_1constan.htm#adc97d79b13e6cb0eafad99a8bfef01d5" title="PI.">gbmath::constan::PI</a> / 180.0f); 
<a name="l00293"></a>00293         }
<a name="l00294"></a>00294 
<a name="l00296"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a05a12a21b974985616075a457baf6167">00296</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a05a12a21b974985616075a457baf6167" title="Normalization of the angle of rotation angle. Cast the value in the range -PI .....">normalize_angle</a>( <span class="keywordtype">float</span> angle )
<a name="l00297"></a>00297         {
<a name="l00298"></a>00298                 <span class="keyword">static</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> _PI_ = 3.1415926535898f;
<a name="l00299"></a>00299                 <span class="keyword">static</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> TWO_PI = 6.2831853071795865f;
<a name="l00300"></a>00300 
<a name="l00301"></a>00301                 <span class="keywordflow">return</span> (angle - TWO_PI *  floor( ( angle + _PI_ ) / TWO_PI) );
<a name="l00302"></a>00302         }
<a name="l00303"></a>00303 
<a name="l00304"></a>00304 
<a name="l00306"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a0a297404eafa1d5e5cec2a18390605d3">00306</a>     <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a8f8bcd65f9a358ed5ef30b71e386aa4a" title="Calculate the linear interpolation.">lerp</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> f1, <span class="keyword">const</span> <span class="keywordtype">float</span> f2, <span class="keyword">const</span> <span class="keywordtype">float</span> k) 
<a name="l00307"></a>00307         { 
<a name="l00308"></a>00308                 <span class="keywordflow">return</span> f1 + (f2 - f1) * k; 
<a name="l00309"></a>00309         }
<a name="l00310"></a>00310 
<a name="l00312"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a2b5aa61e53f899d578b577e41ef3242b">00312</a>         <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a2b5aa61e53f899d578b577e41ef3242b" title="rounding .">round</a>(<span class="keywordtype">float</span> f) 
<a name="l00313"></a>00313         {  
<a name="l00314"></a>00314                 <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)(f + (f &gt; 0 ? 0.5f : -0.5f));  
<a name="l00315"></a>00315         }
<a name="l00316"></a>00316 
<a name="l00317"></a>00317 <span class="preprocessor">        #if defined (_MSC_VER)</span>
<a name="l00318"></a>00318 <span class="preprocessor"></span>
<a name="l00320"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a0de178dfbf28edac4aedccf18486a2d8">00320</a>         <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a0de178dfbf28edac4aedccf18486a2d8" title="rounding asm .">roundAsm</a>(<span class="keywordtype">float</span> a)
<a name="l00321"></a>00321         {
<a name="l00322"></a>00322            <span class="keyword">register</span> <span class="keywordtype">int</span> retval;
<a name="l00323"></a>00323                  __asm fld a
<a name="l00324"></a>00324                  __asm fistp retval
<a name="l00325"></a>00325                            <span class="keywordflow">return</span> retval;
<a name="l00326"></a>00326         }
<a name="l00327"></a>00327 
<a name="l00328"></a>00328 <span class="preprocessor">        #endif</span>
<a name="l00329"></a>00329 <span class="preprocessor"></span>
<a name="l00330"></a>00330 
<a name="l00332"></a><a class="code" href="namespacegbmath_1_1scalar.htm#a9992e9897eed646bd6d1ff69e558aef6">00332</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span>   <a class="code" href="namespacegbmath_1_1scalar.htm#a9992e9897eed646bd6d1ff69e558aef6" title="Get an average of 3 values.">max3</a> ( <span class="keywordtype">float</span> a, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> c ) 
<a name="l00333"></a>00333         { 
<a name="l00334"></a>00334                 <span class="keywordflow">return</span> a &gt; b ? (a &gt; c ? a : (b &gt; c ? b : c)) : (b &gt; c ? b : (a &gt; c ? a : c));  
<a name="l00335"></a>00335         }
<a name="l00336"></a>00336 
<a name="l00337"></a>00337 
<a name="l00338"></a>00338 
<a name="l00340"></a><a class="code" href="namespacegbmath_1_1scalar.htm#abb531b140c3423b565da23292c419068">00340</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#abb531b140c3423b565da23292c419068" title="Compute and return the average (arithmetic).">aver_a</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pf, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num)
<a name="l00341"></a>00341         {
<a name="l00342"></a>00342                 <span class="keywordtype">float</span> r = 0.0f;
<a name="l00343"></a>00343                 <span class="keywordflow">if</span>(num==0) 
<a name="l00344"></a>00344                         <span class="keywordflow">return</span> r;
<a name="l00345"></a>00345 
<a name="l00346"></a>00346                 <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c=0; c&lt;num; c++)
<a name="l00347"></a>00347                 {
<a name="l00348"></a>00348                         r +=  *( pf + c );
<a name="l00349"></a>00349                 }
<a name="l00350"></a>00350 
<a name="l00351"></a>00351                 <span class="keywordflow">return</span> r / (float)num;
<a name="l00352"></a>00352         }
<a name="l00353"></a>00353 
<a name="l00355"></a><a class="code" href="namespacegbmath_1_1scalar.htm#ad4fb4a3a96860173befbfcb18be1875a">00355</a>         <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#ad4fb4a3a96860173befbfcb18be1875a" title="Compute and return the geometric mean.">aver_g</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pf, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num)
<a name="l00356"></a>00356         {
<a name="l00357"></a>00357                 <span class="keywordtype">float</span> r = 1.0f;
<a name="l00358"></a>00358                 <span class="keywordflow">if</span>(num==0) 
<a name="l00359"></a>00359                         <span class="keywordflow">return</span> r;
<a name="l00360"></a>00360 
<a name="l00361"></a>00361                 <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c=0; c&lt;num; c++)
<a name="l00362"></a>00362                 {
<a name="l00363"></a>00363                         r *=  *( pf + c );
<a name="l00364"></a>00364                 }
<a name="l00365"></a>00365 
<a name="l00366"></a>00366                 <span class="keywordflow">return</span>   pow( r, 1.0f/(<span class="keywordtype">float</span>)num );
<a name="l00367"></a>00367         }
<a name="l00368"></a>00368 
<a name="l00370"></a>00370         <span class="keywordtype">float</span> <a class="code" href="namespacegbmath_1_1scalar.htm#a8324059e0e7161c5e65e0629266c0e6b" title="Получение случайного значения в диапазоне (...">random</a>();
<a name="l00371"></a>00371 
<a name="l00372"></a>00372 
<a name="l00373"></a>00373 
<a name="l00374"></a>00374         <span class="comment">//---------------------------------------------------------------------</span>
<a name="l00375"></a>00375 
<a name="l00376"></a>00376         }
<a name="l00377"></a>00377 
<a name="l00378"></a>00378 }
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Tue May 22 10:25:54 2012 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
