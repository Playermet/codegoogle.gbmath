<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: Lesson1.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="dir_1a33ad1a190a40dd16f4a9866e4d342c.htm">Lesson01_opengl</a>
  </div>
</div>
<div class="contents">
<h1>Lesson1.cpp</h1><a href="_lesson1_8cpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> *              This Code Was Created By Jeff Molofee 2000</span>
<a name="l00003"></a>00003 <span class="comment"> *              A HUGE Thanks To Fredric Echols For Cleaning Up</span>
<a name="l00004"></a>00004 <span class="comment"> *              And Optimizing This Code, Making It More Flexible!</span>
<a name="l00005"></a>00005 <span class="comment"> *              If You&#39;ve Found This Code Useful, Please Let Me Know.</span>
<a name="l00006"></a>00006 <span class="comment"> *              Visit My Site At nehe.gamedev.net</span>
<a name="l00007"></a>00007 <span class="comment"> */</span>
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;windows.h&gt;</span>            <span class="comment">// Header File For Windows</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &lt;gl\gl.h&gt;</span>                      <span class="comment">// Header File For The OpenGL32 Library</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &lt;gl\glu.h&gt;</span>                     <span class="comment">// Header File For The GLu32 Library</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;gl\glaux.h&gt;</span>           <span class="comment">// Header File For The Glaux Library</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;../_gbmath.h&quot;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a><a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">00016</a> HDC                     <a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>=NULL;               <span class="comment">// Private GDI Device Context</span>
<a name="l00017"></a><a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">00017</a> HGLRC           <a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">hRC</a>=NULL;               <span class="comment">// Permanent Rendering Context</span>
<a name="l00018"></a><a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">00018</a> HWND            <a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>=NULL;              <span class="comment">// Holds Our Window Handle</span>
<a name="l00019"></a><a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">00019</a> HINSTANCE       <a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>;              <span class="comment">// Holds The Instance Of The Application</span>
<a name="l00020"></a>00020 
<a name="l00021"></a><a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">00021</a> <span class="keywordtype">bool</span>    <a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">keys</a>[256];                      <span class="comment">// Array Used For The Keyboard Routine</span>
<a name="l00022"></a><a class="code" href="_lesson1_8cpp.htm#a03c996f9fcf0e10baeb3e700be0c409a">00022</a> <span class="keywordtype">bool</span>    <a class="code" href="_lesson1_8cpp.htm#a03c996f9fcf0e10baeb3e700be0c409a">active</a>=<a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;            <span class="comment">// Window Active Flag Set To TRUE By Default</span>
<a name="l00023"></a><a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">00023</a> <span class="keywordtype">bool</span>    <a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>=<a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;        <span class="comment">// Fullscreen Flag Set To Fullscreen Mode By Default</span>
<a name="l00024"></a>00024 
<a name="l00025"></a><a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">00025</a> gbmath::model_view_camera <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>;
<a name="l00026"></a>00026 <span class="keyword">using namespace </span>gbmath; 
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 
<a name="l00029"></a><a class="code" href="_lesson1_8cpp.htm#a09b6564e173f3c8e10aa77bb1fc7c86b">00029</a> <span class="keywordtype">void</span> <a class="code" href="_lesson1_8cpp.htm#a09b6564e173f3c8e10aa77bb1fc7c86b">__draw_cube</a>()
<a name="l00030"></a>00030         {
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00033"></a>00033         glBegin(GL_QUADS);
<a name="l00034"></a>00034         <span class="comment">// Front Face</span>
<a name="l00035"></a>00035         glNormal3f( 0.0f, 0.0f, 1.0f);
<a name="l00036"></a>00036         glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f,  1.0f);
<a name="l00037"></a>00037         glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f,  1.0f);
<a name="l00038"></a>00038         glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);
<a name="l00039"></a>00039         glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);
<a name="l00040"></a>00040         <span class="comment">// Back Face</span>
<a name="l00041"></a>00041         glNormal3f( 0.0f, 0.0f,-1.0f);
<a name="l00042"></a>00042         glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);
<a name="l00043"></a>00043         glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);
<a name="l00044"></a>00044         glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f);
<a name="l00045"></a>00045         glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f);
<a name="l00046"></a>00046         <span class="comment">// Top Face</span>
<a name="l00047"></a>00047         glNormal3f( 0.0f, 1.0f, 0.0f);
<a name="l00048"></a>00048         glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);
<a name="l00049"></a>00049         glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);
<a name="l00050"></a>00050         glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f,  1.0f,  1.0f);
<a name="l00051"></a>00051         glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f,  1.0f,  1.0f);
<a name="l00052"></a>00052         <span class="comment">// Bottom Face</span>
<a name="l00053"></a>00053         glNormal3f( 0.0f,-1.0f, 0.0f);
<a name="l00054"></a>00054         glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);
<a name="l00055"></a>00055         glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);
<a name="l00056"></a>00056         glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, -1.0f, -1.0f);
<a name="l00057"></a>00057         glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, -1.0f, -1.0f);
<a name="l00058"></a>00058         <span class="comment">// Right Face</span>
<a name="l00059"></a>00059         glNormal3f( 1.0f, 0.0f, 0.0f);
<a name="l00060"></a>00060         glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f);
<a name="l00061"></a>00061         glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);
<a name="l00062"></a>00062         glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f,  1.0f,  1.0f);
<a name="l00063"></a>00063         glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);
<a name="l00064"></a>00064         <span class="comment">// Left Face</span>
<a name="l00065"></a>00065         glNormal3f(-1.0f, 0.0f, 0.0f);
<a name="l00066"></a>00066         glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f);
<a name="l00067"></a>00067         glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);
<a name="l00068"></a>00068         glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f,  1.0f,  1.0f);
<a name="l00069"></a>00069         glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);
<a name="l00070"></a>00070         glEnd();
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 
<a name="l00073"></a>00073         }
<a name="l00074"></a>00074 
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 LRESULT CALLBACK <a class="code" href="_lesson1_8cpp.htm#a9135ea2a0d6fce68ba3b858226a31a4f">WndProc</a>(HWND, UINT, WPARAM, LPARAM);   <span class="comment">// Declaration For WndProc</span>
<a name="l00078"></a>00078 
<a name="l00079"></a><a class="code" href="_lesson1_8cpp.htm#a87bb84d489df61ed7b0c002584fd984f">00079</a> GLvoid <a class="code" href="_lesson1_8cpp.htm#a87bb84d489df61ed7b0c002584fd984f">ReSizeGLScene</a>(GLsizei width, GLsizei height)             <span class="comment">// Resize And Initialize The GL Window</span>
<a name="l00080"></a>00080 {
<a name="l00081"></a>00081         <span class="keywordflow">if</span> (height==0)                                                                          <span class="comment">// Prevent A Divide By Zero By</span>
<a name="l00082"></a>00082         {
<a name="l00083"></a>00083                 height=1;                                                                               <span class="comment">// Making Height Equal One</span>
<a name="l00084"></a>00084         }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086         glViewport(0,0,width,height);                                           <span class="comment">// Reset The Current Viewport</span>
<a name="l00087"></a>00087 
<a name="l00088"></a>00088 
<a name="l00089"></a>00089 
<a name="l00090"></a>00090         glMatrixMode(GL_PROJECTION);                                            <span class="comment">// Select The Projection Matrix</span>
<a name="l00091"></a>00091         glLoadIdentity();                                                                       <span class="comment">// Reset The Projection Matrix</span>
<a name="l00092"></a>00092 
<a name="l00093"></a>00093         <span class="comment">// Calculate The Aspect Ratio Of The Window</span>
<a name="l00094"></a>00094         gluPerspective(45.0f,(GLfloat)width/(GLfloat)height,0.1f,100.0f  );
<a name="l00095"></a>00095 
<a name="l00096"></a>00096         <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>.setProjParams( <a class="code" href="namespacegbmath_1_1constan.htm#adc97d79b13e6cb0eafad99a8bfef01d5" title="PI.">gbmath::constan::PI</a>/4.0f,(GLfloat)width/(GLfloat)height,0.1f,100.0f   );
<a name="l00097"></a>00097         <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>.setWindow(  width , height  );
<a name="l00098"></a>00098 
<a name="l00099"></a>00099         glMatrixMode(GL_MODELVIEW);                                                     <span class="comment">// Select The Modelview Matrix</span>
<a name="l00100"></a>00100         glLoadIdentity();                                                                       <span class="comment">// Reset The Modelview Matrix</span>
<a name="l00101"></a>00101 }
<a name="l00102"></a>00102 
<a name="l00103"></a><a class="code" href="_lesson1_8cpp.htm#aa4c387d3f1ebce6d57684b6a10c9b0ae">00103</a> <span class="keywordtype">int</span> <a class="code" href="_lesson1_8cpp.htm#aa4c387d3f1ebce6d57684b6a10c9b0ae">InitGL</a>(GLvoid)                                                                              <span class="comment">// All Setup For OpenGL Goes Here</span>
<a name="l00104"></a>00104 {
<a name="l00105"></a>00105         glShadeModel(GL_SMOOTH);                                                        <span class="comment">// Enable Smooth Shading</span>
<a name="l00106"></a>00106         glClearColor(0.0f, 0.0f, 0.0f, 0.5f);                           <span class="comment">// Black Background</span>
<a name="l00107"></a>00107         glClearDepth(1.0f);                                                                     <span class="comment">// Depth Buffer Setup</span>
<a name="l00108"></a>00108         glEnable(GL_DEPTH_TEST);                                                        <span class="comment">// Enables Depth Testing</span>
<a name="l00109"></a>00109         glDepthFunc(GL_LEQUAL);                                                         <span class="comment">// The Type Of Depth Testing To Do</span>
<a name="l00110"></a>00110         glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);      <span class="comment">// Really Nice Perspective Calculations</span>
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 
<a name="l00113"></a>00113         <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>.setViewParams( <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>( 5.0f , 0.0f, 0.0f ), <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>( 0.0f, 0.0f , 0.0f ) );
<a name="l00114"></a>00114 
<a name="l00115"></a>00115         <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                                                            <span class="comment">// Initialization Went OK</span>
<a name="l00116"></a>00116 }
<a name="l00117"></a>00117 
<a name="l00118"></a><a class="code" href="_lesson1_8cpp.htm#a52061247bdaeb770e3a1d59eefaad972">00118</a> <span class="keywordtype">int</span> <a class="code" href="_lesson1_8cpp.htm#a52061247bdaeb770e3a1d59eefaad972">DrawGLScene</a>(GLvoid)                                                                 <span class="comment">// Here&#39;s Where We Do All The Drawing</span>
<a name="l00119"></a>00119 {
<a name="l00120"></a>00120         glClearColor(0.0f, 0.0f , 1.0f , 0.0f );
<a name="l00121"></a>00121         glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);     <span class="comment">// Clear Screen And Depth Buffer</span>
<a name="l00122"></a>00122         glMatrixMode(GL_MODELVIEW);
<a name="l00123"></a>00123         glLoadIdentity();                                                                       <span class="comment">// Reset The Current Modelview Matrix</span>
<a name="l00124"></a>00124 
<a name="l00125"></a>00125 
<a name="l00126"></a>00126  
<a name="l00127"></a>00127          gbmath::drawer drawer;
<a name="l00128"></a>00128          
<a name="l00129"></a>00129 
<a name="l00130"></a>00130           <span class="comment">//drawer.set_transform_matrix_proj( g_camera.getProjMatrix() );</span>
<a name="l00131"></a>00131 
<a name="l00132"></a>00132          <a class="code" href="structgbmath_1_1mat44.htm" title="matrix 4x4.">mat44</a> world (1.0f);
<a name="l00133"></a>00133                          <span class="keyword">static</span> <span class="keywordtype">float</span> curr_time = 0.0f;
<a name="l00134"></a>00134                          curr_time = 0.001f * (float)::GetTickCount();
<a name="l00135"></a>00135         <span class="comment">// world.setRotationY(  curr_time  ) ;</span>
<a name="l00136"></a>00136          drawer.set_transform_matrix_world(world);
<a name="l00137"></a>00137                                                                                  
<a name="l00138"></a>00138  
<a name="l00139"></a>00139          drawer.set_transform_matrix_view( <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>.getViewMatrix() );
<a name="l00140"></a>00140  
<a name="l00141"></a>00141         <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>.frameMove( 1.0f );
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 
<a name="l00144"></a>00144         drawer.set_color_green();
<a name="l00145"></a>00145     <a class="code" href="_lesson1_8cpp.htm#a09b6564e173f3c8e10aa77bb1fc7c86b">__draw_cube</a>();
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 
<a name="l00148"></a>00148         drawer.set_color_red();
<a name="l00149"></a>00149         drawer.draw_line( <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0.0f , 0.0f, 0.0f ) , <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0.0f , 10.0f , 0.0f) );
<a name="l00150"></a>00150 
<a name="l00151"></a>00151 
<a name="l00152"></a>00152 
<a name="l00153"></a>00153         <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                                                            <span class="comment">// Everything Went OK</span>
<a name="l00154"></a>00154 }
<a name="l00155"></a>00155 
<a name="l00156"></a><a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">00156</a> GLvoid <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>(GLvoid)                                                             <span class="comment">// Properly Kill The Window</span>
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>)                                                                         <span class="comment">// Are We In Fullscreen Mode?</span>
<a name="l00159"></a>00159         {
<a name="l00160"></a>00160                 ChangeDisplaySettings(NULL,0);                                  <span class="comment">// If So Switch Back To The Desktop</span>
<a name="l00161"></a>00161                 ShowCursor(<a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>);                                                               <span class="comment">// Show Mouse Pointer</span>
<a name="l00162"></a>00162         }
<a name="l00163"></a>00163 
<a name="l00164"></a>00164         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">hRC</a>)                                                                                        <span class="comment">// Do We Have A Rendering Context?</span>
<a name="l00165"></a>00165         {
<a name="l00166"></a>00166                 <span class="keywordflow">if</span> (!wglMakeCurrent(NULL,NULL))                                 <span class="comment">// Are We Able To Release The DC And RC Contexts?</span>
<a name="l00167"></a>00167                 {
<a name="l00168"></a>00168                         MessageBoxA(NULL,<span class="stringliteral">&quot;Release Of DC And RC Failed.&quot;</span>,<span class="stringliteral">&quot;SHUTDOWN ERROR&quot;</span>,MB_OK | MB_ICONINFORMATION);
<a name="l00169"></a>00169                 }
<a name="l00170"></a>00170 
<a name="l00171"></a>00171                 <span class="keywordflow">if</span> (!wglDeleteContext(<a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">hRC</a>))                                             <span class="comment">// Are We Able To Delete The RC?</span>
<a name="l00172"></a>00172                 {
<a name="l00173"></a>00173                         MessageBoxA(NULL,<span class="stringliteral">&quot;Release Rendering Context Failed.&quot;</span>,<span class="stringliteral">&quot;SHUTDOWN ERROR&quot;</span>,MB_OK | MB_ICONINFORMATION);
<a name="l00174"></a>00174                 }
<a name="l00175"></a>00175                 <a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">hRC</a>=NULL;                                                                               <span class="comment">// Set RC To NULL</span>
<a name="l00176"></a>00176         }
<a name="l00177"></a>00177 
<a name="l00178"></a>00178         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a> &amp;&amp; !ReleaseDC(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>,<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>))                                        <span class="comment">// Are We Able To Release The DC</span>
<a name="l00179"></a>00179         {
<a name="l00180"></a>00180                 MessageBoxA(NULL,<span class="stringliteral">&quot;Release Device Context Failed.&quot;</span>,<span class="stringliteral">&quot;SHUTDOWN ERROR&quot;</span>,MB_OK | MB_ICONINFORMATION);
<a name="l00181"></a>00181                 <a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>=NULL;                                                                               <span class="comment">// Set DC To NULL</span>
<a name="l00182"></a>00182         }
<a name="l00183"></a>00183 
<a name="l00184"></a>00184         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a> &amp;&amp; !DestroyWindow(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>))                                       <span class="comment">// Are We Able To Destroy The Window?</span>
<a name="l00185"></a>00185         {
<a name="l00186"></a>00186                 MessageBoxA(NULL,<span class="stringliteral">&quot;Could Not Release hWnd.&quot;</span>,<span class="stringliteral">&quot;SHUTDOWN ERROR&quot;</span>,MB_OK | MB_ICONINFORMATION);
<a name="l00187"></a>00187                 <a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>=NULL;                                                                              <span class="comment">// Set hWnd To NULL</span>
<a name="l00188"></a>00188         }
<a name="l00189"></a>00189 
<a name="l00190"></a>00190         <span class="keywordflow">if</span> (!UnregisterClassW(L<span class="stringliteral">&quot;OpenGL&quot;</span>,<a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>))                     <span class="comment">// Are We Able To Unregister Class</span>
<a name="l00191"></a>00191         {
<a name="l00192"></a>00192                 MessageBoxA(NULL,<span class="stringliteral">&quot;Could Not Unregister Class.&quot;</span>,<span class="stringliteral">&quot;SHUTDOWN ERROR&quot;</span>,MB_OK | MB_ICONINFORMATION);
<a name="l00193"></a>00193                 <a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>=NULL;                                                                 <span class="comment">// Set hInstance To NULL</span>
<a name="l00194"></a>00194         }
<a name="l00195"></a>00195 }
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 <span class="comment">/*      This Code Creates Our OpenGL Window.  Parameters Are:                                   *</span>
<a name="l00198"></a>00198 <span class="comment"> *      title                   - Title To Appear At The Top Of The Window                              *</span>
<a name="l00199"></a>00199 <span class="comment"> *      width                   - Width Of The GL Window Or Fullscreen Mode                             *</span>
<a name="l00200"></a>00200 <span class="comment"> *      height                  - Height Of The GL Window Or Fullscreen Mode                    *</span>
<a name="l00201"></a>00201 <span class="comment"> *      bits                    - Number Of Bits To Use For Color (8/16/24/32)                  *</span>
<a name="l00202"></a>00202 <span class="comment"> *      fullscreenflag  - Use Fullscreen Mode (TRUE) Or Windowed Mode (FALSE)   */</span>
<a name="l00203"></a>00203  
<a name="l00204"></a><a class="code" href="_lesson1_8cpp.htm#ad89ffd22a029a06b99b2e31efd8b862c">00204</a> BOOL <a class="code" href="_lesson1_8cpp.htm#ad89ffd22a029a06b99b2e31efd8b862c">CreateGLWindow</a>(WCHAR* title, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> bits, <span class="keywordtype">bool</span> fullscreenflag)
<a name="l00205"></a>00205 {
<a name="l00206"></a>00206         GLuint          PixelFormat;                    <span class="comment">// Holds The Results After Searching For A Match</span>
<a name="l00207"></a>00207         WNDCLASS        wc;                                             <span class="comment">// Windows Class Structure</span>
<a name="l00208"></a>00208         DWORD           dwExStyle;                              <span class="comment">// Window Extended Style</span>
<a name="l00209"></a>00209         DWORD           dwStyle;                                <span class="comment">// Window Style</span>
<a name="l00210"></a>00210         RECT            WindowRect;                             <span class="comment">// Grabs Rectangle Upper Left / Lower Right Values</span>
<a name="l00211"></a>00211         WindowRect.left=(long)0;                        <span class="comment">// Set Left Value To 0</span>
<a name="l00212"></a>00212         WindowRect.right=(long)width;           <span class="comment">// Set Right Value To Requested Width</span>
<a name="l00213"></a>00213         WindowRect.top=(long)0;                         <span class="comment">// Set Top Value To 0</span>
<a name="l00214"></a>00214         WindowRect.bottom=(long)height;         <span class="comment">// Set Bottom Value To Requested Height</span>
<a name="l00215"></a>00215 
<a name="l00216"></a>00216         <a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>=fullscreenflag;                      <span class="comment">// Set The Global Fullscreen Flag</span>
<a name="l00217"></a>00217 
<a name="l00218"></a>00218         <a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>                       = GetModuleHandle(NULL);                                <span class="comment">// Grab An Instance For Our Window</span>
<a name="l00219"></a>00219         wc.style                        = CS_HREDRAW | CS_VREDRAW | CS_OWNDC;   <span class="comment">// Redraw On Size, And Own DC For Window.</span>
<a name="l00220"></a>00220         wc.lpfnWndProc          = (WNDPROC) <a class="code" href="_lesson1_8cpp.htm#a9135ea2a0d6fce68ba3b858226a31a4f">WndProc</a>;                                    <span class="comment">// WndProc Handles Messages</span>
<a name="l00221"></a>00221         wc.cbClsExtra           = 0;                                                                    <span class="comment">// No Extra Window Data</span>
<a name="l00222"></a>00222         wc.cbWndExtra           = 0;                                                                    <span class="comment">// No Extra Window Data</span>
<a name="l00223"></a>00223         wc.hInstance            = <a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>;                                                    <span class="comment">// Set The Instance</span>
<a name="l00224"></a>00224         wc.hIcon                        = LoadIcon(NULL, IDI_WINLOGO);                  <span class="comment">// Load The Default Icon</span>
<a name="l00225"></a>00225         wc.hCursor                      = LoadCursor(NULL, IDC_ARROW);                  <span class="comment">// Load The Arrow Pointer</span>
<a name="l00226"></a>00226         wc.hbrBackground        = NULL;                                                                 <span class="comment">// No Background Required For GL</span>
<a name="l00227"></a>00227         wc.lpszMenuName         = NULL;                                                                 <span class="comment">// We Don&#39;t Want A Menu</span>
<a name="l00228"></a>00228         wc.lpszClassName        = L<span class="stringliteral">&quot;OpenGL&quot;</span>;                                                            <span class="comment">// Set The Class Name</span>
<a name="l00229"></a>00229 
<a name="l00230"></a>00230         <span class="keywordflow">if</span> (!RegisterClass(&amp;wc))                                                                        <span class="comment">// Attempt To Register The Window Class</span>
<a name="l00231"></a>00231         {
<a name="l00232"></a>00232                 MessageBoxA(NULL,<span class="stringliteral">&quot;Failed To Register The Window Class.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00233"></a>00233                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                                                   <span class="comment">// Return FALSE</span>
<a name="l00234"></a>00234         }
<a name="l00235"></a>00235         
<a name="l00236"></a>00236         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>)                                                                                         <span class="comment">// Attempt Fullscreen Mode?</span>
<a name="l00237"></a>00237         {
<a name="l00238"></a>00238                 DEVMODE dmScreenSettings;                                                               <span class="comment">// Device Mode</span>
<a name="l00239"></a>00239                 memset(&amp;dmScreenSettings,0,<span class="keyword">sizeof</span>(dmScreenSettings));   <span class="comment">// Makes Sure Memory&#39;s Cleared</span>
<a name="l00240"></a>00240                 dmScreenSettings.dmSize=<span class="keyword">sizeof</span>(dmScreenSettings);               <span class="comment">// Size Of The Devmode Structure</span>
<a name="l00241"></a>00241                 dmScreenSettings.dmPelsWidth    = width;                                <span class="comment">// Selected Screen Width</span>
<a name="l00242"></a>00242                 dmScreenSettings.dmPelsHeight   = height;                               <span class="comment">// Selected Screen Height</span>
<a name="l00243"></a>00243                 dmScreenSettings.dmBitsPerPel   = bits;                                 <span class="comment">// Selected Bits Per Pixel</span>
<a name="l00244"></a>00244                 dmScreenSettings.dmFields=DM_BITSPERPEL|DM_PELSWIDTH|DM_PELSHEIGHT;
<a name="l00245"></a>00245 
<a name="l00246"></a>00246                 <span class="comment">// Try To Set Selected Mode And Get Results.  NOTE: CDS_FULLSCREEN Gets Rid Of Start Bar.</span>
<a name="l00247"></a>00247                 <span class="keywordflow">if</span> (ChangeDisplaySettings(&amp;dmScreenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL)
<a name="l00248"></a>00248                 {
<a name="l00249"></a>00249                         <span class="comment">// If The Mode Fails, Offer Two Options.  Quit Or Use Windowed Mode.</span>
<a name="l00250"></a>00250                         <span class="keywordflow">if</span> (MessageBoxA(NULL,<span class="stringliteral">&quot;The Requested Fullscreen Mode Is Not Supported By\nYour Video Card. Use Windowed Mode Instead?&quot;</span>,<span class="stringliteral">&quot;NeHe GL&quot;</span>,MB_YESNO|MB_ICONEXCLAMATION)==IDYES)
<a name="l00251"></a>00251                         {
<a name="l00252"></a>00252                                 <a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>=<a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;               <span class="comment">// Windowed Mode Selected.  Fullscreen = FALSE</span>
<a name="l00253"></a>00253                         }
<a name="l00254"></a>00254                         <span class="keywordflow">else</span>
<a name="l00255"></a>00255                         {
<a name="l00256"></a>00256                                 <span class="comment">// Pop Up A Message Box Letting User Know The Program Is Closing.</span>
<a name="l00257"></a>00257                                 MessageBoxA(NULL,<span class="stringliteral">&quot;Program Will Now Close.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONSTOP);
<a name="l00258"></a>00258                                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                                   <span class="comment">// Return FALSE</span>
<a name="l00259"></a>00259                         }
<a name="l00260"></a>00260                 }
<a name="l00261"></a>00261         }
<a name="l00262"></a>00262 
<a name="l00263"></a>00263         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>)                                                                                         <span class="comment">// Are We Still In Fullscreen Mode?</span>
<a name="l00264"></a>00264         {
<a name="l00265"></a>00265                 dwExStyle=WS_EX_APPWINDOW;                                                              <span class="comment">// Window Extended Style</span>
<a name="l00266"></a>00266                 dwStyle=WS_POPUP;                                                                               <span class="comment">// Windows Style</span>
<a name="l00267"></a>00267                 ShowCursor(<a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>);                                                                              <span class="comment">// Hide Mouse Pointer</span>
<a name="l00268"></a>00268         }
<a name="l00269"></a>00269         <span class="keywordflow">else</span>
<a name="l00270"></a>00270         {
<a name="l00271"></a>00271                 dwExStyle=WS_EX_APPWINDOW | WS_EX_WINDOWEDGE;                   <span class="comment">// Window Extended Style</span>
<a name="l00272"></a>00272                 dwStyle=WS_OVERLAPPEDWINDOW;                                                    <span class="comment">// Windows Style</span>
<a name="l00273"></a>00273         }
<a name="l00274"></a>00274 
<a name="l00275"></a>00275         AdjustWindowRectEx(&amp;WindowRect, dwStyle, <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>, dwExStyle);             <span class="comment">// Adjust Window To True Requested Size</span>
<a name="l00276"></a>00276 
<a name="l00277"></a>00277         <span class="comment">// Create The Window</span>
<a name="l00278"></a>00278         <span class="keywordflow">if</span> (!(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>=CreateWindowExW(     dwExStyle,                                                      <span class="comment">// Extended Style For The Window</span>
<a name="l00279"></a>00279                                                                 L<span class="stringliteral">&quot;OpenGL&quot;</span>,                                                      <span class="comment">// Class Name</span>
<a name="l00280"></a>00280                                                                 title,                                                          <span class="comment">// Window Title</span>
<a name="l00281"></a>00281                                                                 dwStyle |                                                       <span class="comment">// Defined Window Style</span>
<a name="l00282"></a>00282                                                                 WS_CLIPSIBLINGS |                                       <span class="comment">// Required Window Style</span>
<a name="l00283"></a>00283                                                                 WS_CLIPCHILDREN,                                        <span class="comment">// Required Window Style</span>
<a name="l00284"></a>00284                                                                 0, 0,                                                           <span class="comment">// Window Position</span>
<a name="l00285"></a>00285                                                                 WindowRect.right-WindowRect.left,       <span class="comment">// Calculate Window Width</span>
<a name="l00286"></a>00286                                                                 WindowRect.bottom-WindowRect.top,       <span class="comment">// Calculate Window Height</span>
<a name="l00287"></a>00287                                                                 NULL,                                                           <span class="comment">// No Parent Window</span>
<a name="l00288"></a>00288                                                                 NULL,                                                           <span class="comment">// No Menu</span>
<a name="l00289"></a>00289                                                                 <a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>,                                                      <span class="comment">// Instance</span>
<a name="l00290"></a>00290                                                                 NULL)))                                                         <span class="comment">// Dont Pass Anything To WM_CREATE</span>
<a name="l00291"></a>00291         {
<a name="l00292"></a>00292                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00293"></a>00293                 MessageBoxA(NULL,<span class="stringliteral">&quot;Window Creation Error.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00294"></a>00294                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00295"></a>00295         }
<a name="l00296"></a>00296 
<a name="l00297"></a>00297         <span class="keyword">static</span>  PIXELFORMATDESCRIPTOR pfd=                              <span class="comment">// pfd Tells Windows How We Want Things To Be</span>
<a name="l00298"></a>00298         {
<a name="l00299"></a>00299                 <span class="keyword">sizeof</span>(PIXELFORMATDESCRIPTOR),                          <span class="comment">// Size Of This Pixel Format Descriptor</span>
<a name="l00300"></a>00300                 1,                                                                                      <span class="comment">// Version Number</span>
<a name="l00301"></a>00301                 PFD_DRAW_TO_WINDOW |                                            <span class="comment">// Format Must Support Window</span>
<a name="l00302"></a>00302                 PFD_SUPPORT_OPENGL |                                            <span class="comment">// Format Must Support OpenGL</span>
<a name="l00303"></a>00303                 PFD_DOUBLEBUFFER,                                                       <span class="comment">// Must Support Double Buffering</span>
<a name="l00304"></a>00304                 PFD_TYPE_RGBA,                                                          <span class="comment">// Request An RGBA Format</span>
<a name="l00305"></a>00305                 bits,                                                                           <span class="comment">// Select Our Color Depth</span>
<a name="l00306"></a>00306                 0, 0, 0, 0, 0, 0,                                                       <span class="comment">// Color Bits Ignored</span>
<a name="l00307"></a>00307                 0,                                                                                      <span class="comment">// No Alpha Buffer</span>
<a name="l00308"></a>00308                 0,                                                                                      <span class="comment">// Shift Bit Ignored</span>
<a name="l00309"></a>00309                 0,                                                                                      <span class="comment">// No Accumulation Buffer</span>
<a name="l00310"></a>00310                 0, 0, 0, 0,                                                                     <span class="comment">// Accumulation Bits Ignored</span>
<a name="l00311"></a>00311                 16,                                                                                     <span class="comment">// 16Bit Z-Buffer (Depth Buffer)  </span>
<a name="l00312"></a>00312                 0,                                                                                      <span class="comment">// No Stencil Buffer</span>
<a name="l00313"></a>00313                 0,                                                                                      <span class="comment">// No Auxiliary Buffer</span>
<a name="l00314"></a>00314                 PFD_MAIN_PLANE,                                                         <span class="comment">// Main Drawing Layer</span>
<a name="l00315"></a>00315                 0,                                                                                      <span class="comment">// Reserved</span>
<a name="l00316"></a>00316                 0, 0, 0                                                                         <span class="comment">// Layer Masks Ignored</span>
<a name="l00317"></a>00317         };
<a name="l00318"></a>00318         
<a name="l00319"></a>00319         <span class="keywordflow">if</span> (!(<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>=GetDC(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>)))                                                 <span class="comment">// Did We Get A Device Context?</span>
<a name="l00320"></a>00320         {
<a name="l00321"></a>00321                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00322"></a>00322                 MessageBoxA(NULL,<span class="stringliteral">&quot;Can&#39;t Create A GL Device Context.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00323"></a>00323                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00324"></a>00324         }
<a name="l00325"></a>00325 
<a name="l00326"></a>00326         <span class="keywordflow">if</span> (!(PixelFormat=ChoosePixelFormat(<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>,&amp;pfd))) <span class="comment">// Did Windows Find A Matching Pixel Format?</span>
<a name="l00327"></a>00327         {
<a name="l00328"></a>00328                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00329"></a>00329                 MessageBoxA(NULL,<span class="stringliteral">&quot;Can&#39;t Find A Suitable PixelFormat.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00330"></a>00330                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00331"></a>00331         }
<a name="l00332"></a>00332 
<a name="l00333"></a>00333         <span class="keywordflow">if</span>(!SetPixelFormat(<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>,PixelFormat,&amp;pfd))               <span class="comment">// Are We Able To Set The Pixel Format?</span>
<a name="l00334"></a>00334         {
<a name="l00335"></a>00335                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00336"></a>00336                 MessageBoxA(NULL,<span class="stringliteral">&quot;Can&#39;t Set The PixelFormat.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00337"></a>00337                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00338"></a>00338         }
<a name="l00339"></a>00339 
<a name="l00340"></a>00340         <span class="keywordflow">if</span> (!(<a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">hRC</a>=wglCreateContext(<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>)))                               <span class="comment">// Are We Able To Get A Rendering Context?</span>
<a name="l00341"></a>00341         {
<a name="l00342"></a>00342                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00343"></a>00343                 MessageBoxA(NULL,<span class="stringliteral">&quot;Can&#39;t Create A GL Rendering Context.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00344"></a>00344                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00345"></a>00345         }
<a name="l00346"></a>00346 
<a name="l00347"></a>00347         <span class="keywordflow">if</span>(!wglMakeCurrent(<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>,<a class="code" href="_lesson1_8cpp.htm#a874963259c7cd998acfe6e187fbdb4c1">hRC</a>))                                    <span class="comment">// Try To Activate The Rendering Context</span>
<a name="l00348"></a>00348         {
<a name="l00349"></a>00349                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00350"></a>00350                 MessageBoxA(NULL,<span class="stringliteral">&quot;Can&#39;t Activate The GL Rendering Context.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00351"></a>00351                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00352"></a>00352         }
<a name="l00353"></a>00353 
<a name="l00354"></a>00354         ShowWindow(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>,SW_SHOW);                                               <span class="comment">// Show The Window</span>
<a name="l00355"></a>00355         SetForegroundWindow(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>);                                              <span class="comment">// Slightly Higher Priority</span>
<a name="l00356"></a>00356         SetFocus(<a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>);                                                                 <span class="comment">// Sets Keyboard Focus To The Window</span>
<a name="l00357"></a>00357         <a class="code" href="_lesson1_8cpp.htm#a87bb84d489df61ed7b0c002584fd984f">ReSizeGLScene</a>(width, height);                                   <span class="comment">// Set Up Our Perspective GL Screen</span>
<a name="l00358"></a>00358 
<a name="l00359"></a>00359         <span class="keywordflow">if</span> (!<a class="code" href="_lesson1_8cpp.htm#aa4c387d3f1ebce6d57684b6a10c9b0ae">InitGL</a>())                                                                  <span class="comment">// Initialize Our Newly Created GL Window</span>
<a name="l00360"></a>00360         {
<a name="l00361"></a>00361                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                         <span class="comment">// Reset The Display</span>
<a name="l00362"></a>00362                 MessageBoxA(NULL,<span class="stringliteral">&quot;Initialization Failed.&quot;</span>,<span class="stringliteral">&quot;ERROR&quot;</span>,MB_OK|MB_ICONEXCLAMATION);
<a name="l00363"></a>00363                 <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                           <span class="comment">// Return FALSE</span>
<a name="l00364"></a>00364         }
<a name="l00365"></a>00365 
<a name="l00366"></a>00366         <span class="keywordflow">return</span> <a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                                                    <span class="comment">// Success</span>
<a name="l00367"></a>00367 }
<a name="l00368"></a>00368 
<a name="l00369"></a><a class="code" href="_lesson1_8cpp.htm#a9135ea2a0d6fce68ba3b858226a31a4f">00369</a> LRESULT CALLBACK <a class="code" href="_lesson1_8cpp.htm#a9135ea2a0d6fce68ba3b858226a31a4f">WndProc</a>(       HWND    <a class="code" href="_lesson1_8cpp.htm#afec4341c234519e145bac6f0e5edaa51">hWnd</a>,                   <span class="comment">// Handle For This Window</span>
<a name="l00370"></a>00370                                                         UINT    uMsg,                   <span class="comment">// Message For This Window</span>
<a name="l00371"></a>00371                                                         WPARAM  wParam,                 <span class="comment">// Additional Message Information</span>
<a name="l00372"></a>00372                                                         LPARAM  lParam)                 <span class="comment">// Additional Message Information</span>
<a name="l00373"></a>00373 {
<a name="l00374"></a>00374 
<a name="l00375"></a>00375 
<a name="l00376"></a>00376    <a class="code" href="_lesson1_8cpp.htm#a1f1ccc770d6b6b5dcf05df4aa4b8fbb1">g_camera</a>.handleMessages(hWnd, uMsg, wParam, lParam);
<a name="l00377"></a>00377 
<a name="l00378"></a>00378 
<a name="l00379"></a>00379         <span class="keywordflow">switch</span> (uMsg)                                                                   <span class="comment">// Check For Windows Messages</span>
<a name="l00380"></a>00380         {
<a name="l00381"></a>00381                 <span class="keywordflow">case</span> WM_ACTIVATE:                                                       <span class="comment">// Watch For Window Activate Message</span>
<a name="l00382"></a>00382                 {
<a name="l00383"></a>00383                         <span class="keywordflow">if</span> (!HIWORD(wParam))                                    <span class="comment">// Check Minimization State</span>
<a name="l00384"></a>00384                         {
<a name="l00385"></a>00385                                 <a class="code" href="_lesson1_8cpp.htm#a03c996f9fcf0e10baeb3e700be0c409a">active</a>=<a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                            <span class="comment">// Program Is Active</span>
<a name="l00386"></a>00386                         }
<a name="l00387"></a>00387                         <span class="keywordflow">else</span>
<a name="l00388"></a>00388                         {
<a name="l00389"></a>00389                                 <a class="code" href="_lesson1_8cpp.htm#a03c996f9fcf0e10baeb3e700be0c409a">active</a>=<a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                           <span class="comment">// Program Is No Longer Active</span>
<a name="l00390"></a>00390                         }
<a name="l00391"></a>00391 
<a name="l00392"></a>00392                         <span class="keywordflow">return</span> 0;                                                               <span class="comment">// Return To The Message Loop</span>
<a name="l00393"></a>00393                 }
<a name="l00394"></a>00394 
<a name="l00395"></a>00395                 <span class="keywordflow">case</span> WM_SYSCOMMAND:                                                     <span class="comment">// Intercept System Commands</span>
<a name="l00396"></a>00396                 {
<a name="l00397"></a>00397                         <span class="keywordflow">switch</span> (wParam)                                                 <span class="comment">// Check System Calls</span>
<a name="l00398"></a>00398                         {
<a name="l00399"></a>00399                                 <span class="keywordflow">case</span> SC_SCREENSAVE:                                     <span class="comment">// Screensaver Trying To Start?</span>
<a name="l00400"></a>00400                                 <span class="keywordflow">case</span> SC_MONITORPOWER:                           <span class="comment">// Monitor Trying To Enter Powersave?</span>
<a name="l00401"></a>00401                                 <span class="keywordflow">return</span> 0;                                                       <span class="comment">// Prevent From Happening</span>
<a name="l00402"></a>00402                         }
<a name="l00403"></a>00403                         <span class="keywordflow">break</span>;                                                                  <span class="comment">// Exit</span>
<a name="l00404"></a>00404                 }
<a name="l00405"></a>00405 
<a name="l00406"></a>00406                 <span class="keywordflow">case</span> WM_CLOSE:                                                          <span class="comment">// Did We Receive A Close Message?</span>
<a name="l00407"></a>00407                 {
<a name="l00408"></a>00408                         PostQuitMessage(0);                                             <span class="comment">// Send A Quit Message</span>
<a name="l00409"></a>00409                         <span class="keywordflow">return</span> 0;                                                               <span class="comment">// Jump Back</span>
<a name="l00410"></a>00410                 }
<a name="l00411"></a>00411 
<a name="l00412"></a>00412                 <span class="keywordflow">case</span> WM_KEYDOWN:                                                        <span class="comment">// Is A Key Being Held Down?</span>
<a name="l00413"></a>00413                 {
<a name="l00414"></a>00414                         <a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">keys</a>[wParam] = <a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                    <span class="comment">// If So, Mark It As TRUE</span>
<a name="l00415"></a>00415                         <span class="keywordflow">return</span> 0;                                                               <span class="comment">// Jump Back</span>
<a name="l00416"></a>00416                 }
<a name="l00417"></a>00417 
<a name="l00418"></a>00418                 <span class="keywordflow">case</span> WM_KEYUP:                                                          <span class="comment">// Has A Key Been Released?</span>
<a name="l00419"></a>00419                 {
<a name="l00420"></a>00420                         <a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">keys</a>[wParam] = <a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                   <span class="comment">// If So, Mark It As FALSE</span>
<a name="l00421"></a>00421                         <span class="keywordflow">return</span> 0;                                                               <span class="comment">// Jump Back</span>
<a name="l00422"></a>00422                 }
<a name="l00423"></a>00423 
<a name="l00424"></a>00424                 <span class="keywordflow">case</span> WM_SIZE:                                                           <span class="comment">// Resize The OpenGL Window</span>
<a name="l00425"></a>00425                 {
<a name="l00426"></a>00426                         <a class="code" href="_lesson1_8cpp.htm#a87bb84d489df61ed7b0c002584fd984f">ReSizeGLScene</a>(LOWORD(lParam),HIWORD(lParam));  <span class="comment">// LoWord=Width, HiWord=Height</span>
<a name="l00427"></a>00427                         <span class="keywordflow">return</span> 0;                                                               <span class="comment">// Jump Back</span>
<a name="l00428"></a>00428                 }
<a name="l00429"></a>00429 
<a name="l00430"></a>00430 
<a name="l00431"></a>00431                 
<a name="l00432"></a>00432 
<a name="l00433"></a>00433         }
<a name="l00434"></a>00434 
<a name="l00435"></a>00435         
<a name="l00436"></a>00436 
<a name="l00437"></a>00437 
<a name="l00438"></a>00438         <span class="comment">// Pass All Unhandled Messages To DefWindowProc</span>
<a name="l00439"></a>00439         <span class="keywordflow">return</span> DefWindowProc(hWnd,uMsg,wParam,lParam);
<a name="l00440"></a>00440 }
<a name="l00441"></a>00441 
<a name="l00442"></a><a class="code" href="_lesson1_8cpp.htm#a661c2abc03926acfaeb93b4ae7db4943">00442</a> <span class="keywordtype">int</span> WINAPI <a class="code" href="_lesson1_8cpp.htm#a661c2abc03926acfaeb93b4ae7db4943">WinMain</a>(     HINSTANCE       <a class="code" href="_lesson1_8cpp.htm#a74029128723095e7bf00a71d46af8b24">hInstance</a>,                      <span class="comment">// Instance</span>
<a name="l00443"></a>00443                                         HINSTANCE       hPrevInstance,          <span class="comment">// Previous Instance</span>
<a name="l00444"></a>00444                                         LPSTR           lpCmdLine,                      <span class="comment">// Command Line Parameters</span>
<a name="l00445"></a>00445                                         <span class="keywordtype">int</span>                     nCmdShow)                       <span class="comment">// Window Show State</span>
<a name="l00446"></a>00446 {
<a name="l00447"></a>00447         MSG             msg;                                                                    <span class="comment">// Windows Message Structure</span>
<a name="l00448"></a>00448         BOOL    done=<a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                             <span class="comment">// Bool Variable To Exit Loop</span>
<a name="l00449"></a>00449 
<a name="l00450"></a>00450         <span class="comment">// Ask The User Which Screen Mode They Prefer</span>
<a name="l00451"></a>00451         <span class="keywordflow">if</span> (MessageBoxA(NULL,<span class="stringliteral">&quot;Would You Like To Run In Fullscreen Mode?&quot;</span>, <span class="stringliteral">&quot;Start FullScreen?&quot;</span>,MB_YESNO|MB_ICONQUESTION)==IDNO)
<a name="l00452"></a>00452         {
<a name="l00453"></a>00453                 <a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>=<a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                                       <span class="comment">// Windowed Mode</span>
<a name="l00454"></a>00454         }
<a name="l00455"></a>00455 
<a name="l00456"></a>00456         <span class="comment">// Create Our OpenGL Window</span>
<a name="l00457"></a>00457         <span class="keywordflow">if</span> (!<a class="code" href="_lesson1_8cpp.htm#ad89ffd22a029a06b99b2e31efd8b862c">CreateGLWindow</a>(L<span class="stringliteral">&quot;NeHe&#39;s OpenGL Framework&quot;</span>,640,480,16,<a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>))
<a name="l00458"></a>00458         {
<a name="l00459"></a>00459                 <span class="keywordflow">return</span> 0;                                                                       <span class="comment">// Quit If Window Was Not Created</span>
<a name="l00460"></a>00460         }
<a name="l00461"></a>00461 
<a name="l00462"></a>00462         <span class="keywordflow">while</span>(!done)                                                                    <span class="comment">// Loop That Runs While done=FALSE</span>
<a name="l00463"></a>00463         {
<a name="l00464"></a>00464                 <span class="keywordflow">if</span> (PeekMessage(&amp;msg,NULL,0,0,PM_REMOVE))       <span class="comment">// Is There A Message Waiting?</span>
<a name="l00465"></a>00465                 {
<a name="l00466"></a>00466                         <span class="keywordflow">if</span> (msg.message==WM_QUIT)                               <span class="comment">// Have We Received A Quit Message?</span>
<a name="l00467"></a>00467                         {
<a name="l00468"></a>00468                                 done=<a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                                      <span class="comment">// If So done=TRUE</span>
<a name="l00469"></a>00469                         }
<a name="l00470"></a>00470                         <span class="keywordflow">else</span>                                                                    <span class="comment">// If Not, Deal With Window Messages</span>
<a name="l00471"></a>00471                         {
<a name="l00472"></a>00472                                 TranslateMessage(&amp;msg);                         <span class="comment">// Translate The Message</span>
<a name="l00473"></a>00473                                 DispatchMessage(&amp;msg);                          <span class="comment">// Dispatch The Message</span>
<a name="l00474"></a>00474                         }
<a name="l00475"></a>00475                 }
<a name="l00476"></a>00476                 <span class="keywordflow">else</span>                                                                            <span class="comment">// If There Are No Messages</span>
<a name="l00477"></a>00477                 {
<a name="l00478"></a>00478                         <span class="comment">// Draw The Scene.  Watch For ESC Key And Quit Messages From DrawGLScene()</span>
<a name="l00479"></a>00479                         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a03c996f9fcf0e10baeb3e700be0c409a">active</a>)                                                             <span class="comment">// Program Active?</span>
<a name="l00480"></a>00480                         {
<a name="l00481"></a>00481                                 <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">keys</a>[VK_ESCAPE])                            <span class="comment">// Was ESC Pressed?</span>
<a name="l00482"></a>00482                                 {
<a name="l00483"></a>00483                                         done=<a class="code" href="_graphics_gems_8h.htm#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>;                                              <span class="comment">// ESC Signalled A Quit</span>
<a name="l00484"></a>00484                                 }
<a name="l00485"></a>00485                                 <span class="keywordflow">else</span>                                                            <span class="comment">// Not Time To Quit, Update Screen</span>
<a name="l00486"></a>00486                                 {
<a name="l00487"></a>00487                                         <a class="code" href="_lesson1_8cpp.htm#a52061247bdaeb770e3a1d59eefaad972">DrawGLScene</a>();                                  <span class="comment">// Draw The Scene</span>
<a name="l00488"></a>00488                                         SwapBuffers(<a class="code" href="_lesson1_8cpp.htm#a78f6446a0e13adc7b7b2f239112ac785">hDC</a>);                               <span class="comment">// Swap Buffers (Double Buffering)</span>
<a name="l00489"></a>00489                                 }
<a name="l00490"></a>00490                         }
<a name="l00491"></a>00491 
<a name="l00492"></a>00492                         <span class="keywordflow">if</span> (<a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">keys</a>[VK_F1])                                                <span class="comment">// Is F1 Being Pressed?</span>
<a name="l00493"></a>00493                         {
<a name="l00494"></a>00494                                 <a class="code" href="_lesson1_8cpp.htm#a23ca8db2cebbfb94538122c439146f1a">keys</a>[VK_F1]=<a class="code" href="_graphics_gems_8h.htm#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a>;                                      <span class="comment">// If So Make Key FALSE</span>
<a name="l00495"></a>00495                                 <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                         <span class="comment">// Kill Our Current Window</span>
<a name="l00496"></a>00496                                 <a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>=!<a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>;                         <span class="comment">// Toggle Fullscreen / Windowed Mode</span>
<a name="l00497"></a>00497                                 <span class="comment">// Recreate Our OpenGL Window</span>
<a name="l00498"></a>00498                                 <span class="keywordflow">if</span> (!<a class="code" href="_lesson1_8cpp.htm#ad89ffd22a029a06b99b2e31efd8b862c">CreateGLWindow</a>(L<span class="stringliteral">&quot;NeHe&#39;s OpenGL Framework&quot;</span>,640,480,16,<a class="code" href="_lesson1_8cpp.htm#a5a9147cb82d1cbeefadd62beb9e6910b">fullscreen</a>))
<a name="l00499"></a>00499                                 {
<a name="l00500"></a>00500                                         <span class="keywordflow">return</span> 0;                                               <span class="comment">// Quit If Window Was Not Created</span>
<a name="l00501"></a>00501                                 }
<a name="l00502"></a>00502                         }
<a name="l00503"></a>00503                 }
<a name="l00504"></a>00504         }
<a name="l00505"></a>00505 
<a name="l00506"></a>00506         <span class="comment">// Shutdown</span>
<a name="l00507"></a>00507         <a class="code" href="_lesson1_8cpp.htm#af33a2273205c1491be5916d3091658e0">KillGLWindow</a>();                                                                 <span class="comment">// Kill The Window</span>
<a name="l00508"></a>00508         <span class="keywordflow">return</span> (msg.wParam);                                                    <span class="comment">// Exit The Program</span>
<a name="l00509"></a>00509 }
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sat Aug 27 20:19:14 2011 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
