<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: base_camera.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>base_camera.cpp</h1><a href="base__camera_8cpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 ï»¿
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="preprocessor">#pragma once</span>
<a name="l00004"></a>00004 <span class="preprocessor"></span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="preprocessor">#ifdef WIN32 // only windows platform</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span>
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 <span class="preprocessor">#include &quot;<a class="code" href="__gbmath_8h.htm" title="MAIN INCLUDE HEADER.">_gbmath.h</a>&quot;</span>
<a name="l00010"></a>00010 
<a name="l00012"></a>00012 <span class="preprocessor">#if 0</span>
<a name="l00013"></a>00013 <span class="preprocessor"></span>
<a name="l00014"></a>00014 <span class="preprocessor">   #pragma comment( lib, &quot;dxerr.lib&quot; )</span>
<a name="l00015"></a>00015 <span class="preprocessor"></span><span class="preprocessor">   #pragma comment( lib, &quot;dxguid.lib&quot; )</span>
<a name="l00016"></a>00016 <span class="preprocessor"></span>   
<a name="l00017"></a>00017 <span class="preprocessor">                #if defined(DEBUG) || defined(_DEBUG)</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span>
<a name="l00019"></a>00019 <span class="preprocessor">                   #pragma comment( lib, &quot;d3dx9d.lib&quot; )</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="preprocessor">                #else</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">                   #pragma comment( lib, &quot;d3dx9.lib&quot; )</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">                #endif</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="preprocessor">   #pragma comment( lib, &quot;d3d9.lib&quot; )</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="preprocessor">   #pragma comment( lib, &quot;winmm.lib&quot; )</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span><span class="preprocessor">   #pragma comment( lib, &quot;comctl32.lib&quot; )</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span>
<a name="l00031"></a>00031 <span class="preprocessor">#endif   // #if</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;assert.h&quot;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="comment">//======================================================</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="keyword">namespace </span>gbmath 
<a name="l00039"></a>00039 {
<a name="l00040"></a>00040  
<a name="l00041"></a>00041  
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="comment">//========================================================================</span>
<a name="l00044"></a><a class="code" href="classgbmath_1_1base__camera.htm#ab7987fda6dc6d963ec0f9c0017a358c6">00044</a>         <a class="code" href="classgbmath_1_1base__camera.htm#ab7987fda6dc6d963ec0f9c0017a358c6">base_camera::base_camera</a>(<span class="keywordtype">bool</span> cameraLeftHandle) : m_bcameraLeftHandle(cameraLeftHandle)
<a name="l00045"></a>00045 {
<a name="l00046"></a>00046         <a class="code" href="classgbmath_1_1base__camera.htm#a5f8b67b8873603625ef1cf4ee6cee9b5">m_hwnd</a> = 0;
<a name="l00047"></a>00047     <a class="code" href="classgbmath_1_1base__camera.htm#a6af2149f94acf2c9a151777a32ef72c8" title="Number of camera keys that are down.">m_cKeysDown</a> = 0;
<a name="l00048"></a>00048     ZeroMemory( <a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>, <span class="keyword">sizeof</span>(BYTE)*<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa0c2540ecad9775e13c3a369eb2b0f524">CAM_MAX_KEYS</a> );
<a name="l00049"></a>00049 <span class="comment">//    ZeroMemory( m_GamePad, sizeof(MYUT_GAMEPAD)*MYUT_MAX_CONTROLLERS );</span>
<a name="l00050"></a>00050 
<a name="l00051"></a>00051     <span class="comment">// Set attributes for the view matrix</span>
<a name="l00052"></a>00052     <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a> vEyePt    = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0.0f,0.0f,0.0f);
<a name="l00053"></a>00053     <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a> vLookatPt = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0.0f,0.0f,1.0f);
<a name="l00054"></a>00054 
<a name="l00055"></a>00055     <span class="comment">// Setup the view matrix</span>
<a name="l00056"></a>00056     <a class="code" href="classgbmath_1_1base__camera.htm#a0f77a409d4d55c583e0d294a8cc53f2c">setViewParams</a>( vEyePt, vLookatPt );
<a name="l00057"></a>00057 
<a name="l00058"></a>00058     <span class="comment">// Setup the projection matrix</span>
<a name="l00059"></a>00059         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> _PI_DIV4  =  3.141592654f / 4.0f;
<a name="l00060"></a>00060     <a class="code" href="classgbmath_1_1base__camera.htm#a66a5be61a4eeab58de9aa59b882f3154">setProjParams</a>(  _PI_DIV4  , 1.0f, 1.0f, 1000.0f );
<a name="l00061"></a>00061 
<a name="l00062"></a>00062     GetCursorPos( &amp;<a class="code" href="classgbmath_1_1base__camera.htm#a4700f8110d4e4c26d6fb7b08e921cb82" title="Last absolute position of mouse cursor.">m_ptLastMousePosition</a> );
<a name="l00063"></a>00063     <a class="code" href="classgbmath_1_1base__camera.htm#a2a3e775741c1f2403bc1d7ce05502596" title="True if left button is down.">m_bMouseLButtonDown</a> = <span class="keyword">false</span>;
<a name="l00064"></a>00064     <a class="code" href="classgbmath_1_1base__camera.htm#a92c26f1ae8ceb0614bc30bd377a0f3b7" title="True if middle button is down.">m_bMouseMButtonDown</a> = <span class="keyword">false</span>;
<a name="l00065"></a>00065     <a class="code" href="classgbmath_1_1base__camera.htm#ad5e8b83eef2b3bb07d633132e24aa90f" title="True if right button is down.">m_bMouseRButtonDown</a> = <span class="keyword">false</span>;
<a name="l00066"></a>00066     <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> = 0;
<a name="l00067"></a>00067     <a class="code" href="classgbmath_1_1base__camera.htm#a9900717f0106c2c77b2435394eee896c" title="Amount of middle wheel scroll (+/-).">m_nMouseWheelDelta</a> = 0;
<a name="l00068"></a>00068 
<a name="l00069"></a>00069     <a class="code" href="classgbmath_1_1base__camera.htm#a129f2c68cfcc571b04a4dabe1f335c9b" title="Yaw angle of camera.">m_fCameraYawAngle</a> = 0.0f;
<a name="l00070"></a>00070     <a class="code" href="classgbmath_1_1base__camera.htm#ac0ff2cb9c563377e63b80070870d6537" title="Pitch angle of camera.">m_fCameraPitchAngle</a> = 0.0f;
<a name="l00071"></a>00071 
<a name="l00072"></a>00072     SetRect( &amp;<a class="code" href="classgbmath_1_1base__camera.htm#a87de2d179a5260616044a4b9ec156b84" title="Rectangle within which a drag can be initiated.">m_rcDrag</a>, LONG_MIN, LONG_MIN, LONG_MAX, LONG_MAX );
<a name="l00073"></a>00073     <a class="code" href="classgbmath_1_1base__camera.htm#aba20fc8ce1cc25677d9ead18cbcddf9e" title="Velocity of camera.">m_vVelocity</a>     = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0,0,0);
<a name="l00074"></a>00074     <a class="code" href="classgbmath_1_1base__camera.htm#a3f6ddfbc0272635a987cf9b775fe83bf" title="If true, then camera movement will slow to a stop otherwise movement is instant.">m_bMovementDrag</a> = <span class="keyword">false</span>;
<a name="l00075"></a>00075     <a class="code" href="classgbmath_1_1base__camera.htm#ac85d4f4dcc7f14e4b9b4a8f4eb0ccab5" title="Velocity drag force.">m_vVelocityDrag</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0,0,0);
<a name="l00076"></a>00076     <a class="code" href="classgbmath_1_1base__camera.htm#a1d5b06e7b96961dc163e53d9c34965c0" title="Countdown timer to apply drag.">m_fDragTimer</a>    = 0.0f;
<a name="l00077"></a>00077     <a class="code" href="classgbmath_1_1base__camera.htm#adb7e0eef7c6c32c02fe0e7da1cdde520" title="Time it takes for velocity to go from full to 0.">m_fTotalDragTimeToZero</a> = 0.25;
<a name="l00078"></a>00078     <a class="code" href="classgbmath_1_1base__camera.htm#a235d760d258f8e8af6fd42e5352f284a" title="Velocity of camera.">m_vRotVelocity</a> = <a class="code" href="structgbmath_1_1vec2.htm" title="2d-base vector. Corrected by operators epislon">vec2</a>(0,0);
<a name="l00079"></a>00079 
<a name="l00080"></a>00080     <a class="code" href="classgbmath_1_1base__camera.htm#aba9d2e9a17ae89b686a300eb6f63d885" title="Scaler for rotation.">m_fRotationScaler</a> = 0.01f;           
<a name="l00081"></a>00081     <a class="code" href="classgbmath_1_1base__camera.htm#af264c5c91ba821ca6750c6bf786a92d6" title="Scaler for movement.">m_fMoveScaler</a> = 5.0f;           
<a name="l00082"></a>00082 
<a name="l00083"></a>00083     <a class="code" href="classgbmath_1_1base__camera.htm#a7ea61743c37a374ab7ab49f5e0a2592f" title="Invert the pitch axis.">m_bInvertPitch</a> = <span class="keyword">false</span>;
<a name="l00084"></a>00084     <a class="code" href="classgbmath_1_1base__camera.htm#a7338847ca3f5475b1db11925e6f0fff3" title="If true, then camera can move in the y-axis.">m_bEnableYAxisMovement</a> = <span class="keyword">true</span>;
<a name="l00085"></a>00085     <a class="code" href="classgbmath_1_1base__camera.htm#a95b7bd0c76e36a22429447ef2a7054b6" title="If true, then the user can translate the camera/model.">m_bEnablePositionMovement</a> = <span class="keyword">true</span>;
<a name="l00086"></a>00086 
<a name="l00087"></a>00087     <a class="code" href="classgbmath_1_1base__camera.htm#a453c7edce080d75fded4e148005103cf" title="Mouse relative delta smoothed over a few frames.">m_vMouseDelta</a>   = <a class="code" href="structgbmath_1_1vec2.htm" title="2d-base vector. Corrected by operators epislon">vec2</a>(0,0);
<a name="l00088"></a>00088     <a class="code" href="classgbmath_1_1base__camera.htm#a8dcf83e33d3c7d5968eece72bec5ac44" title="Number of frames to smooth mouse data over.">m_fFramesToSmoothMouseData</a> = 2.0f;
<a name="l00089"></a>00089 
<a name="l00090"></a>00090     <a class="code" href="classgbmath_1_1base__camera.htm#aab2da273edf396b0f73729ff7a4b6540" title="If true, then the camera will be clipped to the boundary.">m_bClipToBoundary</a> = <span class="keyword">false</span>;
<a name="l00091"></a>00091     <a class="code" href="classgbmath_1_1base__camera.htm#adc1f46ca093c8a985c957f650b347ea3" title="Min point in clip boundary.">m_vMinBoundary</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(-1,-1,-1);
<a name="l00092"></a>00092     <a class="code" href="classgbmath_1_1base__camera.htm#a53b5e108a6c60d43f75c8594fd46fea1" title="Max point in clip boundary.">m_vMaxBoundary</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(1,1,1);
<a name="l00093"></a>00093 }
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 <span class="comment">//========================================================================</span>
<a name="l00097"></a>00097 <span class="comment">// Client can call this to change the position and direction of camera</span>
<a name="l00098"></a>00098 <span class="comment">//========================================================================</span>
<a name="l00099"></a><a class="code" href="classgbmath_1_1base__camera.htm#a0f77a409d4d55c583e0d294a8cc53f2c">00099</a> <span class="keywordtype">void</span> <a class="code" href="classgbmath_1_1base__camera.htm#a0f77a409d4d55c583e0d294a8cc53f2c">base_camera::setViewParams</a>( <span class="keyword">const</span> <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>&amp; pvEyePt, <span class="keyword">const</span> <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>&amp; pvLookatPt)
<a name="l00100"></a>00100 {
<a name="l00101"></a>00101    
<a name="l00102"></a>00102         <span class="comment">//if( NULL == pvEyePt || NULL == pvLookatPt )</span>
<a name="l00103"></a>00103     <span class="comment">//    return;</span>
<a name="l00104"></a>00104 
<a name="l00105"></a>00105     <a class="code" href="classgbmath_1_1base__camera.htm#a8db92c4d9d7623df0db4dbf18a97ae2f" title="Default camera eye position.">m_vDefaultEye</a> = <a class="code" href="classgbmath_1_1base__camera.htm#a3402041a0c7684c8d07fb351b810c815" title="Camera eye position.">m_vEye</a> = pvEyePt;
<a name="l00106"></a>00106     <a class="code" href="classgbmath_1_1base__camera.htm#a33af2409928060da5614264954d0873b" title="Default LookAt position.">m_vDefaultLookAt</a> = <a class="code" href="classgbmath_1_1base__camera.htm#a8c3cb34c834141d899e9592e744336af" title="LookAt position.">m_vLookAt</a> = pvLookatPt;
<a name="l00107"></a>00107 
<a name="l00108"></a>00108     <span class="comment">// Calc the view matrix</span>
<a name="l00109"></a>00109     <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a> vUp(0,1,0);
<a name="l00110"></a>00110  
<a name="l00111"></a>00111         <span class="keywordflow">if</span> (<a class="code" href="classgbmath_1_1base__camera.htm#ae5b615e5f57bccc20b4fe2b6448dd6de">m_bcameraLeftHandle</a>)           
<a name="l00112"></a>00112         {
<a name="l00113"></a>00113          <a class="code" href="classgbmath_1_1base__camera.htm#af2f74cefd4322a10bcd785e5b2d12999" title="View matrix.">m_mView</a>.<a class="code" href="structgbmath_1_1mat44.htm#a93273d8a93456c81c6f884a955a8b333" title="ÐÐ¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ Ð»ÐµÐ²Ð¾ÑÑÐ¾ÑÐ¾Ð½Ð½ÐµÐ¹ Ð¼Ð°ÑÑÐ¸ÑÑ Ð²Ð¸Ð´Ð°. ÐÐ ÐÐÐÐ...">setViewLookAtLH</a>(pvEyePt, pvLookatPt, vUp );
<a name="l00114"></a>00114         }
<a name="l00115"></a>00115         <span class="keywordflow">else</span>
<a name="l00116"></a>00116         {
<a name="l00117"></a>00117          <a class="code" href="classgbmath_1_1base__camera.htm#af2f74cefd4322a10bcd785e5b2d12999" title="View matrix.">m_mView</a>.<a class="code" href="structgbmath_1_1mat44.htm#a49e3dca47267c84017586af61a17ada6" title="ÐÐ¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ Ð¿ÑÐ°Ð²Ð¾ÑÑÐ¾ÑÐ¾Ð½Ð½ÐµÐ¹ Ð¼Ð°ÑÑÐ¸ÑÑ Ð²Ð¸Ð´Ð°. ÐÐ ÐÐÐÐ...">setViewLookAtRH</a>(pvEyePt, pvLookatPt, vUp );
<a name="l00118"></a>00118         }
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 
<a name="l00123"></a>00123     <a class="code" href="structgbmath_1_1mat44.htm" title="matrix 4x4.">mat44</a> mInvView;
<a name="l00124"></a>00124    <span class="comment">// D 3DX MatrixInverse( mInvView, NULL, m_mView );</span>
<a name="l00125"></a>00125         mInvView   =  <a class="code" href="classgbmath_1_1base__camera.htm#af2f74cefd4322a10bcd785e5b2d12999" title="View matrix.">m_mView</a>.<a class="code" href="structgbmath_1_1mat44.htm#a60f422b63e1e77d2b2487a1a18d123cf" title="ÐÐµÑÐ½ÑÑÑ Ð¸Ð½Ð²ÐµÑÑÐ¸ÑÐ¾Ð²Ð°Ð½ÑÑ.">inverted</a>();
<a name="l00126"></a>00126 
<a name="l00127"></a>00127     <span class="comment">// The axis basis vectors and camera position are stored inside the </span>
<a name="l00128"></a>00128     <span class="comment">// position matrix in the 4 rows of the camera&#39;s world matrix.</span>
<a name="l00129"></a>00129     <span class="comment">// To figure out the yaw/pitch of the camera, we just need the Z basis vector</span>
<a name="l00130"></a>00130     <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>* pZBasis = (<a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>*) &amp;mInvView.<a class="code" href="structgbmath_1_1mat44.htm#aabf304b5ece7ff9d2a006ca0467a3b27">_31</a>;
<a name="l00131"></a>00131 
<a name="l00132"></a>00132     <a class="code" href="classgbmath_1_1base__camera.htm#a129f2c68cfcc571b04a4dabe1f335c9b" title="Yaw angle of camera.">m_fCameraYawAngle</a>   = atan2f( pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>, pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a> );
<a name="l00133"></a>00133     <span class="keywordtype">float</span> fLen = sqrtf(pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a>*pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a> + pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>*pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>);
<a name="l00134"></a>00134     <a class="code" href="classgbmath_1_1base__camera.htm#ac0ff2cb9c563377e63b80070870d6537" title="Pitch angle of camera.">m_fCameraPitchAngle</a> = -atan2f( pZBasis-&gt;<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a>, fLen );
<a name="l00135"></a>00135 }
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 <span class="comment">//========================================================================</span>
<a name="l00141"></a>00141 <span class="comment">// Calculates the projection matrix based on input params</span>
<a name="l00142"></a>00142 <span class="comment">//========================================================================</span>
<a name="l00143"></a><a class="code" href="classgbmath_1_1base__camera.htm#a66a5be61a4eeab58de9aa59b882f3154">00143</a> <span class="keywordtype">void</span> <a class="code" href="classgbmath_1_1base__camera.htm#a66a5be61a4eeab58de9aa59b882f3154">base_camera::setProjParams</a>( <span class="keywordtype">float</span> fFOV, <span class="keywordtype">float</span> fAspect, 
<a name="l00144"></a>00144                                                                 <span class="keywordtype">float</span> fNearPlane,  <span class="keywordtype">float</span> fFarPlane )
<a name="l00145"></a>00145 {
<a name="l00146"></a>00146     <span class="comment">// Set attributes for the projection matrix</span>
<a name="l00147"></a>00147     <a class="code" href="classgbmath_1_1base__camera.htm#ae06595c99c7243145cb8a8e3b2a6170a" title="Field of view.">m_fFOV</a>        = fFOV;
<a name="l00148"></a>00148     <a class="code" href="classgbmath_1_1base__camera.htm#a02d42b8cf8fb3df37c5ab75b92b918d4" title="Aspect ratio.">m_fAspect</a>     = fAspect;
<a name="l00149"></a>00149     <a class="code" href="classgbmath_1_1base__camera.htm#a50b027f79fe6688b892ab777898c16ec" title="Near plane.">m_fNearPlane</a>  = fNearPlane;
<a name="l00150"></a>00150     <a class="code" href="classgbmath_1_1base__camera.htm#aef9562f8436b6b6bb039b7d151b190f9" title="Far plane.">m_fFarPlane</a>   = fFarPlane;
<a name="l00151"></a>00151 
<a name="l00152"></a>00152    <span class="comment">// D 3DXMatrixPerspectiveFovLH( m_mProj, fFOV, fAspect, fNearPlane, fFarPlane );</span>
<a name="l00153"></a>00153         <span class="comment">// m_mProj.setPerspectiveFovLH( fFOV, fAspect, fNearPlane, fFarPlane  );</span>
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 
<a name="l00156"></a>00156          <span class="keywordflow">if</span> (<a class="code" href="classgbmath_1_1base__camera.htm#ae5b615e5f57bccc20b4fe2b6448dd6de">m_bcameraLeftHandle</a>)
<a name="l00157"></a>00157          {
<a name="l00158"></a>00158                  <a class="code" href="classgbmath_1_1base__camera.htm#afa1d88cbbe9d5e9b453daa146302de72" title="Projection matrix.">m_mProj</a>.<a class="code" href="structgbmath_1_1mat44.htm#a9b50c575bd5a266bf61946a013414a22" title="Ð¿Ð¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ Ð¿ÐµÑÑÐ¿ÐµÐºÑÐ¸Ð²Ð½Ð¾Ð¹ Ð»ÐµÐ²Ð¾ÑÑÐ¾ÑÐ¾Ð½Ð½ÐµÐ¹ Ð¼Ð°ÑÑÐ¸ÑÑ...">setPerspectiveFovLH</a>( fFOV, fAspect, fNearPlane, fFarPlane);
<a name="l00159"></a>00159          }
<a name="l00160"></a>00160          <span class="keywordflow">else</span>
<a name="l00161"></a>00161          {
<a name="l00162"></a>00162                  <a class="code" href="classgbmath_1_1base__camera.htm#afa1d88cbbe9d5e9b453daa146302de72" title="Projection matrix.">m_mProj</a>.<a class="code" href="structgbmath_1_1mat44.htm#a3b8a3e86219b867d970cf7fbbe31628c" title="Ð¿Ð¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ Ð¿ÐµÑÑÐ¿ÐµÐºÑÐ¸Ð²Ð½Ð¾Ð¹ Ð¿ÑÐ°Ð²Ð¾ÑÑÐ¾ÑÐ¾Ð½Ð½ÐµÐ¹ Ð¼Ð°ÑÑÐ¸ÑÑ...">setPerspectiveFovRH</a>( fFOV, fAspect, fNearPlane, fFarPlane);
<a name="l00163"></a>00163          }
<a name="l00164"></a>00164 }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 <span class="comment">//========================================================================</span>
<a name="l00170"></a>00170 <span class="comment">// Call this from your message proc so this class can handle window messages</span>
<a name="l00171"></a>00171 <span class="comment">//========================================================================</span>
<a name="l00172"></a><a class="code" href="classgbmath_1_1base__camera.htm#a266d186981b5fb6e8a42ad817a068aad">00172</a> LRESULT <a class="code" href="classgbmath_1_1base__camera.htm#a266d186981b5fb6e8a42ad817a068aad">base_camera::handleMessages</a>( HWND <a class="code" href="namespacegbmath_1_1detail__visappl.htm#a7b9f23e816268d760d32e4051e20d11b">hWnd</a>, UINT uMsg, WPARAM wParam, 
<a name="l00173"></a>00173                                                                                                 LPARAM lParam )
<a name="l00174"></a>00174 {
<a name="l00175"></a>00175         <a class="code" href="classgbmath_1_1base__camera.htm#a5f8b67b8873603625ef1cf4ee6cee9b5">m_hwnd</a> = hWnd;
<a name="l00176"></a>00176     UNREFERENCED_PARAMETER( hWnd );
<a name="l00177"></a>00177     UNREFERENCED_PARAMETER( lParam );
<a name="l00178"></a>00178 
<a name="l00179"></a>00179     <span class="keywordflow">switch</span>( uMsg )
<a name="l00180"></a>00180     {
<a name="l00181"></a>00181         <span class="keywordflow">case</span> WM_KEYDOWN:
<a name="l00182"></a>00182         {
<a name="l00183"></a>00183             <span class="comment">// Map this key to a CameraKeys enum and update the</span>
<a name="l00184"></a>00184             <span class="comment">// state of m_aKeys[] by adding the KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK mask</span>
<a name="l00185"></a>00185             <span class="comment">// only if the key is not down</span>
<a name="l00186"></a>00186                         <span class="keywordflow">if</span>(wParam == 27)
<a name="l00187"></a>00187                         {
<a name="l00188"></a>00188                           <span class="keywordtype">int</span> _stop = 0;
<a name="l00189"></a>00189                         }
<a name="l00190"></a>00190 
<a name="l00191"></a>00191             <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baa">CameraKeys</a> mappedKey = <a class="code" href="classgbmath_1_1base__camera.htm#afe4ca0a55ca81927b70de2bcb5fcc479">mapKey</a>( (UINT)wParam );
<a name="l00192"></a>00192             <span class="keywordflow">if</span>( mappedKey != <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa146b6d5f6cac6bbd63b33f5cf424d604">CAM_UNKNOWN</a> )
<a name="l00193"></a>00193             {
<a name="l00194"></a>00194                 <span class="keywordflow">if</span>( FALSE == <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[mappedKey]) )
<a name="l00195"></a>00195                 {
<a name="l00196"></a>00196                     <a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[ mappedKey ] = KEY_WAS_DOWN_MASK | KEY_IS_DOWN_MASK;
<a name="l00197"></a>00197                     ++<a class="code" href="classgbmath_1_1base__camera.htm#a6af2149f94acf2c9a151777a32ef72c8" title="Number of camera keys that are down.">m_cKeysDown</a>;
<a name="l00198"></a>00198                 }
<a name="l00199"></a>00199             }
<a name="l00200"></a>00200             <span class="keywordflow">break</span>;
<a name="l00201"></a>00201         }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203         <span class="keywordflow">case</span> WM_KEYUP:
<a name="l00204"></a>00204         {
<a name="l00205"></a>00205             <span class="comment">// Map this key to a CameraKeys enum and update the</span>
<a name="l00206"></a>00206             <span class="comment">// state of m_aKeys[] by removing the KEY_IS_DOWN_MASK mask.</span>
<a name="l00207"></a>00207             <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baa">CameraKeys</a> mappedKey = <a class="code" href="classgbmath_1_1base__camera.htm#afe4ca0a55ca81927b70de2bcb5fcc479">mapKey</a>( (UINT)wParam );
<a name="l00208"></a>00208             <span class="keywordflow">if</span>( mappedKey != <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa146b6d5f6cac6bbd63b33f5cf424d604">CAM_UNKNOWN</a> &amp;&amp; (DWORD)mappedKey &lt; 8 )
<a name="l00209"></a>00209             {
<a name="l00210"></a>00210                 <a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[ mappedKey ] &amp;= ~KEY_IS_DOWN_MASK;
<a name="l00211"></a>00211                 --<a class="code" href="classgbmath_1_1base__camera.htm#a6af2149f94acf2c9a151777a32ef72c8" title="Number of camera keys that are down.">m_cKeysDown</a>;
<a name="l00212"></a>00212             }
<a name="l00213"></a>00213             <span class="keywordflow">break</span>;
<a name="l00214"></a>00214         }
<a name="l00215"></a>00215 
<a name="l00216"></a>00216         <span class="keywordflow">case</span> WM_RBUTTONDOWN:
<a name="l00217"></a>00217         <span class="keywordflow">case</span> WM_MBUTTONDOWN:
<a name="l00218"></a>00218         <span class="keywordflow">case</span> WM_LBUTTONDOWN:
<a name="l00219"></a>00219         <span class="keywordflow">case</span> WM_RBUTTONDBLCLK:
<a name="l00220"></a>00220         <span class="keywordflow">case</span> WM_MBUTTONDBLCLK:
<a name="l00221"></a>00221         <span class="keywordflow">case</span> WM_LBUTTONDBLCLK:
<a name="l00222"></a>00222         {
<a name="l00223"></a>00223             <span class="comment">// Compute the drag rectangle in screen coord.</span>
<a name="l00224"></a>00224             POINT ptCursor = { (short)LOWORD(lParam), (short)HIWORD(lParam) };
<a name="l00225"></a>00225 
<a name="l00226"></a>00226             <span class="comment">// Update member var state</span>
<a name="l00227"></a>00227             <span class="keywordflow">if</span>( ( uMsg == WM_LBUTTONDOWN || uMsg == WM_LBUTTONDBLCLK ) &amp;&amp; PtInRect( &amp;<a class="code" href="classgbmath_1_1base__camera.htm#a87de2d179a5260616044a4b9ec156b84" title="Rectangle within which a drag can be initiated.">m_rcDrag</a>, ptCursor ) )
<a name="l00228"></a>00228             { 
<a name="l00229"></a>00229                                 <a class="code" href="classgbmath_1_1base__camera.htm#a2a3e775741c1f2403bc1d7ce05502596" title="True if left button is down.">m_bMouseLButtonDown</a> = <span class="keyword">true</span>; <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> |= MOUSE_LEFT_BUTTON; 
<a name="l00230"></a>00230                         }
<a name="l00231"></a>00231 
<a name="l00232"></a>00232                         <span class="keywordflow">if</span>( ( uMsg == WM_MBUTTONDOWN || uMsg == WM_MBUTTONDBLCLK ) &amp;&amp; PtInRect( &amp;<a class="code" href="classgbmath_1_1base__camera.htm#a87de2d179a5260616044a4b9ec156b84" title="Rectangle within which a drag can be initiated.">m_rcDrag</a>, ptCursor ) )
<a name="l00233"></a>00233                         { 
<a name="l00234"></a>00234                                 <a class="code" href="classgbmath_1_1base__camera.htm#a92c26f1ae8ceb0614bc30bd377a0f3b7" title="True if middle button is down.">m_bMouseMButtonDown</a> = <span class="keyword">true</span>; <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> |= MOUSE_MIDDLE_BUTTON; 
<a name="l00235"></a>00235                         }
<a name="l00236"></a>00236 
<a name="l00237"></a>00237                         <span class="keywordflow">if</span>( ( uMsg == WM_RBUTTONDOWN || uMsg == WM_RBUTTONDBLCLK ) &amp;&amp; PtInRect( &amp;<a class="code" href="classgbmath_1_1base__camera.htm#a87de2d179a5260616044a4b9ec156b84" title="Rectangle within which a drag can be initiated.">m_rcDrag</a>, ptCursor ) )
<a name="l00238"></a>00238                         { 
<a name="l00239"></a>00239                                 <a class="code" href="classgbmath_1_1base__camera.htm#ad5e8b83eef2b3bb07d633132e24aa90f" title="True if right button is down.">m_bMouseRButtonDown</a> = <span class="keyword">true</span>; <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> |= MOUSE_RIGHT_BUTTON; 
<a name="l00240"></a>00240                         }
<a name="l00241"></a>00241 
<a name="l00242"></a>00242             <span class="comment">// Capture the mouse, so if the mouse button is </span>
<a name="l00243"></a>00243             <span class="comment">// released outside the window, we&#39;ll get the WM_LBUTTONUP message</span>
<a name="l00244"></a>00244             SetCapture(hWnd);
<a name="l00245"></a>00245             GetCursorPos( &amp;<a class="code" href="classgbmath_1_1base__camera.htm#a4700f8110d4e4c26d6fb7b08e921cb82" title="Last absolute position of mouse cursor.">m_ptLastMousePosition</a> );
<a name="l00246"></a>00246             <span class="keywordflow">return</span> TRUE;
<a name="l00247"></a>00247         }
<a name="l00248"></a>00248 
<a name="l00249"></a>00249         <span class="keywordflow">case</span> WM_RBUTTONUP: 
<a name="l00250"></a>00250         <span class="keywordflow">case</span> WM_MBUTTONUP: 
<a name="l00251"></a>00251         <span class="keywordflow">case</span> WM_LBUTTONUP:   
<a name="l00252"></a>00252         {
<a name="l00253"></a>00253             <span class="comment">// Update member var state</span>
<a name="l00254"></a>00254             <span class="keywordflow">if</span>( uMsg == WM_LBUTTONUP ) 
<a name="l00255"></a>00255                         { 
<a name="l00256"></a>00256                                 <a class="code" href="classgbmath_1_1base__camera.htm#a2a3e775741c1f2403bc1d7ce05502596" title="True if left button is down.">m_bMouseLButtonDown</a> = <span class="keyword">false</span>; <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp;= ~MOUSE_LEFT_BUTTON; 
<a name="l00257"></a>00257                         }
<a name="l00258"></a>00258 
<a name="l00259"></a>00259             <span class="keywordflow">if</span>( uMsg == WM_MBUTTONUP ) 
<a name="l00260"></a>00260                         { 
<a name="l00261"></a>00261                                 <a class="code" href="classgbmath_1_1base__camera.htm#a92c26f1ae8ceb0614bc30bd377a0f3b7" title="True if middle button is down.">m_bMouseMButtonDown</a> = <span class="keyword">false</span>; <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp;= ~MOUSE_MIDDLE_BUTTON; 
<a name="l00262"></a>00262                         }
<a name="l00263"></a>00263 
<a name="l00264"></a>00264             <span class="keywordflow">if</span>( uMsg == WM_RBUTTONUP ) 
<a name="l00265"></a>00265                         { 
<a name="l00266"></a>00266                                 <a class="code" href="classgbmath_1_1base__camera.htm#ad5e8b83eef2b3bb07d633132e24aa90f" title="True if right button is down.">m_bMouseRButtonDown</a> = <span class="keyword">false</span>; <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp;= ~MOUSE_RIGHT_BUTTON; 
<a name="l00267"></a>00267                         }
<a name="l00268"></a>00268 
<a name="l00269"></a>00269 
<a name="l00270"></a>00270             <span class="comment">// Release the capture if no mouse buttons down</span>
<a name="l00271"></a>00271             <span class="keywordflow">if</span>( !<a class="code" href="classgbmath_1_1base__camera.htm#a2a3e775741c1f2403bc1d7ce05502596" title="True if left button is down.">m_bMouseLButtonDown</a>  &amp;&amp; 
<a name="l00272"></a>00272                 !<a class="code" href="classgbmath_1_1base__camera.htm#ad5e8b83eef2b3bb07d633132e24aa90f" title="True if right button is down.">m_bMouseRButtonDown</a> &amp;&amp;
<a name="l00273"></a>00273                 !<a class="code" href="classgbmath_1_1base__camera.htm#a92c26f1ae8ceb0614bc30bd377a0f3b7" title="True if middle button is down.">m_bMouseMButtonDown</a> )
<a name="l00274"></a>00274             {
<a name="l00275"></a>00275                 ReleaseCapture();
<a name="l00276"></a>00276             }
<a name="l00277"></a>00277             <span class="keywordflow">break</span>;
<a name="l00278"></a>00278         }
<a name="l00279"></a>00279 
<a name="l00280"></a>00280         <span class="keywordflow">case</span> WM_CAPTURECHANGED:
<a name="l00281"></a>00281         {
<a name="l00282"></a>00282             <span class="keywordflow">if</span>( (HWND)lParam != hWnd )
<a name="l00283"></a>00283             {
<a name="l00284"></a>00284                 <span class="keywordflow">if</span>( (<a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp; MOUSE_LEFT_BUTTON) ||
<a name="l00285"></a>00285                     (<a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp; MOUSE_MIDDLE_BUTTON) ||
<a name="l00286"></a>00286                     (<a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp; MOUSE_RIGHT_BUTTON) )
<a name="l00287"></a>00287                 {
<a name="l00288"></a>00288                     <a class="code" href="classgbmath_1_1base__camera.htm#a2a3e775741c1f2403bc1d7ce05502596" title="True if left button is down.">m_bMouseLButtonDown</a> = <span class="keyword">false</span>;
<a name="l00289"></a>00289                     <a class="code" href="classgbmath_1_1base__camera.htm#a92c26f1ae8ceb0614bc30bd377a0f3b7" title="True if middle button is down.">m_bMouseMButtonDown</a> = <span class="keyword">false</span>;
<a name="l00290"></a>00290                     <a class="code" href="classgbmath_1_1base__camera.htm#ad5e8b83eef2b3bb07d633132e24aa90f" title="True if right button is down.">m_bMouseRButtonDown</a> = <span class="keyword">false</span>;
<a name="l00291"></a>00291                     <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp;= ~MOUSE_LEFT_BUTTON;
<a name="l00292"></a>00292                     <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp;= ~MOUSE_MIDDLE_BUTTON;
<a name="l00293"></a>00293                     <a class="code" href="classgbmath_1_1base__camera.htm#aea280e158e484398712f988fa2789c04" title="mask of which buttons are down">m_nCurrentButtonMask</a> &amp;= ~MOUSE_RIGHT_BUTTON;
<a name="l00294"></a>00294                     ReleaseCapture();
<a name="l00295"></a>00295                 }
<a name="l00296"></a>00296             }
<a name="l00297"></a>00297             <span class="keywordflow">break</span>;
<a name="l00298"></a>00298         }
<a name="l00299"></a>00299 
<a name="l00300"></a>00300         <span class="keywordflow">case</span> WM_MOUSEWHEEL: 
<a name="l00301"></a>00301             <span class="comment">// Update member var state</span>
<a name="l00302"></a>00302             <a class="code" href="classgbmath_1_1base__camera.htm#a9900717f0106c2c77b2435394eee896c" title="Amount of middle wheel scroll (+/-).">m_nMouseWheelDelta</a> = (short)HIWORD(wParam) / 120;
<a name="l00303"></a>00303             <span class="keywordflow">break</span>;
<a name="l00304"></a>00304     }
<a name="l00305"></a>00305 
<a name="l00306"></a>00306     <span class="keywordflow">return</span> FALSE;
<a name="l00307"></a>00307 }
<a name="l00308"></a>00308 
<a name="l00309"></a>00309 
<a name="l00310"></a>00310 <span class="comment">//========================================================================</span>
<a name="l00311"></a>00311 <span class="comment">// Figure out the velocity based on keyboard input &amp; drag if any</span>
<a name="l00312"></a>00312 <span class="comment">//========================================================================</span>
<a name="l00313"></a><a class="code" href="classgbmath_1_1base__camera.htm#a3331d522be12fe661facb53b2b0f9292">00313</a> <span class="keywordtype">void</span> <a class="code" href="classgbmath_1_1base__camera.htm#a3331d522be12fe661facb53b2b0f9292">base_camera::getInput</a>( <span class="keywordtype">bool</span> bGetKeyboardInput, <span class="keywordtype">bool</span> bGetMouseInput, 
<a name="l00314"></a>00314                                                    <span class="keywordtype">bool</span> bGetGamepadInput, <span class="keywordtype">bool</span> bResetCursorAfterMove )
<a name="l00315"></a>00315 {
<a name="l00316"></a>00316     <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0,0,0);
<a name="l00317"></a>00317     <span class="keywordflow">if</span>( bGetKeyboardInput )
<a name="l00318"></a>00318     {
<a name="l00319"></a>00319         <span class="comment">// Update acceleration vector based on keyboard state</span>
<a name="l00320"></a>00320         <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa69cb50f3ac4486184c77a847c8c068c9">CAM_MOVE_FORWARD</a>]) )
<a name="l00321"></a>00321             <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a>.<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a> += 1.0f;
<a name="l00322"></a>00322         <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa42d2fa2dfaff42eff4301b4d9662aa9f">CAM_MOVE_BACKWARD</a>]) )
<a name="l00323"></a>00323             <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a>.<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a> -= 1.0f;
<a name="l00324"></a>00324         <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#a7338847ca3f5475b1db11925e6f0fff3" title="If true, then camera can move in the y-axis.">m_bEnableYAxisMovement</a> )
<a name="l00325"></a>00325         {
<a name="l00326"></a>00326             <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa71c1ee0cb362deeb44665bc64195f13b">CAM_MOVE_UP</a>]) )
<a name="l00327"></a>00327                 <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a>.<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a> += 1.0f;
<a name="l00328"></a>00328             <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaadc74270c53d158084a7fb8195e9192a7">CAM_MOVE_DOWN</a>]) )
<a name="l00329"></a>00329                 <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a>.<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a> -= 1.0f;
<a name="l00330"></a>00330         }
<a name="l00331"></a>00331         <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaaaccc9a322e2e5512409622f01a886f6b">CAM_STRAFE_RIGHT</a>]) )
<a name="l00332"></a>00332             <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a>.<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a> += 1.0f;
<a name="l00333"></a>00333         <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#abf9fa3313ad7f5316280dd6070e86c61">isKeyDown</a>(<a class="code" href="classgbmath_1_1base__camera.htm#a9ebe23052bc7279b2ade8bcf4f194c44" title="State of input - KEY_WAS_DOWN_MASK|KEY_IS_DOWN_MASK.">m_aKeys</a>[<a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaab7d231fbc07f517a34d9870b5cb48f81">CAM_STRAFE_LEFT</a>]) )
<a name="l00334"></a>00334             <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a>.<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a> -= 1.0f;
<a name="l00335"></a>00335     }
<a name="l00336"></a>00336 
<a name="l00337"></a>00337     <span class="keywordflow">if</span>( bGetMouseInput )
<a name="l00338"></a>00338     {
<a name="l00339"></a>00339         <span class="comment">// Get current position of mouse</span>
<a name="l00340"></a>00340         POINT ptCurMouseDelta;
<a name="l00341"></a>00341         POINT ptCurMousePos;
<a name="l00342"></a>00342         
<a name="l00343"></a>00343         <span class="keywordflow">if</span>( GetCursorPos( &amp;ptCurMousePos ) )
<a name="l00344"></a>00344         {
<a name="l00345"></a>00345             <span class="comment">// Calc how far it&#39;s moved since last frame</span>
<a name="l00346"></a>00346             ptCurMouseDelta.x = ptCurMousePos.x - <a class="code" href="classgbmath_1_1base__camera.htm#a4700f8110d4e4c26d6fb7b08e921cb82" title="Last absolute position of mouse cursor.">m_ptLastMousePosition</a>.x;
<a name="l00347"></a>00347             ptCurMouseDelta.y = ptCurMousePos.y - <a class="code" href="classgbmath_1_1base__camera.htm#a4700f8110d4e4c26d6fb7b08e921cb82" title="Last absolute position of mouse cursor.">m_ptLastMousePosition</a>.y;
<a name="l00348"></a>00348             
<a name="l00349"></a>00349             <span class="comment">// Record current position for next time</span>
<a name="l00350"></a>00350             <a class="code" href="classgbmath_1_1base__camera.htm#a4700f8110d4e4c26d6fb7b08e921cb82" title="Last absolute position of mouse cursor.">m_ptLastMousePosition</a> = ptCurMousePos;
<a name="l00351"></a>00351         }
<a name="l00352"></a>00352         <span class="keywordflow">else</span>
<a name="l00353"></a>00353         {
<a name="l00354"></a>00354             <span class="comment">// If GetCursorPos() returns false, just set delta to zero</span>
<a name="l00355"></a>00355             ptCurMouseDelta.x = 0;
<a name="l00356"></a>00356             ptCurMouseDelta.y = 0;
<a name="l00357"></a>00357         }
<a name="l00358"></a>00358 
<a name="l00359"></a>00359                 <span class="comment">/**************** ÐÐ¡ÐÐÐ®Ð§ÐÐÐ ********* MONITOR INFO</span>
<a name="l00360"></a>00360 <span class="comment">        if( bResetCursorAfterMove &amp;&amp; TRUE) // ks777 MYUTIsActive() )</span>
<a name="l00361"></a>00361 <span class="comment">        {</span>
<a name="l00362"></a>00362 <span class="comment">            // Set position of camera to center of desktop, </span>
<a name="l00363"></a>00363 <span class="comment">            // so it always has room to move.  This is very useful</span>
<a name="l00364"></a>00364 <span class="comment">            // if the cursor is hidden.  If this isn&#39;t done and cursor is hidden, </span>
<a name="l00365"></a>00365 <span class="comment">            // then invisible cursor will hit the edge of the screen </span>
<a name="l00366"></a>00366 <span class="comment">            // and the user can&#39;t tell what happened</span>
<a name="l00367"></a>00367 <span class="comment">            POINT ptCenter;</span>
<a name="l00368"></a>00368 <span class="comment">                        assert(m_hwnd &amp;&amp; &quot;m_hwnd is zero&quot;);</span>
<a name="l00369"></a>00369 <span class="comment"></span>
<a name="l00370"></a>00370 <span class="comment">            // Get the center of the current monitor</span>
<a name="l00371"></a>00371 <span class="comment">            MYMONITORINFO mi;</span>
<a name="l00372"></a>00372 <span class="comment">            mi.cbSize = sizeof(MONITORINFO);</span>
<a name="l00373"></a>00373 <span class="comment">                        </span>
<a name="l00374"></a>00374 <span class="comment">            MYUTGetMonitorInfo( MYUTMonitorFromWindow( m_hwnd,MONITOR_DEFAULTTONEAREST), &amp;mi );</span>
<a name="l00375"></a>00375 <span class="comment">            ptCenter.x = (mi.rcMonitor.left + mi.rcMonitor.right) / 2;</span>
<a name="l00376"></a>00376 <span class="comment">            ptCenter.y = (mi.rcMonitor.top + mi.rcMonitor.bottom) / 2;   </span>
<a name="l00377"></a>00377 <span class="comment">            SetCursorPos( ptCenter.x, ptCenter.y );</span>
<a name="l00378"></a>00378 <span class="comment">            m_ptLastMousePosition = ptCenter;</span>
<a name="l00379"></a>00379 <span class="comment">        }</span>
<a name="l00380"></a>00380 <span class="comment">                ***********************************************/</span>
<a name="l00381"></a>00381 
<a name="l00382"></a>00382 
<a name="l00383"></a>00383         <span class="comment">// Smooth the relative mouse data over a few frames so it isn&#39;t </span>
<a name="l00384"></a>00384         <span class="comment">// jerky when moving slowly at low frame rates.</span>
<a name="l00385"></a>00385         <span class="keywordtype">float</span> fPercentOfNew =  1.0f / <a class="code" href="classgbmath_1_1base__camera.htm#a8dcf83e33d3c7d5968eece72bec5ac44" title="Number of frames to smooth mouse data over.">m_fFramesToSmoothMouseData</a>;
<a name="l00386"></a>00386         <span class="keywordtype">float</span> fPercentOfOld =  1.0f - fPercentOfNew;
<a name="l00387"></a>00387         <a class="code" href="classgbmath_1_1base__camera.htm#a453c7edce080d75fded4e148005103cf" title="Mouse relative delta smoothed over a few frames.">m_vMouseDelta</a>.<a class="code" href="structgbmath_1_1vec2.htm#a86ff75c64d87662abfee8c35c5a343d0">x</a> = <a class="code" href="classgbmath_1_1base__camera.htm#a453c7edce080d75fded4e148005103cf" title="Mouse relative delta smoothed over a few frames.">m_vMouseDelta</a>.<a class="code" href="structgbmath_1_1vec2.htm#a86ff75c64d87662abfee8c35c5a343d0">x</a>*fPercentOfOld + ptCurMouseDelta.x*fPercentOfNew;
<a name="l00388"></a>00388         <a class="code" href="classgbmath_1_1base__camera.htm#a453c7edce080d75fded4e148005103cf" title="Mouse relative delta smoothed over a few frames.">m_vMouseDelta</a>.<a class="code" href="structgbmath_1_1vec2.htm#a9212649e2705d2216739fc89763f00b6">y</a> = <a class="code" href="classgbmath_1_1base__camera.htm#a453c7edce080d75fded4e148005103cf" title="Mouse relative delta smoothed over a few frames.">m_vMouseDelta</a>.<a class="code" href="structgbmath_1_1vec2.htm#a9212649e2705d2216739fc89763f00b6">y</a>*fPercentOfOld + ptCurMouseDelta.y*fPercentOfNew;
<a name="l00389"></a>00389 
<a name="l00390"></a>00390     }
<a name="l00391"></a>00391 
<a name="l00392"></a>00392     <span class="keywordflow">if</span>( bGetGamepadInput )
<a name="l00393"></a>00393     {
<a name="l00394"></a>00394         <a class="code" href="classgbmath_1_1base__camera.htm#ada94b737147af3fd3cd04d46335a5c64">m_vGamePadLeftThumb</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0,0,0);
<a name="l00395"></a>00395         <a class="code" href="classgbmath_1_1base__camera.htm#adce85edeb0d9332f8ddf25baa71d94e7">m_vGamePadRightThumb</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0,0,0);
<a name="l00396"></a>00396           
<a name="l00397"></a>00397         <span class="comment">// Find out which controller was non-zero last</span>
<a name="l00398"></a>00398         <span class="keywordtype">int</span> iMostRecentlyActive = -1;
<a name="l00399"></a>00399         <span class="keywordtype">double</span> fMostRecentlyActiveTime = 0.0f;
<a name="l00400"></a>00400  
<a name="l00401"></a>00401 
<a name="l00402"></a>00402 
<a name="l00403"></a>00403     }
<a name="l00404"></a>00404 }
<a name="l00405"></a>00405 
<a name="l00406"></a>00406 
<a name="l00407"></a>00407 <span class="comment">//========================================================================</span>
<a name="l00408"></a>00408 <span class="comment">// Figure out the velocity based on keyboard input &amp; drag if any</span>
<a name="l00409"></a>00409 <span class="comment">//========================================================================</span>
<a name="l00410"></a><a class="code" href="classgbmath_1_1base__camera.htm#af823bf9bc69fb7eadee85a2b4e17b08d">00410</a> <span class="keywordtype">void</span> <a class="code" href="classgbmath_1_1base__camera.htm#af823bf9bc69fb7eadee85a2b4e17b08d">base_camera::updateVelocity</a>( <span class="keywordtype">float</span> fElapsedTime )
<a name="l00411"></a>00411 {
<a name="l00412"></a>00412     <a class="code" href="structgbmath_1_1mat44.htm" title="matrix 4x4.">mat44</a> mRotDelta;
<a name="l00413"></a>00413 
<a name="l00414"></a>00414     <a class="code" href="structgbmath_1_1vec2.htm" title="2d-base vector. Corrected by operators epislon">vec2</a> vGamePadRightThumb = <a class="code" href="structgbmath_1_1vec2.htm" title="2d-base vector. Corrected by operators epislon">vec2</a>(<a class="code" href="classgbmath_1_1base__camera.htm#adce85edeb0d9332f8ddf25baa71d94e7">m_vGamePadRightThumb</a>.<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>, -<a class="code" href="classgbmath_1_1base__camera.htm#adce85edeb0d9332f8ddf25baa71d94e7">m_vGamePadRightThumb</a>.<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a>);
<a name="l00415"></a>00415     <a class="code" href="classgbmath_1_1base__camera.htm#a235d760d258f8e8af6fd42e5352f284a" title="Velocity of camera.">m_vRotVelocity</a> = <a class="code" href="classgbmath_1_1base__camera.htm#a453c7edce080d75fded4e148005103cf" title="Mouse relative delta smoothed over a few frames.">m_vMouseDelta</a> * <a class="code" href="classgbmath_1_1base__camera.htm#aba9d2e9a17ae89b686a300eb6f63d885" title="Scaler for rotation.">m_fRotationScaler</a> + vGamePadRightThumb * 0.02f;
<a name="l00416"></a>00416 
<a name="l00417"></a>00417     <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a> vAccel = <a class="code" href="classgbmath_1_1base__camera.htm#a065c9db8b9611d974af7a9cb88547aa2" title="Direction vector of keyboard input.">m_vKeyboardDirection</a> + <a class="code" href="classgbmath_1_1base__camera.htm#ada94b737147af3fd3cd04d46335a5c64">m_vGamePadLeftThumb</a>;
<a name="l00418"></a>00418 
<a name="l00419"></a>00419     <span class="comment">// Normalize vector so if moving 2 dirs (left &amp; forward), </span>
<a name="l00420"></a>00420     <span class="comment">// the camera doesn&#39;t move faster than if moving in 1 dir</span>
<a name="l00421"></a>00421 
<a name="l00422"></a>00422  
<a name="l00423"></a>00423     <span class="comment">//D 3DX Vec3Normalize( vAccel, vAccel );</span>
<a name="l00424"></a>00424           vAccel.<a class="code" href="structgbmath_1_1vec3.htm#a3206299b452ccb51fb816a29e8db7739">normalize</a>();
<a name="l00425"></a>00425  
<a name="l00426"></a>00426  
<a name="l00427"></a>00427 
<a name="l00428"></a>00428     <span class="comment">// Scale the acceleration vector</span>
<a name="l00429"></a>00429     vAccel *= <a class="code" href="classgbmath_1_1base__camera.htm#af264c5c91ba821ca6750c6bf786a92d6" title="Scaler for movement.">m_fMoveScaler</a>;
<a name="l00430"></a>00430 
<a name="l00431"></a>00431     <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#a3f6ddfbc0272635a987cf9b775fe83bf" title="If true, then camera movement will slow to a stop otherwise movement is instant.">m_bMovementDrag</a> )
<a name="l00432"></a>00432     {
<a name="l00433"></a>00433         <span class="comment">// Is there any acceleration this frame?</span>
<a name="l00434"></a>00434       <span class="comment">//if( D 3DX Vec3LengthSq( vAccel ) &gt; 0 )</span>
<a name="l00435"></a>00435         <span class="keywordflow">if</span>( vAccel.<a class="code" href="structgbmath_1_1vec3.htm#a39aeb4da19026149e85efbd62d70b66d">length_sq</a>() &gt; 0 )
<a name="l00436"></a>00436         {
<a name="l00437"></a>00437             <span class="comment">// If so, then this means the user has pressed a movement key\</span>
<a name="l00438"></a>00438 <span class="comment">            // so change the velocity immediately to acceleration </span>
<a name="l00439"></a>00439             <span class="comment">// upon keyboard input.  This isn&#39;t normal physics</span>
<a name="l00440"></a>00440             <span class="comment">// but it will give a quick response to keyboard input</span>
<a name="l00441"></a>00441             <a class="code" href="classgbmath_1_1base__camera.htm#aba20fc8ce1cc25677d9ead18cbcddf9e" title="Velocity of camera.">m_vVelocity</a> = vAccel;
<a name="l00442"></a>00442             <a class="code" href="classgbmath_1_1base__camera.htm#a1d5b06e7b96961dc163e53d9c34965c0" title="Countdown timer to apply drag.">m_fDragTimer</a> = <a class="code" href="classgbmath_1_1base__camera.htm#adb7e0eef7c6c32c02fe0e7da1cdde520" title="Time it takes for velocity to go from full to 0.">m_fTotalDragTimeToZero</a>;
<a name="l00443"></a>00443             <a class="code" href="classgbmath_1_1base__camera.htm#ac85d4f4dcc7f14e4b9b4a8f4eb0ccab5" title="Velocity drag force.">m_vVelocityDrag</a> = vAccel / <a class="code" href="classgbmath_1_1base__camera.htm#a1d5b06e7b96961dc163e53d9c34965c0" title="Countdown timer to apply drag.">m_fDragTimer</a>;
<a name="l00444"></a>00444         }
<a name="l00445"></a>00445         <span class="keywordflow">else</span> 
<a name="l00446"></a>00446         {
<a name="l00447"></a>00447             <span class="comment">// If no key being pressed, then slowly decrease velocity to 0</span>
<a name="l00448"></a>00448             <span class="keywordflow">if</span>( <a class="code" href="classgbmath_1_1base__camera.htm#a1d5b06e7b96961dc163e53d9c34965c0" title="Countdown timer to apply drag.">m_fDragTimer</a> &gt; 0 )
<a name="l00449"></a>00449             {
<a name="l00450"></a>00450                 <span class="comment">// Drag until timer is &lt;= 0</span>
<a name="l00451"></a>00451                 <a class="code" href="classgbmath_1_1base__camera.htm#aba20fc8ce1cc25677d9ead18cbcddf9e" title="Velocity of camera.">m_vVelocity</a> -= <a class="code" href="classgbmath_1_1base__camera.htm#ac85d4f4dcc7f14e4b9b4a8f4eb0ccab5" title="Velocity drag force.">m_vVelocityDrag</a> * fElapsedTime;
<a name="l00452"></a>00452                 <a class="code" href="classgbmath_1_1base__camera.htm#a1d5b06e7b96961dc163e53d9c34965c0" title="Countdown timer to apply drag.">m_fDragTimer</a> -= fElapsedTime;
<a name="l00453"></a>00453             }
<a name="l00454"></a>00454             <span class="keywordflow">else</span>
<a name="l00455"></a>00455             {
<a name="l00456"></a>00456                 <span class="comment">// Zero velocity</span>
<a name="l00457"></a>00457                 <a class="code" href="classgbmath_1_1base__camera.htm#aba20fc8ce1cc25677d9ead18cbcddf9e" title="Velocity of camera.">m_vVelocity</a> = <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>(0,0,0);
<a name="l00458"></a>00458             }
<a name="l00459"></a>00459         }
<a name="l00460"></a>00460     }
<a name="l00461"></a>00461     <span class="keywordflow">else</span>
<a name="l00462"></a>00462     {
<a name="l00463"></a>00463         <span class="comment">// No drag, so immediately change the velocity</span>
<a name="l00464"></a>00464         <a class="code" href="classgbmath_1_1base__camera.htm#aba20fc8ce1cc25677d9ead18cbcddf9e" title="Velocity of camera.">m_vVelocity</a> = vAccel;
<a name="l00465"></a>00465     }
<a name="l00466"></a>00466 }
<a name="l00467"></a>00467 
<a name="l00468"></a>00468 
<a name="l00469"></a>00469 
<a name="l00470"></a>00470 
<a name="l00471"></a>00471 <span class="comment">//========================================================================</span>
<a name="l00472"></a>00472 <span class="comment">// Clamps pV to lie inside m_vMinBoundary &amp; m_vMaxBoundary</span>
<a name="l00473"></a>00473 <span class="comment">//========================================================================</span>
<a name="l00474"></a><a class="code" href="classgbmath_1_1base__camera.htm#ae51de5ae028f5ba8a3242c1fa86e0bd9">00474</a> <span class="keywordtype">void</span> <a class="code" href="classgbmath_1_1base__camera.htm#ae51de5ae028f5ba8a3242c1fa86e0bd9">base_camera::constrainToBoundary</a>( <a class="code" href="structgbmath_1_1vec3.htm" title="3d-base vector. Corrected by operators epislon">vec3</a>* pV )
<a name="l00475"></a>00475 {
<a name="l00476"></a>00476     <span class="comment">// Constrain vector to a bounding box </span>
<a name="l00477"></a>00477     pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a> = __max(pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>, <a class="code" href="classgbmath_1_1base__camera.htm#adc1f46ca093c8a985c957f650b347ea3" title="Min point in clip boundary.">m_vMinBoundary</a>.<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>);
<a name="l00478"></a>00478     pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a> = __max(pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a>, <a class="code" href="classgbmath_1_1base__camera.htm#adc1f46ca093c8a985c957f650b347ea3" title="Min point in clip boundary.">m_vMinBoundary</a>.<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a>);
<a name="l00479"></a>00479     pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a> = __max(pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a>, <a class="code" href="classgbmath_1_1base__camera.htm#adc1f46ca093c8a985c957f650b347ea3" title="Min point in clip boundary.">m_vMinBoundary</a>.<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a>);
<a name="l00480"></a>00480 
<a name="l00481"></a>00481     pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a> = __min(pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>, <a class="code" href="classgbmath_1_1base__camera.htm#a53b5e108a6c60d43f75c8594fd46fea1" title="Max point in clip boundary.">m_vMaxBoundary</a>.<a class="code" href="structgbmath_1_1vec3.htm#a5fb2cf8734338da1ad7b4251a3bde292">x</a>);
<a name="l00482"></a>00482     pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a> = __min(pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a>, <a class="code" href="classgbmath_1_1base__camera.htm#a53b5e108a6c60d43f75c8594fd46fea1" title="Max point in clip boundary.">m_vMaxBoundary</a>.<a class="code" href="structgbmath_1_1vec3.htm#aa096d36a3c46c4224f0195f70eb580ec">y</a>);
<a name="l00483"></a>00483     pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a> = __min(pV-&gt;<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a>, <a class="code" href="classgbmath_1_1base__camera.htm#a53b5e108a6c60d43f75c8594fd46fea1" title="Max point in clip boundary.">m_vMaxBoundary</a>.<a class="code" href="structgbmath_1_1vec3.htm#a546e6c38e7c49102f064d130ed3475ee">z</a>);
<a name="l00484"></a>00484 }
<a name="l00485"></a>00485 
<a name="l00486"></a>00486 
<a name="l00487"></a>00487 
<a name="l00488"></a>00488 
<a name="l00489"></a>00489 <span class="comment">//========================================================================</span>
<a name="l00490"></a>00490 <span class="comment">// Maps a windows virtual key to an enum</span>
<a name="l00491"></a>00491 <span class="comment">//========================================================================</span>
<a name="l00492"></a><a class="code" href="classgbmath_1_1base__camera.htm#afe4ca0a55ca81927b70de2bcb5fcc479">00492</a> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baa">CameraKeys</a> <a class="code" href="classgbmath_1_1base__camera.htm#afe4ca0a55ca81927b70de2bcb5fcc479">base_camera::mapKey</a>( UINT nKey )
<a name="l00493"></a>00493 {
<a name="l00494"></a>00494     <span class="comment">// This could be upgraded to a method that&#39;s user-definable but for </span>
<a name="l00495"></a>00495     <span class="comment">// simplicity, we&#39;ll use a hardcoded mapping.</span>
<a name="l00496"></a>00496     <span class="keywordflow">switch</span>( nKey )
<a name="l00497"></a>00497     {
<a name="l00498"></a>00498         <span class="keywordflow">case</span> VK_CONTROL:  <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa923629868e024d05d851bea04125d34f">CAM_CONTROLDOWN</a>;
<a name="l00499"></a>00499         <span class="keywordflow">case</span> VK_LEFT:  <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaab7d231fbc07f517a34d9870b5cb48f81">CAM_STRAFE_LEFT</a>;
<a name="l00500"></a>00500         <span class="keywordflow">case</span> VK_RIGHT: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaaaccc9a322e2e5512409622f01a886f6b">CAM_STRAFE_RIGHT</a>;
<a name="l00501"></a>00501         <span class="keywordflow">case</span> VK_UP:    <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa69cb50f3ac4486184c77a847c8c068c9">CAM_MOVE_FORWARD</a>;
<a name="l00502"></a>00502         <span class="keywordflow">case</span> VK_DOWN:  <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa42d2fa2dfaff42eff4301b4d9662aa9f">CAM_MOVE_BACKWARD</a>;
<a name="l00503"></a>00503         <span class="keywordflow">case</span> VK_PRIOR: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa71c1ee0cb362deeb44665bc64195f13b">CAM_MOVE_UP</a>;        <span class="comment">// pgup</span>
<a name="l00504"></a>00504         <span class="keywordflow">case</span> VK_NEXT:  <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaadc74270c53d158084a7fb8195e9192a7">CAM_MOVE_DOWN</a>;      <span class="comment">// pgdn</span>
<a name="l00505"></a>00505 
<a name="l00506"></a>00506         <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span>:      <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaab7d231fbc07f517a34d9870b5cb48f81">CAM_STRAFE_LEFT</a>;
<a name="l00507"></a>00507         <span class="keywordflow">case</span> <span class="charliteral">&#39;D&#39;</span>:      <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaaaccc9a322e2e5512409622f01a886f6b">CAM_STRAFE_RIGHT</a>;
<a name="l00508"></a>00508         <span class="keywordflow">case</span> <span class="charliteral">&#39;W&#39;</span>:      <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa69cb50f3ac4486184c77a847c8c068c9">CAM_MOVE_FORWARD</a>;
<a name="l00509"></a>00509         <span class="keywordflow">case</span> <span class="charliteral">&#39;S&#39;</span>:      <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa42d2fa2dfaff42eff4301b4d9662aa9f">CAM_MOVE_BACKWARD</a>;
<a name="l00510"></a>00510         <span class="keywordflow">case</span> <span class="charliteral">&#39;Q&#39;</span>:      <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaadc74270c53d158084a7fb8195e9192a7">CAM_MOVE_DOWN</a>;
<a name="l00511"></a>00511         <span class="keywordflow">case</span> <span class="charliteral">&#39;E&#39;</span>:      <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa71c1ee0cb362deeb44665bc64195f13b">CAM_MOVE_UP</a>;
<a name="l00512"></a>00512 
<a name="l00513"></a>00513         <span class="keywordflow">case</span> VK_NUMPAD4: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaab7d231fbc07f517a34d9870b5cb48f81">CAM_STRAFE_LEFT</a>;
<a name="l00514"></a>00514         <span class="keywordflow">case</span> VK_NUMPAD6: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaaaccc9a322e2e5512409622f01a886f6b">CAM_STRAFE_RIGHT</a>;
<a name="l00515"></a>00515         <span class="keywordflow">case</span> VK_NUMPAD8: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa69cb50f3ac4486184c77a847c8c068c9">CAM_MOVE_FORWARD</a>;
<a name="l00516"></a>00516         <span class="keywordflow">case</span> VK_NUMPAD2: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa42d2fa2dfaff42eff4301b4d9662aa9f">CAM_MOVE_BACKWARD</a>;
<a name="l00517"></a>00517         <span class="keywordflow">case</span> VK_NUMPAD9: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa71c1ee0cb362deeb44665bc64195f13b">CAM_MOVE_UP</a>;        
<a name="l00518"></a>00518         <span class="keywordflow">case</span> VK_NUMPAD3: <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaadc74270c53d158084a7fb8195e9192a7">CAM_MOVE_DOWN</a>;      
<a name="l00519"></a>00519 
<a name="l00520"></a>00520         <span class="keywordflow">case</span> VK_HOME:   <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa75b15acaf736e2898d99e0b816b47702">CAM_RESET</a>;
<a name="l00521"></a>00521     }
<a name="l00522"></a>00522 
<a name="l00523"></a>00523     <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#ae406450c9f59f3c29cc3984161e35baaa146b6d5f6cac6bbd63b33f5cf424d604">CAM_UNKNOWN</a>;
<a name="l00524"></a>00524 }
<a name="l00525"></a>00525 
<a name="l00526"></a>00526 
<a name="l00527"></a>00527 
<a name="l00528"></a>00528 
<a name="l00529"></a>00529 <span class="comment">//========================================================================</span>
<a name="l00530"></a>00530 <span class="comment">// Reset the camera&#39;s position back to the default</span>
<a name="l00531"></a>00531 <span class="comment">//========================================================================</span>
<a name="l00532"></a><a class="code" href="classgbmath_1_1base__camera.htm#ac5e3ca370aa960d1f3d1f96bb7f74d96">00532</a> <span class="keywordtype">void</span> <a class="code" href="classgbmath_1_1base__camera.htm#ac5e3ca370aa960d1f3d1f96bb7f74d96">base_camera::reset</a>()
<a name="l00533"></a>00533 {
<a name="l00534"></a>00534     <a class="code" href="classgbmath_1_1base__camera.htm#a0f77a409d4d55c583e0d294a8cc53f2c">setViewParams</a>( <a class="code" href="classgbmath_1_1base__camera.htm#a8db92c4d9d7623df0db4dbf18a97ae2f" title="Default camera eye position.">m_vDefaultEye</a>, <a class="code" href="classgbmath_1_1base__camera.htm#a33af2409928060da5614264954d0873b" title="Default LookAt position.">m_vDefaultLookAt</a> );
<a name="l00535"></a>00535 }
<a name="l00536"></a>00536 
<a name="l00537"></a>00537 
<a name="l00538"></a>00538 
<a name="l00539"></a>00539 
<a name="l00540"></a>00540  
<a name="l00541"></a>00541 }
<a name="l00542"></a>00542 
<a name="l00543"></a>00543 <span class="preprocessor">#endif // #ifdef WIN32</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Tue May 22 10:25:53 2012 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
