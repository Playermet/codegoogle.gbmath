<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: base_camera.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>base_camera.h</h1><a href="base__camera_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 ﻿
<a name="l00022"></a>00022 <span class="preprocessor">#pragma once</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef __GBMATH_H__</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">    #error  DO NOT INCLUDE THIS FILE. USE:   #include &lt;gbmath/_gbmath.h&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="preprocessor">#ifdef WIN32 // // only windows platform</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span>
<a name="l00031"></a>00031 <span class="keyword">const</span> <span class="keywordtype">bool</span> CAMERA_LEFT_HANDLE = <span class="keyword">false</span>;  <span class="comment">// true;</span>
<a name="l00032"></a>00032  
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;windows.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;zmouse.h&gt;</span>
<a name="l00035"></a>00035  
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keyword">namespace </span>gbmath 
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039  
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="preprocessor">#pragma message(&quot;delete this: KEY_WAS_DOWN_MASK .....    &quot; __FILE__ )</span>
<a name="l00042"></a>00042 <span class="preprocessor"></span>
<a name="l00043"></a>00043 <span class="preprocessor">#define KEY_WAS_DOWN_MASK 0x80</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span><span class="preprocessor">#define KEY_IS_DOWN_MASK  0x01</span>
<a name="l00045"></a>00045 <span class="preprocessor"></span>
<a name="l00046"></a>00046 <span class="preprocessor">#define MOUSE_LEFT_BUTTON   0x01</span>
<a name="l00047"></a>00047 <span class="preprocessor"></span><span class="preprocessor">#define MOUSE_MIDDLE_BUTTON 0x02</span>
<a name="l00048"></a>00048 <span class="preprocessor"></span><span class="preprocessor">#define MOUSE_RIGHT_BUTTON  0x04</span>
<a name="l00049"></a>00049 <span class="preprocessor"></span><span class="preprocessor">#define MOUSE_WHEEL         0x08</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="preprocessor">#pragma message(&quot;delete this: D3DUtil_CameraKeys&quot; __FILE__ )</span>
<a name="l00053"></a>00053 <span class="preprocessor"></span>        
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="keyword">enum</span> D3DUtil_CameraKeys
<a name="l00056"></a>00056 {
<a name="l00057"></a>00057     CAM_STRAFE_LEFT = 0,
<a name="l00058"></a>00058     CAM_STRAFE_RIGHT,
<a name="l00059"></a>00059     CAM_MOVE_FORWARD,
<a name="l00060"></a>00060     CAM_MOVE_BACKWARD,
<a name="l00061"></a>00061     CAM_MOVE_UP,
<a name="l00062"></a>00062     CAM_MOVE_DOWN,
<a name="l00063"></a>00063     CAM_RESET,
<a name="l00064"></a>00064     CAM_CONTROLDOWN,
<a name="l00065"></a>00065     CAM_MAX_KEYS,
<a name="l00066"></a>00066     CAM_UNKNOWN = 0xFF
<a name="l00067"></a>00067 };
<a name="l00068"></a>00068   
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 
<a name="l00072"></a>00072 <span class="keyword">class </span>base_camera {
<a name="l00073"></a>00073 <span class="keyword">public</span>:
<a name="l00074"></a>00074                           base_camera();
<a name="l00075"></a>00075         <span class="keyword">virtual</span>  ~base_camera() 
<a name="l00076"></a>00076         {
<a name="l00077"></a>00077 
<a name="l00078"></a>00078         }
<a name="l00079"></a>00079 
<a name="l00080"></a>00080         <span class="comment">// //! \brief Сделать камеру текущей</span>
<a name="l00081"></a>00081         <span class="comment">//virtual HRESULT makeCurrent(IDirect3DDevice9* pDevice) = 0; </span>
<a name="l00082"></a>00082 
<a name="l00083"></a>00083     <span class="comment">// Call these from client and use Get*Matrix() to read new matrices</span>
<a name="l00084"></a>00084     <span class="keyword">virtual</span> LRESULT handleMessages( HWND hWnd, UINT uMsg, WPARAM wParam, 
<a name="l00085"></a>00085                                                                                                                         LPARAM lParam);
<a name="l00086"></a>00086     <span class="keyword">virtual</span> <span class="keywordtype">void</span>    frameMove( <span class="keywordtype">float</span> fElapsedTime ) = 0;
<a name="l00087"></a>00087 
<a name="l00088"></a>00088     <span class="comment">// Functions to change camera matrices</span>
<a name="l00089"></a>00089 
<a name="l00090"></a>00090     <span class="keyword">virtual</span> <span class="keywordtype">void</span> reset(); 
<a name="l00091"></a>00091     <span class="keyword">virtual</span> <span class="keywordtype">void</span> setViewParams( <span class="keyword">const</span> vec3&amp; pvEyePt, <span class="keyword">const</span> vec3&amp; pvLookatPt);
<a name="l00092"></a>00092     <span class="keyword">virtual</span> <span class="keywordtype">void</span> setProjParams( <span class="keywordtype">float</span> fFOV, <span class="keywordtype">float</span> fAspect, 
<a name="l00093"></a>00093                                                                         <span class="keywordtype">float</span> fNearPlane, <span class="keywordtype">float</span> fFarPlane );
<a name="l00094"></a>00094 
<a name="l00095"></a>00095     <span class="comment">// Functions to change behavior</span>
<a name="l00096"></a>00096 
<a name="l00097"></a>00097     <span class="keyword">virtual</span> <span class="keywordtype">void</span> setDragRect( RECT &amp;rc ) 
<a name="l00098"></a>00098         { 
<a name="l00099"></a>00099                 m_rcDrag = rc; 
<a name="l00100"></a>00100         }
<a name="l00101"></a>00101 
<a name="l00102"></a>00102     <span class="keywordtype">void</span> setInvertPitch( <span class="keywordtype">bool</span> bInvertPitch ) 
<a name="l00103"></a>00103         { 
<a name="l00104"></a>00104                 m_bInvertPitch = bInvertPitch; 
<a name="l00105"></a>00105         }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107     <span class="keywordtype">void</span> setDrag( <span class="keywordtype">bool</span> bMovementDrag, <span class="keywordtype">float</span> fTotalDragTimeToZero = 0.25f ) 
<a name="l00108"></a>00108         { 
<a name="l00109"></a>00109                 m_bMovementDrag = bMovementDrag; 
<a name="l00110"></a>00110                 m_fTotalDragTimeToZero = fTotalDragTimeToZero; 
<a name="l00111"></a>00111         }
<a name="l00112"></a>00112 
<a name="l00113"></a>00113         
<a name="l00114"></a>00114         <span class="keywordtype">void</span> setEnableYAxisMovement( <span class="keywordtype">bool</span> bEnableYAxisMovement ) 
<a name="l00115"></a>00115         { 
<a name="l00116"></a>00116                 m_bEnableYAxisMovement = bEnableYAxisMovement; 
<a name="l00117"></a>00117         }
<a name="l00118"></a>00118 
<a name="l00119"></a>00119         
<a name="l00120"></a>00120         <span class="keywordtype">void</span> setEnablePositionMovement( <span class="keywordtype">bool</span> bEnablePositionMovement ) 
<a name="l00121"></a>00121         { 
<a name="l00122"></a>00122                 m_bEnablePositionMovement = bEnablePositionMovement; 
<a name="l00123"></a>00123         }
<a name="l00124"></a>00124 
<a name="l00125"></a>00125         
<a name="l00126"></a>00126         <span class="keywordtype">void</span> setClipToBoundary( <span class="keywordtype">bool</span> bClipToBoundary, vec3* pvMinBoundary, 
<a name="l00127"></a>00127                                                                                 vec3* pvMaxBoundary ) 
<a name="l00128"></a>00128         {
<a name="l00129"></a>00129                 m_bClipToBoundary = bClipToBoundary; 
<a name="l00130"></a>00130 
<a name="l00131"></a>00131                 <span class="keywordflow">if</span>( pvMinBoundary ) 
<a name="l00132"></a>00132                         m_vMinBoundary = *pvMinBoundary; 
<a name="l00133"></a>00133                 
<a name="l00134"></a>00134                 <span class="keywordflow">if</span>( pvMaxBoundary ) 
<a name="l00135"></a>00135                         m_vMaxBoundary = *pvMaxBoundary; 
<a name="l00136"></a>00136         }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138         
<a name="l00139"></a>00139         <span class="keywordtype">void</span> setScalers( <span class="keywordtype">float</span> fRotationScaler = 0.01f, <span class="keywordtype">float</span> fMoveScaler = 5.0f )  
<a name="l00140"></a>00140         { 
<a name="l00141"></a>00141                 m_fRotationScaler = fRotationScaler; 
<a name="l00142"></a>00142                 m_fMoveScaler = fMoveScaler; 
<a name="l00143"></a>00143         }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145         
<a name="l00146"></a>00146         <span class="keywordtype">void</span> setNumberOfFramesToSmoothMouseData( <span class="keywordtype">int</span> nFrames ) 
<a name="l00147"></a>00147         { 
<a name="l00148"></a>00148                 <span class="keywordflow">if</span>( nFrames &gt; 0 ) 
<a name="l00149"></a>00149                         m_fFramesToSmoothMouseData = (float)nFrames; 
<a name="l00150"></a>00150         }
<a name="l00151"></a>00151 
<a name="l00152"></a>00152     <span class="comment">// Functions to get state</span>
<a name="l00153"></a>00153     <span class="keyword">const</span> mat44&amp;  getViewMatrix()<span class="keyword"> const </span>
<a name="l00154"></a>00154 <span class="keyword">        </span>{ 
<a name="l00155"></a>00155                 <span class="keywordflow">return</span> m_mView; 
<a name="l00156"></a>00156         }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158     <span class="keyword">const</span> mat44&amp;  getProjMatrix()<span class="keyword"> const </span>
<a name="l00159"></a>00159 <span class="keyword">        </span>{ 
<a name="l00160"></a>00160                 <span class="keywordflow">return</span> m_mProj; 
<a name="l00161"></a>00161         }
<a name="l00162"></a>00162 
<a name="l00163"></a>00163     <span class="keyword">const</span> vec3&amp; getEyePoint()<span class="keyword"> const      </span>
<a name="l00164"></a>00164 <span class="keyword">        </span>{ 
<a name="l00165"></a>00165                 <span class="keywordflow">return</span> m_vEye; 
<a name="l00166"></a>00166         }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168     <span class="keyword">const</span> vec3&amp; getLookAtPoint()<span class="keyword"> const   </span>
<a name="l00169"></a>00169 <span class="keyword">        </span>{ 
<a name="l00170"></a>00170                 <span class="keywordflow">return</span> m_vLookAt; 
<a name="l00171"></a>00171         }
<a name="l00172"></a>00172 
<a name="l00173"></a>00173     <span class="keywordtype">float</span> getNearClipPlane()<span class="keyword"> const </span>
<a name="l00174"></a>00174 <span class="keyword">        </span>{ 
<a name="l00175"></a>00175                 <span class="keywordflow">return</span> m_fNearPlane; 
<a name="l00176"></a>00176         }
<a name="l00177"></a>00177 
<a name="l00178"></a>00178     <span class="keywordtype">float</span> getFarClipPlane()<span class="keyword"> const </span>
<a name="l00179"></a>00179 <span class="keyword">        </span>{ 
<a name="l00180"></a>00180                 <span class="keywordflow">return</span> m_fFarPlane; 
<a name="l00181"></a>00181         }
<a name="l00182"></a>00182 
<a name="l00183"></a>00183 
<a name="l00184"></a>00184     <span class="keywordtype">bool</span> isBeingDragged()<span class="keyword"> const         </span>
<a name="l00185"></a>00185 <span class="keyword">        </span>{ 
<a name="l00186"></a>00186                 <span class="keywordflow">return</span> (m_bMouseLButtonDown || m_bMouseMButtonDown ||
<a name="l00187"></a>00187                                                                                                 m_bMouseRButtonDown); 
<a name="l00188"></a>00188         }
<a name="l00189"></a>00189 
<a name="l00190"></a>00190     <span class="keywordtype">bool</span> isMouseLButtonDown()<span class="keyword"> const     </span>
<a name="l00191"></a>00191 <span class="keyword">        </span>{ 
<a name="l00192"></a>00192                 <span class="keywordflow">return</span> m_bMouseLButtonDown; 
<a name="l00193"></a>00193         }
<a name="l00194"></a>00194 
<a name="l00195"></a>00195     <span class="keywordtype">bool</span> isMouseMButtonDown()<span class="keyword"> const     </span>
<a name="l00196"></a>00196 <span class="keyword">        </span>{ 
<a name="l00197"></a>00197                 <span class="keywordflow">return</span> m_bMouseMButtonDown; 
<a name="l00198"></a>00198         } 
<a name="l00199"></a>00199 
<a name="l00200"></a>00200     <span class="keywordtype">bool</span> isMouseRButtonDown()<span class="keyword"> const     </span>
<a name="l00201"></a>00201 <span class="keyword">        </span>{ 
<a name="l00202"></a>00202                 <span class="keywordflow">return</span> m_bMouseRButtonDown; 
<a name="l00203"></a>00203         } 
<a name="l00204"></a>00204 
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 <span class="keyword">protected</span>:
<a name="l00208"></a>00208     <span class="comment">// Functions to map a WM_KEYDOWN key to a D3DUtil_CameraKeys enum</span>
<a name="l00209"></a>00209     <span class="comment">// &gt;&gt;&gt;&gt;  old  : virtual </span>
<a name="l00210"></a>00210                 <span class="keyword">static</span> D3DUtil_CameraKeys mapKey( UINT nKey );  
<a name="l00211"></a>00211 
<a name="l00212"></a>00212     <span class="keywordtype">bool</span> isKeyDown( BYTE key )<span class="keyword"> const </span>
<a name="l00213"></a>00213 <span class="keyword">        </span>{ 
<a name="l00214"></a>00214                 <span class="keywordflow">return</span>( (key &amp; KEY_IS_DOWN_MASK) == KEY_IS_DOWN_MASK ); 
<a name="l00215"></a>00215         }
<a name="l00216"></a>00216 
<a name="l00217"></a>00217     <span class="keywordtype">bool</span> wasKeyDown( BYTE key )<span class="keyword"> const </span>
<a name="l00218"></a>00218 <span class="keyword">        </span>{ 
<a name="l00219"></a>00219                 <span class="keywordflow">return</span>( (key &amp; KEY_WAS_DOWN_MASK) == KEY_WAS_DOWN_MASK ); 
<a name="l00220"></a>00220         }
<a name="l00221"></a>00221 
<a name="l00222"></a>00222     <span class="keywordtype">void</span> constrainToBoundary( vec3* pV );
<a name="l00223"></a>00223     <span class="keywordtype">void</span> updateVelocity( <span class="keywordtype">float</span> fElapsedTime );
<a name="l00224"></a>00224     <span class="keywordtype">void</span> getInput( <span class="keywordtype">bool</span> bGetKeyboardInput,  <span class="keywordtype">bool</span> bGetMouseInput, 
<a name="l00225"></a>00225                                                                                         <span class="keywordtype">bool</span> bGetGamepadInput, 
<a name="l00226"></a>00226                                                                                         <span class="keywordtype">bool</span> bResetCursorAfterMove);
<a name="l00227"></a>00227  
<a name="l00228"></a>00228 
<a name="l00229"></a>00229     mat44            m_mView; 
<a name="l00230"></a>00230     mat44            m_mProj; 
<a name="l00231"></a>00231  
<a name="l00232"></a>00232     vec3           m_vGamePadLeftThumb;
<a name="l00233"></a>00233     vec3           m_vGamePadRightThumb;
<a name="l00234"></a>00234  
<a name="l00235"></a>00235     <span class="keywordtype">int</span>                   m_cKeysDown;            
<a name="l00236"></a>00236     BYTE                  m_aKeys[CAM_MAX_KEYS];  
<a name="l00237"></a>00237     vec3           m_vKeyboardDirection;   
<a name="l00238"></a>00238     POINT                 m_ptLastMousePosition;  
<a name="l00239"></a>00239     <span class="keywordtype">bool</span>                  m_bMouseLButtonDown;    
<a name="l00240"></a>00240     <span class="keywordtype">bool</span>                  m_bMouseMButtonDown;    
<a name="l00241"></a>00241     <span class="keywordtype">bool</span>                  m_bMouseRButtonDown;    
<a name="l00242"></a>00242     <span class="keywordtype">int</span>                   m_nCurrentButtonMask;   
<a name="l00243"></a>00243     <span class="keywordtype">int</span>                   m_nMouseWheelDelta;     
<a name="l00244"></a>00244     vec2           m_vMouseDelta;          
<a name="l00245"></a>00245     <span class="keywordtype">float</span>                 m_fFramesToSmoothMouseData; 
<a name="l00246"></a>00246 
<a name="l00247"></a>00247     vec3           m_vDefaultEye;          
<a name="l00248"></a>00248     vec3           m_vDefaultLookAt;       
<a name="l00249"></a>00249     vec3           m_vEye;                 
<a name="l00250"></a>00250     vec3           m_vLookAt;              
<a name="l00251"></a>00251     <span class="keywordtype">float</span>                 m_fCameraYawAngle;      
<a name="l00252"></a>00252     <span class="keywordtype">float</span>                 m_fCameraPitchAngle;    
<a name="l00253"></a>00253 
<a name="l00254"></a>00254     RECT                  m_rcDrag;               
<a name="l00255"></a>00255     vec3           m_vVelocity;            
<a name="l00256"></a>00256     <span class="keywordtype">bool</span>                  m_bMovementDrag;        
<a name="l00257"></a>00257     vec3           m_vVelocityDrag;        
<a name="l00258"></a>00258     <span class="keywordtype">float</span>                 m_fDragTimer;           
<a name="l00259"></a>00259     <span class="keywordtype">float</span>                 m_fTotalDragTimeToZero; 
<a name="l00260"></a>00260     vec2           m_vRotVelocity;         
<a name="l00261"></a>00261 
<a name="l00262"></a>00262     <span class="keywordtype">float</span>                 m_fFOV;                 
<a name="l00263"></a>00263     <span class="keywordtype">float</span>                 m_fAspect;              
<a name="l00264"></a>00264     <span class="keywordtype">float</span>                 m_fNearPlane;           
<a name="l00265"></a>00265     <span class="keywordtype">float</span>                 m_fFarPlane;            
<a name="l00266"></a>00266 
<a name="l00267"></a>00267     <span class="keywordtype">float</span>                 m_fRotationScaler;      
<a name="l00268"></a>00268     <span class="keywordtype">float</span>                 m_fMoveScaler;          
<a name="l00269"></a>00269 
<a name="l00270"></a>00270     <span class="keywordtype">bool</span>                  m_bInvertPitch;         
<a name="l00271"></a>00271     <span class="keywordtype">bool</span>                  m_bEnablePositionMovement; 
<a name="l00272"></a>00272     <span class="keywordtype">bool</span>                  m_bEnableYAxisMovement; 
<a name="l00273"></a>00273 
<a name="l00274"></a>00274     <span class="keywordtype">bool</span>                  m_bClipToBoundary;      
<a name="l00275"></a>00275     vec3           m_vMinBoundary;         
<a name="l00276"></a>00276     vec3           m_vMaxBoundary;         
<a name="l00277"></a>00277 
<a name="l00278"></a>00278         HWND m_hwnd;
<a name="l00279"></a>00279 };
<a name="l00280"></a>00280 <span class="comment">// end class</span>
<a name="l00281"></a>00281 
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 <span class="comment">//-------------------------------------------------------------------------</span>
<a name="l00284"></a>00284  
<a name="l00285"></a>00285 }
<a name="l00286"></a>00286 
<a name="l00287"></a>00287 
<a name="l00288"></a>00288 <span class="preprocessor">#endif // #ifdef WIN32</span>
<a name="l00289"></a>00289 <span class="preprocessor"></span> 
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sat Aug 27 20:46:51 2011 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
