<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: color4f.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>color4f.h</h1><a href="color4f_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 ï»¿
<a name="l00007"></a>00007 <span class="preprocessor">#pragma once</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span>
<a name="l00009"></a>00009 <span class="comment">/*</span>
<a name="l00010"></a>00010 <span class="comment">#include &quot;color4.h&quot;</span>
<a name="l00011"></a>00011 <span class="comment">#include &quot;color_typedef.h&quot;</span>
<a name="l00012"></a>00012 <span class="comment">*/</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#ifndef __GBMATH_H__</span>
<a name="l00015"></a>00015 <span class="preprocessor"></span><span class="preprocessor">#error  DO NOT INCLUDE THIS FILE. USE:   #include &lt;gbmath/_gbmath.h&gt;</span>
<a name="l00016"></a>00016 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span>
<a name="l00018"></a>00018  
<a name="l00019"></a>00019 <span class="keyword">namespace </span>gbmath
<a name="l00020"></a>00020 {
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 
<a name="l00025"></a><a class="code" href="structgbmath_1_1color4f.htm">00025</a>                 <span class="keyword">struct </span><a class="code" href="structgbmath_1_1color4f.htm" title="Standard four-color float .">color4f</a> : <span class="keyword">public</span> <a class="code" href="structgbmath_1_1color4.htm" title="template color4">color4</a>&lt;float&gt; {
<a name="l00026"></a>00026                 <span class="keyword">public</span>:
<a name="l00027"></a>00027                         <span class="comment">//union</span>
<a name="l00028"></a>00028                         <span class="comment">//{</span>
<a name="l00029"></a>00029                                 <span class="comment">// struct</span>
<a name="l00030"></a>00030                                 <span class="comment">//{</span>
<a name="l00031"></a>00031                                 <span class="comment">//      float r, g, b, a;</span>
<a name="l00032"></a>00032                                 <span class="comment">//};</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034                                 <span class="comment">// float floats[4];</span>
<a name="l00035"></a>00035                         <span class="comment">//};</span>
<a name="l00036"></a>00036 
<a name="l00037"></a><a class="code" href="structgbmath_1_1color4f.htm#a2f3058f4665b85aebac8993920797e81">00037</a>                         <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color4f.htm#a2f3058f4665b85aebac8993920797e81">color4f</a>()
<a name="l00038"></a>00038                         {
<a name="l00039"></a>00039                                 <a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a> = <a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a> = <a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a> = <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a> = 0.0f;
<a name="l00040"></a>00040                         }
<a name="l00041"></a>00041 
<a name="l00042"></a><a class="code" href="structgbmath_1_1color4f.htm#ae19edaee3c296336ed0386fb30d67782">00042</a>                         <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color4f.htm#a2f3058f4665b85aebac8993920797e81">color4f</a>(<span class="keyword">const</span> <a class="code" href="structgbmath_1_1color4f.htm" title="Standard four-color float .">color4f</a>&amp; col)
<a name="l00043"></a>00043                         {
<a name="l00044"></a>00044                                 <a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a> = col.<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>;
<a name="l00045"></a>00045                                 <a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a> = col.<a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>;
<a name="l00046"></a>00046                                 <a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a> = col.<a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>;
<a name="l00047"></a>00047                                 <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a> = col.<a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>;
<a name="l00048"></a>00048                         }
<a name="l00049"></a>00049 
<a name="l00050"></a><a class="code" href="structgbmath_1_1color4f.htm#a9bccec9bd9b364a6eafeb9bab282c89a">00050</a>                         <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color4f.htm#a2f3058f4665b85aebac8993920797e81">color4f</a>(<span class="keywordtype">float</span> _r, <span class="keywordtype">float</span> _g, <span class="keywordtype">float</span> _b)
<a name="l00051"></a>00051                         {
<a name="l00052"></a>00052                                 <a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a> = _r;
<a name="l00053"></a>00053                                 <a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a> = _g;
<a name="l00054"></a>00054                                 <a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a> = _b;
<a name="l00055"></a>00055                                 <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a> = 1.0f;
<a name="l00056"></a>00056                         }
<a name="l00057"></a>00057 
<a name="l00058"></a><a class="code" href="structgbmath_1_1color4f.htm#a48bef41e1b46e004c934917e4ce01cc6">00058</a>                         <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color4f.htm#a2f3058f4665b85aebac8993920797e81">color4f</a>(<span class="keywordtype">float</span> _r, <span class="keywordtype">float</span> _g, <span class="keywordtype">float</span> _b, <span class="keywordtype">float</span> _a)
<a name="l00059"></a>00059                         {
<a name="l00060"></a>00060                                 <a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a> = _r;
<a name="l00061"></a>00061                                 <a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a> = _g;
<a name="l00062"></a>00062                                 <a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a> = _b;
<a name="l00063"></a>00063                                 <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a> = _a;
<a name="l00064"></a>00064                         }
<a name="l00065"></a>00065 
<a name="l00066"></a>00066                          <span class="comment">/****************</span>
<a name="l00068"></a>00068 <span class="comment">                        inline color4f( byte_t _r,  byte_t _g,  byte_t _b,  byte_t _a )</span>
<a name="l00069"></a>00069 <span class="comment">                        {</span>
<a name="l00070"></a>00070 <span class="comment">                                r=(float)_r/255.5f;</span>
<a name="l00071"></a>00071 <span class="comment">                                g=(float)_g/255.0f;</span>
<a name="l00072"></a>00072 <span class="comment">                                b=(float)_b/255.0f;</span>
<a name="l00073"></a>00073 <span class="comment">                                a=(float)_a/255.0f;</span>
<a name="l00074"></a>00074 <span class="comment">                        }</span>
<a name="l00075"></a>00075 <span class="comment">                        *********************/</span>
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 
<a name="l00078"></a>00078                         <span class="comment">/**********************</span>
<a name="l00080"></a>00080 <span class="comment">                        inline color4f&amp; set_bytes(uint8_t _r, uint8_t _g, uint8_t _b, uint8_t _a)</span>
<a name="l00081"></a>00081 <span class="comment">                        {</span>
<a name="l00082"></a>00082 <span class="comment">                                r=(float)_r/255.5f;</span>
<a name="l00083"></a>00083 <span class="comment">                                g=(float)_g/255.0f;</span>
<a name="l00084"></a>00084 <span class="comment">                                b=(float)_b/255.0f;</span>
<a name="l00085"></a>00085 <span class="comment">                                a=(float)_a/255.0f;</span>
<a name="l00086"></a>00086 <span class="comment">                                return *this;</span>
<a name="l00087"></a>00087 <span class="comment">                        }</span>
<a name="l00088"></a>00088 <span class="comment">                         ************************/</span>
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 
<a name="l00092"></a>00092                         <span class="keywordtype">void</span> <a class="code" href="structgbmath_1_1color4f.htm#abbd49896711f6867e66f808ae2ef5328" title="ÐÐ¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑÐ° Ð¸Ð· ÑÐµÐ»Ð¾ÑÐ¸ÑÐ»ÐµÐ½Ð¾Ð³Ð¾ 4-x Ð±Ð°Ð¹ÑÐ¾Ð²Ð¾Ð³Ð¾...">operator =  </a>(<span class="keyword">const</span> <a class="code" href="structgbmath_1_1color4__32.htm" title="Standard four-color int.">color4_32</a> val) ;
<a name="l00093"></a>00093 
<a name="l00096"></a><a class="code" href="structgbmath_1_1color4f.htm#a29dd195f65786d806122128425de8cfa">00096</a>                         <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color4f.htm" title="Standard four-color float .">color4f</a>&amp; <a class="code" href="structgbmath_1_1color4f.htm#a29dd195f65786d806122128425de8cfa" title="Ð£ÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ Ð±ÐµÐ»ÑÐ¹ ÑÐ²ÐµÑ.">set_white</a>(<span class="keywordtype">float</span> _a=1.0f) {<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>=<a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>=<a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>=1.0f; <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>=_a;  <span class="keywordflow">return</span> *<span class="keyword">this</span>; }
<a name="l00098"></a><a class="code" href="structgbmath_1_1color4f.htm#a9b432a4da80820da0ce99467d42d4a64">00098</a>                         <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color4f.htm" title="Standard four-color float .">color4f</a>&amp; <a class="code" href="structgbmath_1_1color4f.htm#a9b432a4da80820da0ce99467d42d4a64" title="Ð£ÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ ÑÑÑÐ½ÑÐ¹ ÑÐ²ÐµÑ.">set_black</a>(<span class="keywordtype">float</span> _a=1.0f) {<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>=<a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>=<a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>=0.0f; <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>=_a;  <span class="keywordflow">return</span> *<span class="keyword">this</span>; }
<a name="l00099"></a>00099 
<a name="l00100"></a>00100                         <a class="code" href="structgbmath_1_1color4f.htm#a84973b5498957b8ab224723d95c2c60a">operator color4_32</a>() <span class="keyword">const</span> ;
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 <span class="preprocessor">#pragma message ( &quot;!!TEMP COMMENTED &quot;  __FILE__ )</span>
<a name="l00103"></a>00103 <span class="preprocessor"></span>                        <span class="comment">/******************</span>
<a name="l00104"></a>00104 <span class="comment">                        inline void  operator = (const color_rgba_s&amp; color)</span>
<a name="l00105"></a>00105 <span class="comment">                        {</span>
<a name="l00106"></a>00106 <span class="comment">                        r =  ( (float)color.r ) / 255.0f;</span>
<a name="l00107"></a>00107 <span class="comment">                        g =  ( (float)color.g ) / 255.0f;</span>
<a name="l00108"></a>00108 <span class="comment">                        b =  ( (float)color.b ) / 255.0f;</span>
<a name="l00109"></a>00109 <span class="comment">                        a =  ( (float)color.a ) / 255.0f;</span>
<a name="l00110"></a>00110 <span class="comment">                        }</span>
<a name="l00111"></a>00111 <span class="comment"></span>
<a name="l00112"></a>00112 <span class="comment"></span>
<a name="l00113"></a>00113 <span class="comment">                        inline operator color_rgba_s() const</span>
<a name="l00114"></a>00114 <span class="comment">                        {</span>
<a name="l00115"></a>00115 <span class="comment">                        color_rgba_s res;</span>
<a name="l00116"></a>00116 <span class="comment">                        res.r=(uint8_t)(r * 255.0f);</span>
<a name="l00117"></a>00117 <span class="comment">                        res.g=(uint8_t)(g * 255.0f);</span>
<a name="l00118"></a>00118 <span class="comment">                        res.b=(uint8_t)(b * 255.0f);</span>
<a name="l00119"></a>00119 <span class="comment">                        res.a=(uint8_t)(a * 255.0f);</span>
<a name="l00120"></a>00120 <span class="comment">                        return res;</span>
<a name="l00121"></a>00121 <span class="comment">                        }</span>
<a name="l00122"></a>00122 <span class="comment">                        ***************/</span>
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 
<a name="l00125"></a>00125 <span class="preprocessor">#pragma message ( &quot;!!TEMP COMMENTED &quot;  __FILE__ )</span>
<a name="l00126"></a>00126 <span class="preprocessor"></span>                        <span class="comment">// inline void  operator = (const color_rgb24_s color)</span>
<a name="l00127"></a>00127                         <span class="comment">// {</span>
<a name="l00128"></a>00128                         <span class="comment">//        r=((float)color.r) / 255.0f;</span>
<a name="l00129"></a>00129                         <span class="comment">//     g=((float)color.g) / 255.0f;</span>
<a name="l00130"></a>00130                         <span class="comment">//        b=((float)color.b) / 255.0f;</span>
<a name="l00131"></a>00131                         <span class="comment">// };</span>
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="preprocessor">#pragma  message (  &quot;!!TEMP COMMENTED &quot;  __FILE__    )</span>
<a name="l00134"></a>00134 <span class="preprocessor"></span>                        <span class="comment">/* inline  operator color_rgb24_s() const</span>
<a name="l00135"></a>00135 <span class="comment">                        {</span>
<a name="l00136"></a>00136 <span class="comment">                        color_rgb24_s res;</span>
<a name="l00137"></a>00137 <span class="comment">                        res.r=  (uint8_t)(r * 255.0f);</span>
<a name="l00138"></a>00138 <span class="comment">                        res.g=  (uint8_t)(g * 255.0f);</span>
<a name="l00139"></a>00139 <span class="comment">                        res.b=  (uint8_t)(b * 255.0f);</span>
<a name="l00140"></a>00140 <span class="comment">                        return res;</span>
<a name="l00141"></a>00141 <span class="comment">                        };*/</span>
<a name="l00142"></a>00142 
<a name="l00143"></a>00143                         <span class="comment">// /** \brief ÑÐ»Ð¾Ð¶ÐµÐ½Ð¸Ðµ  */</span>
<a name="l00144"></a>00144                         <span class="comment">// inline color4f&amp; add(const color4f&amp; color)</span>
<a name="l00145"></a>00145                         <span class="comment">// {</span>
<a name="l00146"></a>00146                                 <span class="comment">// r+=color.r;</span>
<a name="l00147"></a>00147                                 <span class="comment">// g+=color.g;</span>
<a name="l00148"></a>00148                                 <span class="comment">// b+=color.b;</span>
<a name="l00149"></a>00149                                 <span class="comment">// a+=color.a;</span>
<a name="l00150"></a>00150                                 <span class="comment">// return *this;</span>
<a name="l00151"></a>00151                         <span class="comment">// };</span>
<a name="l00152"></a>00152 
<a name="l00153"></a>00153                         <span class="comment">// /** \brief ÑÐ»Ð¾Ð¶ÐµÐ½Ð¸Ðµ ÑÐ¾Ð»ÑÐºÐ¾ rgb. Ð°Ð»ÑÑÐ° Ð½Ðµ Ð¸Ð·Ð¼ÐµÐ½ÑÑÐµÑÑ.  */</span>
<a name="l00154"></a>00154                         <span class="comment">// inline color4f&amp; addRGB(const color4f&amp; color)</span>
<a name="l00155"></a>00155                         <span class="comment">// {</span>
<a name="l00156"></a>00156                                 <span class="comment">// r+=color.r;</span>
<a name="l00157"></a>00157                                 <span class="comment">// g+=color.g;</span>
<a name="l00158"></a>00158                                 <span class="comment">// b+=color.b;</span>
<a name="l00159"></a>00159                                 <span class="comment">// return *this;</span>
<a name="l00160"></a>00160                         <span class="comment">// };</span>
<a name="l00161"></a>00161 
<a name="l00162"></a>00162                         <span class="comment">// /** \brief ÐÑÑÐ¸ÑÐ°Ð½Ð¸Ðµ  */</span>
<a name="l00163"></a>00163                         <span class="comment">// inline color4f&amp; sub(const color4f&amp; color)</span>
<a name="l00164"></a>00164                         <span class="comment">// {</span>
<a name="l00165"></a>00165                                 <span class="comment">// r-=color.r;</span>
<a name="l00166"></a>00166                                 <span class="comment">// g-=color.g;</span>
<a name="l00167"></a>00167                                 <span class="comment">// b-=color.b;</span>
<a name="l00168"></a>00168                                 <span class="comment">// a-=color.a;</span>
<a name="l00169"></a>00169                                 <span class="comment">// return *this;</span>
<a name="l00170"></a>00170                         <span class="comment">// };</span>
<a name="l00171"></a>00171 
<a name="l00172"></a>00172                         <span class="comment">// /** \brief ÐÑÑÐ¸ÑÐ°Ð½Ð¸Ðµ ÑÐ¾Ð»ÑÐºÐ¾ rgb. Ð°Ð»ÑÑÐ° Ð½Ðµ Ð¸Ð·Ð¼ÐµÐ½ÑÑÐµÑÑ.   */</span>
<a name="l00173"></a>00173                         <span class="comment">// inline color4f&amp; subRGB(const color4f&amp; color)</span>
<a name="l00174"></a>00174                         <span class="comment">// {</span>
<a name="l00175"></a>00175                                 <span class="comment">// r-=color.r;</span>
<a name="l00176"></a>00176                                 <span class="comment">// g-=color.g;</span>
<a name="l00177"></a>00177                                 <span class="comment">// b-=color.b;</span>
<a name="l00178"></a>00178                                 <span class="comment">// return *this;</span>
<a name="l00179"></a>00179                         <span class="comment">// };</span>
<a name="l00180"></a>00180 
<a name="l00181"></a>00181                         <span class="comment">// /** \brief ÐÐ°ÑÑÑÐ°Ð±Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ðµ</span>
<a name="l00182"></a>00182                         <span class="comment">// inline color4f&amp; scale(float s)</span>
<a name="l00183"></a>00183                         <span class="comment">// {</span>
<a name="l00184"></a>00184                                 <span class="comment">// r*=s;</span>
<a name="l00185"></a>00185                                 <span class="comment">// g*=s;</span>
<a name="l00186"></a>00186                                 <span class="comment">// b*=s;</span>
<a name="l00187"></a>00187                                 <span class="comment">// a*=s;</span>
<a name="l00188"></a>00188                                 <span class="comment">// return *this;</span>
<a name="l00189"></a>00189                         <span class="comment">// };   */</span>
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 
<a name="l00192"></a>00192 
<a name="l00193"></a>00193 
<a name="l00195"></a>00195                         <span class="comment">//inline color4f&amp; setLerp(const color4f&amp; c1, const color4f&amp; c2, float k)</span>
<a name="l00196"></a>00196                         <span class="comment">//{</span>
<a name="l00197"></a>00197                         <span class="comment">//      r  = c1.r + k * (c2.r - c1.r);</span>
<a name="l00198"></a>00198                         <span class="comment">//      g  = c1.g + k * (c2.g - c1.g);</span>
<a name="l00199"></a>00199                         <span class="comment">//      b  = c1.b + k * (c2.b - c1.b);</span>
<a name="l00200"></a>00200                         <span class="comment">//      a  = c1.a + k * (c2.a - c1.a);</span>
<a name="l00201"></a>00201                         <span class="comment">//      return *this;</span>
<a name="l00202"></a>00202                         <span class="comment">//};</span>
<a name="l00203"></a>00203 
<a name="l00204"></a>00204 
<a name="l00205"></a>00205 
<a name="l00207"></a>00207                         <span class="comment">//inline color4f&amp; setLerp(const color4f&amp; color, float k)</span>
<a name="l00208"></a>00208                         <span class="comment">//{</span>
<a name="l00209"></a>00209                         <span class="comment">//      r = color.r + k * ( r - color.r);</span>
<a name="l00210"></a>00210                         <span class="comment">//      g = color.g + k * ( g - color.g);</span>
<a name="l00211"></a>00211                         <span class="comment">//      b = color.b + k * ( b - color.b);</span>
<a name="l00212"></a>00212                         <span class="comment">//      a = color.a + k * ( a - color.a);</span>
<a name="l00213"></a>00213                         <span class="comment">//      return *this;</span>
<a name="l00214"></a>00214                         <span class="comment">//};</span>
<a name="l00215"></a>00215 
<a name="l00216"></a>00216 
<a name="l00218"></a>00218                         <span class="comment">//inline color4f&amp; setAdjustSaturation(const color4f&amp; cSrc, float s)</span>
<a name="l00219"></a>00219                         <span class="comment">//{</span>
<a name="l00220"></a>00220                         <span class="comment">//      const float grey  = cSrc.r * 0.2125f  +  cSrc.g * 0.7154f  +  cSrc.b * 0.0721f;</span>
<a name="l00221"></a>00221                         <span class="comment">//      r  = grey + s * (cSrc.r - grey);</span>
<a name="l00222"></a>00222                         <span class="comment">//      g  = grey + s * (cSrc.g - grey);</span>
<a name="l00223"></a>00223                         <span class="comment">//      b  = grey + s * (cSrc.b - grey);</span>
<a name="l00224"></a>00224                         <span class="comment">//      return *this;</span>
<a name="l00225"></a>00225                         <span class="comment">//};</span>
<a name="l00226"></a>00226 
<a name="l00227"></a>00227 
<a name="l00228"></a>00228                         <span class="comment">// /** \brief Ð¸Ð·Ð¼ÐµÐ½Ð¸ÑÑ Ð½Ð°ÑÑÑÐµÐ½Ð½Ð¾ÑÑÑ */</span>
<a name="l00229"></a>00229                         <span class="comment">// inline color4f&amp; adjustSaturation( float s )</span>
<a name="l00230"></a>00230                         <span class="comment">// {</span>
<a name="l00231"></a>00231                                 <span class="comment">// const float grey  =  r * 0.2125f +  g * 0.7154f +  b * 0.0721f;</span>
<a name="l00232"></a>00232                                 <span class="comment">// r  = grey + s * ( r - grey );</span>
<a name="l00233"></a>00233                                 <span class="comment">// g  = grey + s * ( g - grey );</span>
<a name="l00234"></a>00234                                 <span class="comment">// b  = grey + s * ( b - grey );</span>
<a name="l00235"></a>00235                                 <span class="comment">// return *this;</span>
<a name="l00236"></a>00236                         <span class="comment">// };</span>
<a name="l00237"></a>00237 
<a name="l00238"></a>00238 
<a name="l00239"></a>00239                         <span class="comment">// /** \brief ÐÐ°ÑÑÑÐ°Ð±Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ðµ ÑÐ²ÐµÑÐ°. ÐÐ·Ð¼ÐµÐ½ÐµÐ½Ð¸Ðµ ÑÑÐºÐ¾ÑÑÐ¸. */</span>
<a name="l00240"></a>00240                         <span class="comment">// inline color4f&amp; modulate(const Color3f&amp; color)</span>
<a name="l00241"></a>00241                         <span class="comment">// {</span>
<a name="l00242"></a>00242                         <span class="comment">//   r *= color.r;</span>
<a name="l00243"></a>00243                         <span class="comment">//   g *= color.g;</span>
<a name="l00244"></a>00244                         <span class="comment">//   b *= color.b;</span>
<a name="l00245"></a>00245                         <span class="comment">//return *this;</span>
<a name="l00246"></a>00246                         <span class="comment">// };</span>
<a name="l00247"></a>00247 
<a name="l00248"></a>00248 
<a name="l00250"></a>00250                         <span class="comment">//inline color4f&amp; negative(bool bIncludeAlpha=true)</span>
<a name="l00251"></a>00251                         <span class="comment">//{</span>
<a name="l00252"></a>00252                         <span class="comment">//      r = 1.0f - r;</span>
<a name="l00253"></a>00253                         <span class="comment">//      g = 1.0f - g;</span>
<a name="l00254"></a>00254                         <span class="comment">//      b = 1.0f - b;</span>
<a name="l00255"></a>00255                         <span class="comment">//      if(bIncludeAlpha) a = 1.0f - a;</span>
<a name="l00256"></a>00256                         <span class="comment">//      return *this;</span>
<a name="l00257"></a>00257                         <span class="comment">//}</span>
<a name="l00258"></a>00258 
<a name="l00259"></a>00259                         <span class="comment">//inline color4f getNegatived() const</span>
<a name="l00260"></a>00260                         <span class="comment">//{</span>
<a name="l00261"></a>00261                         <span class="comment">//      color4f res(*this);</span>
<a name="l00262"></a>00262                         <span class="comment">//      res.negative();</span>
<a name="l00263"></a>00263                         <span class="comment">//      return res;</span>
<a name="l00264"></a>00264                         <span class="comment">//}</span>
<a name="l00265"></a>00265 
<a name="l00267"></a>00267                         <span class="comment">//inline color4f&amp; setNegative(const color4f&amp; color)</span>
<a name="l00268"></a>00268                         <span class="comment">//{</span>
<a name="l00269"></a>00269                         <span class="comment">//      r = 1.0f - color.r;</span>
<a name="l00270"></a>00270                         <span class="comment">//      g = 1.0f - color.g;</span>
<a name="l00271"></a>00271                         <span class="comment">//      b = 1.0f - color.b;</span>
<a name="l00272"></a>00272                         <span class="comment">//      a = 1.0f - color.a;</span>
<a name="l00273"></a>00273                         <span class="comment">//      return *this;</span>
<a name="l00274"></a>00274                         <span class="comment">//};</span>
<a name="l00275"></a>00275 
<a name="l00276"></a>00276 
<a name="l00278"></a>00278                         <span class="comment">//inline color4f getNegative() const</span>
<a name="l00279"></a>00279                         <span class="comment">//{</span>
<a name="l00280"></a>00280                         <span class="comment">//      color4f res(this);</span>
<a name="l00281"></a>00281                         <span class="comment">//      res.negative();</span>
<a name="l00282"></a>00282                         <span class="comment">//      return res;</span>
<a name="l00283"></a>00283                         <span class="comment">//};</span>
<a name="l00284"></a>00284 
<a name="l00285"></a>00285                         <span class="comment">// /** \brief Ð¸Ð·Ð¼ÐµÐ½Ð¸ÑÑ ÐºÐ¾Ð½ÑÑÐ°ÑÑ */</span>
<a name="l00286"></a>00286                         <span class="comment">// inline color4f&amp; adjust_contrast(float s)</span>
<a name="l00287"></a>00287                         <span class="comment">// {</span>
<a name="l00288"></a>00288                                 <span class="comment">// r = 0.5f + s * ( r - 0.5f);</span>
<a name="l00289"></a>00289                                 <span class="comment">// g = 0.5f + s * ( g - 0.5f);</span>
<a name="l00290"></a>00290                                 <span class="comment">// b = 0.5f + s * ( b - 0.5f);</span>
<a name="l00291"></a>00291                                 <span class="comment">// return *this;</span>
<a name="l00292"></a>00292                         <span class="comment">// }</span>
<a name="l00293"></a>00293 
<a name="l00294"></a>00294 
<a name="l00295"></a>00295                         <span class="comment">// /** \brief Ð¿Ð¾Ð»ÑÑÐ¸ÑÑ ÑÐ²ÐµÑ Ñ Ð¸Ð·Ð¼ÐµÐ½ÑÐ½Ð½ÑÐ¼ ÐºÐ¾Ð½ÑÑÐ°ÑÑÐ¾Ð¼ */</span>
<a name="l00296"></a>00296                         <span class="comment">// inline color4f adjusted_contrast(float s) const</span>
<a name="l00297"></a>00297                         <span class="comment">// {</span>
<a name="l00298"></a>00298                                 <span class="comment">// color4f res(*this);</span>
<a name="l00299"></a>00299                                 <span class="comment">// res.adjustContrast(s);</span>
<a name="l00300"></a>00300                                 <span class="comment">// return res;</span>
<a name="l00301"></a>00301                         <span class="comment">// }</span>
<a name="l00302"></a>00302 
<a name="l00303"></a>00303 
<a name="l00305"></a>00305                         <span class="comment">//inline color4f saturate() {</span>
<a name="l00306"></a>00306                         <span class="comment">//      if(r&gt;1.0f) r=1.0f;   if(r&lt;0.0f) r=0.0f;</span>
<a name="l00307"></a>00307                         <span class="comment">//      if(g&gt;1.0f) g=1.0f;   if(g&lt;0.0f) g=0.0f;</span>
<a name="l00308"></a>00308                         <span class="comment">//      if(b&gt;1.0f) b=1.0f;   if(b&lt;0.0f) b=0.0f;</span>
<a name="l00309"></a>00309                         <span class="comment">//      if(a&gt;1.0f) a=1.0f;   if(a&lt;0.0f) a=0.0f;</span>
<a name="l00310"></a>00310                         <span class="comment">//      return *this;</span>
<a name="l00311"></a>00311                         <span class="comment">//};</span>
<a name="l00312"></a>00312 
<a name="l00314"></a>00314                         <span class="comment">//inline color4f getSaturated() const</span>
<a name="l00315"></a>00315                         <span class="comment">//{</span>
<a name="l00316"></a>00316                         <span class="comment">//      color4f res(*this);</span>
<a name="l00317"></a>00317                         <span class="comment">//      res.saturate();</span>
<a name="l00318"></a>00318                         <span class="comment">//      return res;</span>
<a name="l00319"></a>00319                         <span class="comment">//};</span>
<a name="l00320"></a>00320 
<a name="l00322"></a>00322                         <span class="comment">//inline color4f&amp; setAverage(const color4f&amp; col)</span>
<a name="l00323"></a>00323                         <span class="comment">//{</span>
<a name="l00324"></a>00324                         <span class="comment">//      r = (r+col.r) / 2.0f;</span>
<a name="l00325"></a>00325                         <span class="comment">//      g = (g+col.g) / 2.0f;</span>
<a name="l00326"></a>00326                         <span class="comment">//      b = (b+col.b) / 2.0f;</span>
<a name="l00327"></a>00327                         <span class="comment">//      a = (a+col.a) / 2.0f;</span>
<a name="l00328"></a>00328                         <span class="comment">//      return *this;</span>
<a name="l00329"></a>00329                         <span class="comment">//};</span>
<a name="l00330"></a>00330 
<a name="l00332"></a>00332                         <span class="comment">//inline color4f&amp; setAverage( const color4f&amp; c1 , const color4f&amp; c2 )</span>
<a name="l00333"></a>00333                         <span class="comment">//{</span>
<a name="l00334"></a>00334                         <span class="comment">//      r = (c2.r+c1.r) / 2.0f;</span>
<a name="l00335"></a>00335                         <span class="comment">//      g = (c2.g+c1.g) / 2.0f;</span>
<a name="l00336"></a>00336                         <span class="comment">//      b = (c2.b+c1.b) / 2.0f;</span>
<a name="l00337"></a>00337                         <span class="comment">//      a = (c2.a+c1.a) / 2.0f;</span>
<a name="l00338"></a>00338                         <span class="comment">//      return *this;</span>
<a name="l00339"></a>00339                         <span class="comment">//};</span>
<a name="l00340"></a>00340 
<a name="l00342"></a>00342                         <span class="comment">//inline color4f getAveraged(const color4f&amp; col) const</span>
<a name="l00343"></a>00343                         <span class="comment">//{</span>
<a name="l00344"></a>00344                         <span class="comment">//      color4f res;</span>
<a name="l00345"></a>00345                         <span class="comment">//      res.setAverage(*this , col);</span>
<a name="l00346"></a>00346                         <span class="comment">//      return res;</span>
<a name="l00347"></a>00347                         <span class="comment">//};</span>
<a name="l00348"></a>00348 
<a name="l00349"></a>00349                         <span class="comment">//inline  operator float*()                { return &amp;r; };</span>
<a name="l00350"></a>00350                         <span class="comment">//inline  operator const float*() const    { return &amp;r; };</span>
<a name="l00351"></a>00351 
<a name="l00352"></a>00352                         <span class="comment">// inline const float* getFloats() const    { return &amp;r; };</span>
<a name="l00353"></a>00353                         <span class="comment">// inline int size()                        { return sizeof(float) * 4; };</span>
<a name="l00354"></a>00354 
<a name="l00355"></a>00355                         <span class="comment">// inline void operator = (const color4f&amp; color)</span>
<a name="l00356"></a>00356                         <span class="comment">// {</span>
<a name="l00357"></a>00357                         <span class="comment">//    r = color.r;</span>
<a name="l00358"></a>00358                         <span class="comment">//       g = color.g;</span>
<a name="l00359"></a>00359                         <span class="comment">//       b = color.b;</span>
<a name="l00360"></a>00360                         <span class="comment">//       a = color.a;</span>
<a name="l00361"></a>00361                         <span class="comment">//  }</span>
<a name="l00362"></a>00362 
<a name="l00363"></a>00363 
<a name="l00364"></a>00364 
<a name="l00365"></a>00365                         <span class="comment">// inline void operator = (const color4f_s&amp; color)</span>
<a name="l00366"></a>00366                         <span class="comment">// {</span>
<a name="l00367"></a>00367                         <span class="comment">//   r = color.r;</span>
<a name="l00368"></a>00368                         <span class="comment">//      g = color.g;</span>
<a name="l00369"></a>00369                         <span class="comment">//      b = color.b;</span>
<a name="l00370"></a>00370                         <span class="comment">//      a = color.a;</span>
<a name="l00371"></a>00371                         <span class="comment">// }</span>
<a name="l00372"></a>00372 
<a name="l00373"></a>00373                         <span class="comment">//---------- operators  --------------------------</span>
<a name="l00374"></a>00374                         <span class="comment">//</span>
<a name="l00375"></a>00375                         <span class="comment">//</span>
<a name="l00376"></a>00376 <span class="comment">/*</span>
<a name="l00377"></a>00377 <span class="comment"></span>
<a name="l00378"></a>00378 <span class="comment">                        inline bool operator == (const color4f&amp; c) const { return (r==c.r) &amp;&amp; (g==c.g) &amp;&amp; (b==c.b) &amp;&amp; (a==c.a);  };</span>
<a name="l00379"></a>00379 <span class="comment">                        inline bool operator != (const color4f&amp; c) const { return (r!=c.r) &amp;&amp; (g!=c.g) &amp;&amp; (b!=c.b) &amp;&amp; (a!=c.a);  };</span>
<a name="l00380"></a>00380 <span class="comment"></span>
<a name="l00381"></a>00381 <span class="comment">                        inline color4f&amp; operator *= (const float s)    { r*=s; b*=s; g*=s; a*=s; return *this; };</span>
<a name="l00382"></a>00382 <span class="comment">                        inline color4f&amp; operator *= (const color4f&amp; c) { r*=c.r; b*=c.b; g*=c.g; a*=c.a; return *this; };</span>
<a name="l00383"></a>00383 <span class="comment"></span>
<a name="l00384"></a>00384 <span class="comment">                        inline color4f&amp; operator /= (const float s)    { r/=s; b/=s; g/=s; a/=s; return *this; };</span>
<a name="l00385"></a>00385 <span class="comment">                        inline color4f&amp; operator /= (const color4f&amp; c) { r/=c.r; b/=c.b; g/=c.g; a/=c.a; return *this; };</span>
<a name="l00386"></a>00386 <span class="comment"></span>
<a name="l00387"></a>00387 <span class="comment">                        inline color4f&amp; operator += (const float s)    { r+=s; b+=s; g+=s; a+=s; return *this; };</span>
<a name="l00388"></a>00388 <span class="comment">                        inline color4f&amp; operator += (const color4f&amp; c) { r+=c.r; b+=c.b; g+=c.g; a+=c.a; return *this; };</span>
<a name="l00389"></a>00389 <span class="comment"></span>
<a name="l00390"></a>00390 <span class="comment">                        inline color4f&amp; operator -= (const float s)    { r-=s; b-=s; g-=s; a-=s; return *this; };</span>
<a name="l00391"></a>00391 <span class="comment">                        inline color4f&amp; operator -= (const color4f&amp; c) { r-=c.r; b-=c.b; g-=c.g; a-=c.a; return *this; };</span>
<a name="l00392"></a>00392 <span class="comment"></span>
<a name="l00393"></a>00393 <span class="comment">                        inline color4f  operator + (const color4f&amp; color) const</span>
<a name="l00394"></a>00394 <span class="comment">                        {</span>
<a name="l00395"></a>00395 <span class="comment">                                color4f res;</span>
<a name="l00396"></a>00396 <span class="comment">                                res.r=r+color.r;</span>
<a name="l00397"></a>00397 <span class="comment">                                res.g=g+color.g;</span>
<a name="l00398"></a>00398 <span class="comment">                                res.b=b+color.b;</span>
<a name="l00399"></a>00399 <span class="comment">                                res.a=a+color.a;</span>
<a name="l00400"></a>00400 <span class="comment">                                return res;</span>
<a name="l00401"></a>00401 <span class="comment">                        };</span>
<a name="l00402"></a>00402 <span class="comment"></span>
<a name="l00403"></a>00403 <span class="comment">                        inline color4f  operator + (const float f) const</span>
<a name="l00404"></a>00404 <span class="comment">                        {</span>
<a name="l00405"></a>00405 <span class="comment">                                color4f res;</span>
<a name="l00406"></a>00406 <span class="comment">                                res.r=r+f;</span>
<a name="l00407"></a>00407 <span class="comment">                                res.g=g+f;</span>
<a name="l00408"></a>00408 <span class="comment">                                res.b=b+f;</span>
<a name="l00409"></a>00409 <span class="comment">                                res.a=a+f;</span>
<a name="l00410"></a>00410 <span class="comment">                                return res;</span>
<a name="l00411"></a>00411 <span class="comment">                        };</span>
<a name="l00412"></a>00412 <span class="comment"></span>
<a name="l00413"></a>00413 <span class="comment"></span>
<a name="l00414"></a>00414 <span class="comment">                        inline color4f   operator - (const color4f&amp; color) const</span>
<a name="l00415"></a>00415 <span class="comment">                        {</span>
<a name="l00416"></a>00416 <span class="comment">                                color4f res;</span>
<a name="l00417"></a>00417 <span class="comment">                                res.r=r-color.r;</span>
<a name="l00418"></a>00418 <span class="comment">                                res.g=g-color.g;</span>
<a name="l00419"></a>00419 <span class="comment">                                res.b=b-color.b;</span>
<a name="l00420"></a>00420 <span class="comment">                                res.a=a-color.a;</span>
<a name="l00421"></a>00421 <span class="comment">                                return res;</span>
<a name="l00422"></a>00422 <span class="comment">                        };</span>
<a name="l00423"></a>00423 <span class="comment"></span>
<a name="l00424"></a>00424 <span class="comment">                        inline color4f   operator - (const float f) const</span>
<a name="l00425"></a>00425 <span class="comment">                        {</span>
<a name="l00426"></a>00426 <span class="comment">                                color4f res;</span>
<a name="l00427"></a>00427 <span class="comment">                                res.r=r-f;</span>
<a name="l00428"></a>00428 <span class="comment">                                res.g=g-f;</span>
<a name="l00429"></a>00429 <span class="comment">                                res.b=b-f;</span>
<a name="l00430"></a>00430 <span class="comment">                                res.a=a-f;</span>
<a name="l00431"></a>00431 <span class="comment">                                return res;</span>
<a name="l00432"></a>00432 <span class="comment">                        };</span>
<a name="l00433"></a>00433 <span class="comment"></span>
<a name="l00434"></a>00434 <span class="comment"></span>
<a name="l00435"></a>00435 <span class="comment">                        color4f   operator / (const color4f&amp; color) const</span>
<a name="l00436"></a>00436 <span class="comment">                        {</span>
<a name="l00437"></a>00437 <span class="comment">                                color4f res;</span>
<a name="l00438"></a>00438 <span class="comment">                                res.r = r / color.r;</span>
<a name="l00439"></a>00439 <span class="comment">                                res.g = g / color.g;</span>
<a name="l00440"></a>00440 <span class="comment">                                res.b = b / color.b;</span>
<a name="l00441"></a>00441 <span class="comment">                                res.a = a / color.a;</span>
<a name="l00442"></a>00442 <span class="comment">                                return res;</span>
<a name="l00443"></a>00443 <span class="comment">                        };</span>
<a name="l00444"></a>00444 <span class="comment"></span>
<a name="l00445"></a>00445 <span class="comment">                        color4f   operator / (const float f) const</span>
<a name="l00446"></a>00446 <span class="comment">                        {</span>
<a name="l00447"></a>00447 <span class="comment">                                color4f res;</span>
<a name="l00448"></a>00448 <span class="comment">                                res.r = r / f;</span>
<a name="l00449"></a>00449 <span class="comment">                                res.g = g / f;</span>
<a name="l00450"></a>00450 <span class="comment">                                res.b = b / f;</span>
<a name="l00451"></a>00451 <span class="comment">                                res.a = a / f;</span>
<a name="l00452"></a>00452 <span class="comment">                                return res;</span>
<a name="l00453"></a>00453 <span class="comment">                        };</span>
<a name="l00454"></a>00454 <span class="comment"></span>
<a name="l00455"></a>00455 <span class="comment"></span>
<a name="l00456"></a>00456 <span class="comment">                        color4f   operator * (const color4f&amp; color) const</span>
<a name="l00457"></a>00457 <span class="comment">                        {</span>
<a name="l00458"></a>00458 <span class="comment">                                color4f res;</span>
<a name="l00459"></a>00459 <span class="comment">                                res.r = r*color.r;</span>
<a name="l00460"></a>00460 <span class="comment">                                res.g = g*color.g;</span>
<a name="l00461"></a>00461 <span class="comment">                                res.b = b*color.b;</span>
<a name="l00462"></a>00462 <span class="comment">                                res.a = a*color.a;</span>
<a name="l00463"></a>00463 <span class="comment">                                return res;</span>
<a name="l00464"></a>00464 <span class="comment">                        };</span>
<a name="l00465"></a>00465 <span class="comment"></span>
<a name="l00466"></a>00466 <span class="comment">                        color4f   operator * (const float f) const</span>
<a name="l00467"></a>00467 <span class="comment">                        {</span>
<a name="l00468"></a>00468 <span class="comment">                                color4f res;</span>
<a name="l00469"></a>00469 <span class="comment">                                res.r = r*f;</span>
<a name="l00470"></a>00470 <span class="comment">                                res.g = g*f;</span>
<a name="l00471"></a>00471 <span class="comment">                                res.b = b*f;</span>
<a name="l00472"></a>00472 <span class="comment">                                res.a = a*f;</span>
<a name="l00473"></a>00473 <span class="comment">                                return res;</span>
<a name="l00474"></a>00474 <span class="comment">                        };</span>
<a name="l00475"></a>00475 <span class="comment">*/</span>
<a name="l00476"></a>00476 
<a name="l00477"></a>00477                         <span class="comment">//</span>
<a name="l00478"></a>00478                         <span class="comment">//</span>
<a name="l00479"></a>00479                         <span class="comment">// --------- end operators ----------------</span>
<a name="l00480"></a>00480 
<a name="l00481"></a>00481 
<a name="l00482"></a>00482 
<a name="l00483"></a>00483 
<a name="l00484"></a>00484 <span class="comment">// #pragma warning(push)</span>
<a name="l00485"></a>00485 <span class="comment">// #pragma warning (disable : 4996)</span>
<a name="l00486"></a>00486 
<a name="l00487"></a>00487 
<a name="l00488"></a>00488                         <span class="comment">// /** \brief ÐÐ¾Ð½Ð²ÐµÑÑÐ°ÑÐ¸Ñ Ð² ÑÑÑÐ¾ÐºÑ.  Ð Ð°Ð·Ð´ÐµÐ»Ð¸ÑÐµÐ»Ñ:  Ð¿ÑÐ¾Ð±ÐµÐ» */</span>
<a name="l00489"></a>00489                         <span class="comment">// const char* tostr() const {</span>
<a name="l00490"></a>00490                                 <span class="comment">// static char ss[32];</span>
<a name="l00491"></a>00491                                 <span class="comment">// ss[0] = 0;</span>
<a name="l00492"></a>00492                                 <span class="comment">// sprintf(ss, &quot;%f  %f  %f  %f&quot;, r, g, b, a );</span>
<a name="l00493"></a>00493                                 <span class="comment">// return ss;</span>
<a name="l00494"></a>00494                         <span class="comment">// };</span>
<a name="l00495"></a>00495 
<a name="l00496"></a>00496                         <span class="comment">// /** \brief   Ð§ÑÐµÐ½Ð¸Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ð¹ Ð¸Ð· ÑÑÑÐ¾ÐºÐ¸ ÑÐ°Ð·Ð´. Ð¿ÑÐ¾Ð±ÐµÐ»Ð°Ð¼Ð¸  */</span>
<a name="l00497"></a>00497                         <span class="comment">// bool fromstr(const char*  s) {</span>
<a name="l00498"></a>00498                                 <span class="comment">// const int SCRES = sscanf(s, &quot;%f  %f  %f  %f&quot;, &amp;r, &amp;g, &amp;b, &amp;a );</span>
<a name="l00499"></a>00499                                 <span class="comment">// if( SCRES != 4  ) return false;</span>
<a name="l00500"></a>00500                                 <span class="comment">// return true;</span>
<a name="l00501"></a>00501                         <span class="comment">// };</span>
<a name="l00502"></a>00502 
<a name="l00503"></a>00503 
<a name="l00504"></a>00504 <span class="comment">// #pragma warning(pop)</span>
<a name="l00505"></a>00505 
<a name="l00506"></a>00506 
<a name="l00507"></a>00507 
<a name="l00508"></a>00508 <span class="preprocessor">#ifdef _D3D9_H_</span>
<a name="l00509"></a>00509 <span class="preprocessor"></span>                        <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="structgbmath_1_1color4f.htm#abbd49896711f6867e66f808ae2ef5328" title="ÐÐ¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑÐ° Ð¸Ð· ÑÐµÐ»Ð¾ÑÐ¸ÑÐ»ÐµÐ½Ð¾Ð³Ð¾ 4-x Ð±Ð°Ð¹ÑÐ¾Ð²Ð¾Ð³Ð¾...">operator = </a>(<span class="keyword">const</span> D3DCOLORVALUE&amp; val) { <a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>=val.r; <a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>=val.g; <a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>=val.b; <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>=val.a; }
<a name="l00510"></a>00510                         <span class="keyword">inline</span> operator const D3DCOLORVALUE*()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (D3DCOLORVALUE*)&amp;<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>; }
<a name="l00511"></a>00511                         <span class="keyword">inline</span> operator       D3DCOLORVALUE ()<span class="keyword"> const </span>{ D3DCOLORVALUE res;  res.a=<a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>; res.r=<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>; res.g=<a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>; res.b=<a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>; <span class="keywordflow">return</span> res; }
<a name="l00512"></a>00512 <span class="preprocessor">#endif   // GB_D3D9</span>
<a name="l00513"></a>00513 <span class="preprocessor"></span>
<a name="l00514"></a>00514 <span class="preprocessor">#ifdef __D3DX9MATH_H__</span>
<a name="l00515"></a>00515 <span class="preprocessor"></span>                        <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="structgbmath_1_1color4f.htm#abbd49896711f6867e66f808ae2ef5328" title="ÐÐ¾ÑÑÑÐ¾ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑÐ° Ð¸Ð· ÑÐµÐ»Ð¾ÑÐ¸ÑÐ»ÐµÐ½Ð¾Ð³Ð¾ 4-x Ð±Ð°Ð¹ÑÐ¾Ð²Ð¾Ð³Ð¾...">operator = </a>(<span class="keyword">const</span> D3DXCOLOR&amp; c) {<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>=c.r; <a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>=c.g; <a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>=c.b; <a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>=c.a; }
<a name="l00516"></a>00516                         <span class="keyword">inline</span> operator const D3DXCOLOR*()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (D3DXCOLOR*)&amp;<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>; }
<a name="l00517"></a>00517                         <span class="keyword">inline</span> operator       D3DXCOLOR ()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> D3DXCOLOR(<a class="code" href="structgbmath_1_1color4.htm#a553165aea7cab419c479050c876daf1c">r</a>,<a class="code" href="structgbmath_1_1color4.htm#a303c6ec9b5ae888f39650800ce79db76">g</a>,<a class="code" href="structgbmath_1_1color4.htm#adb0f432f30d1b19215fc57c7d41608e3">b</a>,<a class="code" href="structgbmath_1_1color4.htm#a7a23c5a5b4fac4d035a129c48829e3f4">a</a>); }
<a name="l00518"></a>00518 <span class="preprocessor">#endif</span>
<a name="l00519"></a>00519 <span class="preprocessor"></span>
<a name="l00520"></a>00520 
<a name="l00521"></a>00521                 };
<a name="l00522"></a>00522                 <span class="comment">// end class color4f</span>
<a name="l00523"></a>00523 
<a name="l00524"></a>00524 
<a name="l00525"></a>00525 
<a name="l00526"></a>00526  
<a name="l00527"></a>00527 }
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sat Aug 27 20:46:51 2011 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
