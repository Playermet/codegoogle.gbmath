<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: color_functions.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>color_functions.h</h1><a href="color__functions_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 ﻿
<a name="l00005"></a>00005 <span class="preprocessor">#pragma once</span>
<a name="l00006"></a>00006 <span class="preprocessor"></span>
<a name="l00007"></a>00007 <span class="preprocessor">#ifndef __GBMATH_H__</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span><span class="preprocessor">#error  DO NOT INCLUDE THIS FILE. USE:   #include &lt;gbmath/_gbmath.h&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span>
<a name="l00011"></a>00011  
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="comment">//#include &quot;color.h&quot;</span>
<a name="l00014"></a>00014 <span class="comment">//#include &quot;color_integer.h&quot;</span>
<a name="l00015"></a>00015 <span class="comment">//#include &quot;color_def.h&quot;</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="comment">//#include &lt;float.h&gt;</span>
<a name="l00019"></a>00019 <span class="comment">//#include &lt;math.h&gt;</span>
<a name="l00020"></a>00020 <span class="comment">//#include &lt;string&gt;</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">//#include &lt;assert.h&gt;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">//#include &quot;color.h&quot;</span>
<a name="l00025"></a>00025 <span class="comment">//#include &quot;color3.h&quot;</span>
<a name="l00026"></a>00026 <span class="comment">//#include &quot;color4.h&quot;</span>
<a name="l00027"></a>00027 <span class="comment">//#include &quot;color_def.h&quot;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029  
<a name="l00030"></a>00030 <span class="keyword">namespace </span>gbmath
<a name="l00031"></a>00031 {
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="comment">//</span>
<a name="l00035"></a>00035 <span class="comment">//  color macros</span>
<a name="l00036"></a>00036 <span class="comment">//</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 
<a name="l00040"></a><a class="code" href="namespacegbmath.htm#adde6fcae4674b62b13d98835ab644ff5">00040</a> <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacegbmath.htm#adde6fcae4674b62b13d98835ab644ff5" title="Построение цвета по байтам. Альфа первая.">make_color_argb</a>( <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> a, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> r, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> g, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> b )
<a name="l00041"></a>00041 {
<a name="l00042"></a>00042         <span class="comment">//#define MAKECOLOR_ARGB(a,r,g,b)</span>
<a name="l00043"></a>00043         <span class="comment">//(( uicolor32_t)((((a)&amp;0xff)&lt;&lt;24)|(((r)&amp;0xff)&lt;&lt;16)|(((g)&amp;0xff)&lt;&lt;8)|((b)&amp;0xff)))</span>
<a name="l00044"></a>00044         assert( <span class="keyword">sizeof</span>(<span class="keywordtype">int</span>) == 4 &amp;&amp; <span class="stringliteral">&quot;check platform&quot;</span> );
<a name="l00045"></a>00045         <span class="keywordtype">int</span> res =  ( (a&amp;0xff)&lt;&lt;24 ) | ( (r&amp;0xff)&lt;&lt;16 ) | ( (g&amp;0xff)&lt;&lt;8 ) |  (b&amp;0xff);
<a name="l00046"></a>00046         <span class="keywordflow">return</span> res;
<a name="l00047"></a>00047 }
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 
<a name="l00051"></a><a class="code" href="namespacegbmath.htm#a1e70d560d8a1eb297da7c8b457e4ecf8">00051</a> <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacegbmath.htm#a1e70d560d8a1eb297da7c8b457e4ecf8" title="Построение цвета по байтам. Альфа последняя...">make_color_rgba</a>( <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> r , <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> g , <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> b , <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> a )
<a name="l00052"></a>00052 {
<a name="l00053"></a>00053         <span class="comment">//#define MAKECOLOR_RGBA(r,g,b,a)</span>
<a name="l00054"></a>00054         <span class="comment">// MAKECOLOR_ARGB(a,r,g,b)</span>
<a name="l00055"></a>00055         <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#adde6fcae4674b62b13d98835ab644ff5" title="Построение цвета по байтам. Альфа первая.">make_color_argb</a>(a,r,g,b);
<a name="l00056"></a>00056 }
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">/*****************************</span>
<a name="l00060"></a>00060 <span class="comment">/ **  \brief   Построение цвета color_rgb24_s  по трём элементам  //  * /</span>
<a name="l00061"></a>00061 <span class="comment">inline color_rgb24_s  make_rgb(byte_t r, byte_t g, byte_t b)</span>
<a name="l00062"></a>00062 <span class="comment">{</span>
<a name="l00063"></a>00063 <span class="comment">//#define MAKECOLOR_RGB(r,g,b)</span>
<a name="l00064"></a>00064 <span class="comment">// (( color_rgb24_s)( (((r)&amp;0xff)&lt;&lt;16)|(((g)&amp;0xff)&lt;&lt;8)|((b)&amp;0xff)) )</span>
<a name="l00065"></a>00065 <span class="comment">   color_rgb24_s res = ( (r&amp;0xff)&lt;&lt;16 ) | ( (g&amp;0xff)&lt;&lt;8 ) | ( b&amp;0xff ) ;</span>
<a name="l00066"></a>00066 <span class="comment">   return res;</span>
<a name="l00067"></a>00067 <span class="comment">}</span>
<a name="l00068"></a>00068 <span class="comment"> *****************************/</span>
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 
<a name="l00072"></a><a class="code" href="namespacegbmath.htm#a090e1dac80cfc9de247cb2232a8d53ee">00072</a> <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacegbmath.htm#a090e1dac80cfc9de247cb2232a8d53ee" title="Построение целочисленого цвета по компонентам...">make_rgba</a>(<span class="keywordtype">float</span> r, <span class="keywordtype">float</span> g, <span class="keywordtype">float</span> b, <span class="keywordtype">float</span> a)
<a name="l00073"></a>00073 {
<a name="l00074"></a>00074         assert(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) == 4);
<a name="l00075"></a>00075         <span class="comment">//#define MAKECOLOR_FLOAT_RGBA(r,g,b,a) \</span>
<a name="l00076"></a>00076 <span class="comment">        // MAKECOLOR_RGBA((uint32_t)((r)*255.f),(uint32_t)((g)*255.f),(uint32_t)((b)*255.f),(uint32_t)((a)*255.f))</span>
<a name="l00077"></a>00077         <span class="keywordflow">return</span> <a class="code" href="namespacegbmath.htm#a1e70d560d8a1eb297da7c8b457e4ecf8" title="Построение цвета по байтам. Альфа последняя...">make_color_rgba</a>(
<a name="l00078"></a>00078                 (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(r*255.f),(<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>) (g*255.f),   (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(b*255.f),      (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(a*255.f)
<a name="l00079"></a>00079         );
<a name="l00080"></a>00080 }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 <span class="preprocessor">#ifdef _D3D9_H_</span>
<a name="l00086"></a>00086 <span class="preprocessor"></span>
<a name="l00087"></a>00087 <span class="comment">//----------------------------------------------</span>
<a name="l00088"></a>00088 <span class="comment">//       D3DCOLOR   the order of bytes:  a r g b</span>
<a name="l00089"></a>00089 <span class="comment">//----------------------------------------------</span>
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 
<a name="l00093"></a>00093 <span class="keyword">inline</span> D3DCOLORVALUE make_d3dcolorvalue( D3DCOLOR col )
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095         D3DCOLORVALUE res;
<a name="l00096"></a>00096 
<a name="l00097"></a>00097         <span class="keyword">const</span> <span class="keywordtype">float</span> k = 1.0f / 255.0f;
<a name="l00098"></a>00098 
<a name="l00099"></a>00099         res.r = k * (float)((col &lt;&lt; 8 ) &gt;&gt; 24);
<a name="l00100"></a>00100         res.g = k * (float)((col &lt;&lt; 16) &gt;&gt; 24);
<a name="l00101"></a>00101         res.b = k * (float)((col &lt;&lt; 24) &gt;&gt; 24);
<a name="l00102"></a>00102         res.a = k * (float)( col &gt;&gt; 24);
<a name="l00103"></a>00103 
<a name="l00104"></a>00104         <span class="keywordflow">return</span> res;
<a name="l00105"></a>00105 }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="preprocessor">#endif    // _D3D9_H_</span>
<a name="l00108"></a>00108 <span class="preprocessor"></span>
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 
<a name="l00112"></a><a class="code" href="namespacegbmath.htm#a86348fe401e57ebc7d1cb88ae56d87d2">00112</a> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacegbmath.htm#a86348fe401e57ebc7d1cb88ae56d87d2" title="exchange of components R и G .">colorSwapRG</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; color)
<a name="l00113"></a>00113 {
<a name="l00114"></a>00114         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> n_g = (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color &gt;&gt; 16);
<a name="l00115"></a>00115         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> n_r = (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color &gt;&gt; 8);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         color = (color | 0x00FFFF00) ^ 0x00FFFF00 ;
<a name="l00118"></a>00118         color |= ((<span class="keywordtype">unsigned</span> int)n_g &lt;&lt; 8);
<a name="l00119"></a>00119         color |= ((<span class="keywordtype">unsigned</span> int)n_r &lt;&lt; 16);
<a name="l00120"></a>00120 }
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 
<a name="l00125"></a><a class="code" href="namespacegbmath.htm#a051fc4a9302ce044eaed38596a16ed0c">00125</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#a051fc4a9302ce044eaed38596a16ed0c" title="exchange of components R и B .">colorSwapRB</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; color)
<a name="l00126"></a>00126 {
<a name="l00127"></a>00127         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> n_B = (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color &gt;&gt; 16);
<a name="l00128"></a>00128         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> n_R = (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color );
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         color  =  (color | 0x00FF00FF) ^ 0x00FF00FF ;
<a name="l00131"></a>00131         color |= (<span class="keywordtype">unsigned</span>  int)n_B;
<a name="l00132"></a>00132         color |= ((<span class="keywordtype">unsigned</span> int)n_R &lt;&lt; 16);
<a name="l00133"></a>00133 }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 
<a name="l00136"></a>00136 
<a name="l00138"></a><a class="code" href="namespacegbmath.htm#a14a6ce40d9de3b9cc4168769a4007667">00138</a> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacegbmath.htm#a14a6ce40d9de3b9cc4168769a4007667" title="exchange of componentsG и B .">colorSwapGB</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp;  color)
<a name="l00139"></a>00139 {
<a name="l00140"></a>00140         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> _g  = (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>) ( color &gt;&gt; 8 );
<a name="l00141"></a>00141         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> _b  = (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>) ( color  );
<a name="l00142"></a>00142 
<a name="l00143"></a>00143         color = (color | 0x0000FFFF) ^ 0x0000FFFF ;
<a name="l00144"></a>00144         color |= ( (<span class="keywordtype">unsigned</span> int)_g &lt;&lt; 0);
<a name="l00145"></a>00145         color |= ( (<span class="keywordtype">unsigned</span> int)_b &lt;&lt; 8);
<a name="l00146"></a>00146 }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 
<a name="l00151"></a><a class="code" href="namespacegbmath.htm#abadfca65c741ff7cbfec5a354f13c9f3">00151</a> <span class="keyword">inline</span>  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>   <a class="code" href="namespacegbmath.htm#abadfca65c741ff7cbfec5a354f13c9f3" title="Converting 4-byte RGBA color order in the order ARGB.">rgba_to_argb</a>(<span class="keywordtype">unsigned</span>  <span class="keywordtype">int</span> val )
<a name="l00152"></a>00152 {
<a name="l00153"></a>00153         assert( <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) == 4 );
<a name="l00154"></a>00154         <span class="keywordflow">return</span> ( (val&gt;&gt;8) | (val&lt;&lt;24)  );
<a name="l00155"></a>00155 }
<a name="l00156"></a>00156 
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 
<a name="l00160"></a><a class="code" href="namespacegbmath.htm#abbb31a98774b47cf762d3080d31ebacf">00160</a> <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>   <a class="code" href="namespacegbmath.htm#abbb31a98774b47cf762d3080d31ebacf" title="Converting 4-byte order ARGB color in order RGBA.">argb_to_rgba</a>(<span class="keywordtype">unsigned</span>  <span class="keywordtype">int</span> val )
<a name="l00161"></a>00161 {
<a name="l00162"></a>00162         assert( <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) == 4 );
<a name="l00163"></a>00163         <span class="keywordflow">return</span> ( (val&lt;&lt;8) | (val&gt;&gt;24) );
<a name="l00164"></a>00164 }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 <span class="comment">//------------------------------------------------</span>
<a name="l00170"></a>00170 <span class="comment">// Isolation of the color components</span>
<a name="l00171"></a>00171 <span class="comment">//------------------------------------------------</span>
<a name="l00172"></a>00172 
<a name="l00173"></a>00173 
<a name="l00174"></a><a class="code" href="namespacegbmath.htm#aab8f1f7e8def74f47797bb70d8dffdb1">00174</a> <span class="keyword">inline</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>   <a class="code" href="namespacegbmath.htm#aab8f1f7e8def74f47797bb70d8dffdb1">colorExtractA</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00175"></a>00175 {
<a name="l00176"></a>00176         <span class="keywordflow">return</span> (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color &gt;&gt; 24);
<a name="l00177"></a>00177 }
<a name="l00178"></a>00178 
<a name="l00179"></a><a class="code" href="namespacegbmath.htm#ade6c81511566ea396750bf66c30e5798">00179</a> <span class="keyword">inline</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>   <a class="code" href="namespacegbmath.htm#ade6c81511566ea396750bf66c30e5798">colorExtractR</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00180"></a>00180 {
<a name="l00181"></a>00181         <span class="keywordflow">return</span> (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color &gt;&gt; 16);
<a name="l00182"></a>00182 }
<a name="l00183"></a>00183 
<a name="l00184"></a><a class="code" href="namespacegbmath.htm#a383d9596a5a819945f767301380f32c4">00184</a> <span class="keyword">inline</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>   <a class="code" href="namespacegbmath.htm#a383d9596a5a819945f767301380f32c4">colorExtractG</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00185"></a>00185 {
<a name="l00186"></a>00186         <span class="keywordflow">return</span> (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)(color &gt;&gt; 8);
<a name="l00187"></a>00187 }
<a name="l00188"></a>00188 
<a name="l00189"></a><a class="code" href="namespacegbmath.htm#a5955f8a061aaa544c84d602d78f8e4ca">00189</a> <span class="keyword">inline</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>   <a class="code" href="namespacegbmath.htm#a5955f8a061aaa544c84d602d78f8e4ca">colorExtractB</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00190"></a>00190 {
<a name="l00191"></a>00191         <span class="keywordflow">return</span> (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)color;
<a name="l00192"></a>00192 }
<a name="l00193"></a>00193 
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 <span class="comment">//-------------------------------------------------</span>
<a name="l00196"></a>00196 <span class="comment">//  Isolation of the color component  as float.</span>
<a name="l00197"></a>00197 <span class="comment">//-------------------------------------------------</span>
<a name="l00198"></a>00198 
<a name="l00199"></a>00199 
<a name="l00200"></a>00200 
<a name="l00201"></a><a class="code" href="namespacegbmath.htm#ab00be5c4d690a506a8d1bf9f5adf2961">00201</a> <span class="keyword">inline</span> <span class="keywordtype">float</span>   <a class="code" href="namespacegbmath.htm#ab00be5c4d690a506a8d1bf9f5adf2961">colorExtractAf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00202"></a>00202 {
<a name="l00203"></a>00203         <span class="keywordflow">return</span> ( ( (<span class="keywordtype">float</span>)<a class="code" href="namespacegbmath.htm#aab8f1f7e8def74f47797bb70d8dffdb1">colorExtractA</a>(color) ) / 255.0f );
<a name="l00204"></a>00204 }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 
<a name="l00207"></a><a class="code" href="namespacegbmath.htm#a466fe09e04657cfa09f9f22268fc3b67">00207</a> <span class="keyword">inline</span> <span class="keywordtype">float</span>   <a class="code" href="namespacegbmath.htm#a466fe09e04657cfa09f9f22268fc3b67">colorExtractRf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00208"></a>00208 {
<a name="l00209"></a>00209         <span class="keywordflow">return</span> ( ( (<span class="keywordtype">float</span>)<a class="code" href="namespacegbmath.htm#ade6c81511566ea396750bf66c30e5798">colorExtractR</a>(color) ) / 255.0f );
<a name="l00210"></a>00210 }
<a name="l00211"></a>00211 
<a name="l00212"></a>00212 
<a name="l00213"></a><a class="code" href="namespacegbmath.htm#a82814283317292d01794d61e4fb32bab">00213</a> <span class="keyword">inline</span> <span class="keywordtype">float</span>   <a class="code" href="namespacegbmath.htm#a82814283317292d01794d61e4fb32bab">colorExtractGf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00214"></a>00214 {
<a name="l00215"></a>00215         <span class="keywordflow">return</span> ( ( (<span class="keywordtype">float</span>)<a class="code" href="namespacegbmath.htm#a383d9596a5a819945f767301380f32c4">colorExtractG</a>(color) ) / 255.0f );
<a name="l00216"></a>00216 }
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 
<a name="l00219"></a><a class="code" href="namespacegbmath.htm#adb888739df93952d70b9d9b25cd7de96">00219</a> <span class="keyword">inline</span> <span class="keywordtype">float</span>   <a class="code" href="namespacegbmath.htm#adb888739df93952d70b9d9b25cd7de96">colorExtractBf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> color )
<a name="l00220"></a>00220 {
<a name="l00221"></a>00221         <span class="keywordflow">return</span> ( ( (<span class="keywordtype">float</span>)<a class="code" href="namespacegbmath.htm#a5955f8a061aaa544c84d602d78f8e4ca">colorExtractB</a>(color) ) / 255.0f );
<a name="l00222"></a>00222 }
<a name="l00223"></a>00223 
<a name="l00224"></a>00224 
<a name="l00225"></a>00225 <span class="comment">//-------------------------------------------------</span>
<a name="l00226"></a>00226 <span class="comment">// Set the color components</span>
<a name="l00227"></a>00227 <span class="comment">//-------------------------------------------------</span>
<a name="l00228"></a>00228 
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 
<a name="l00231"></a><a class="code" href="namespacegbmath.htm#a22d8d4b65f5d15cda17e111973024568">00231</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#a22d8d4b65f5d15cda17e111973024568">colorSetA</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp; col, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> a ) 
<a name="l00232"></a>00232 { 
<a name="l00233"></a>00233         col |= 0xFF000000; col ^= 0xFF000000; col |=(<span class="keywordtype">unsigned</span> int)(a &lt;&lt; 24); 
<a name="l00234"></a>00234 }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 
<a name="l00237"></a><a class="code" href="namespacegbmath.htm#acc2f073f0400b3b83e286fb32abd84b1">00237</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#acc2f073f0400b3b83e286fb32abd84b1">colorSetR</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp; col, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> r ) 
<a name="l00238"></a>00238 { 
<a name="l00239"></a>00239         col |= 0x00FF0000; col ^= 0x00FF0000; col |=(<span class="keywordtype">unsigned</span> int)(r &lt;&lt; 16); 
<a name="l00240"></a>00240 }
<a name="l00241"></a>00241 
<a name="l00242"></a>00242 
<a name="l00243"></a><a class="code" href="namespacegbmath.htm#accf72509c11100fd01de8bb3f95e7e5a">00243</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#accf72509c11100fd01de8bb3f95e7e5a">colorSetG</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp; col, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> g ) 
<a name="l00244"></a>00244 { 
<a name="l00245"></a>00245         col |= 0x0000FF00; col ^= 0x0000FF00; col |=(<span class="keywordtype">unsigned</span> int)(g &lt;&lt;  8); 
<a name="l00246"></a>00246 }
<a name="l00247"></a>00247 
<a name="l00248"></a>00248 
<a name="l00249"></a><a class="code" href="namespacegbmath.htm#a63d997c76f20c4b6879cd2991c375d9e">00249</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#a63d997c76f20c4b6879cd2991c375d9e">colorSetB</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp; col, <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> b ) 
<a name="l00250"></a>00250 { 
<a name="l00251"></a>00251         col |= 0x000000FF; col ^= 0x000000FF; col |=(<span class="keywordtype">unsigned</span> int)(b);       
<a name="l00252"></a>00252 }
<a name="l00253"></a>00253 
<a name="l00254"></a>00254 
<a name="l00255"></a>00255 
<a name="l00256"></a>00256 
<a name="l00257"></a>00257 <span class="comment">//-------------------------------------------------</span>
<a name="l00258"></a>00258 <span class="comment">// set the color components    float</span>
<a name="l00259"></a>00259 <span class="comment">//-------------------------------------------------</span>
<a name="l00260"></a>00260 
<a name="l00261"></a>00261 
<a name="l00262"></a><a class="code" href="namespacegbmath.htm#a943df2f31c8f208982bfeb0dfdb79bcd">00262</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#a943df2f31c8f208982bfeb0dfdb79bcd">colorSetAf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; color, <span class="keywordtype">float</span> a ) 
<a name="l00263"></a>00263 { 
<a name="l00264"></a>00264         <a class="code" href="namespacegbmath.htm#a22d8d4b65f5d15cda17e111973024568">colorSetA</a>( color, (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)( a * 255.0f ) );  
<a name="l00265"></a>00265 }
<a name="l00266"></a>00266 
<a name="l00267"></a><a class="code" href="namespacegbmath.htm#a498e22cb9657c7275d83effa77dd487b">00267</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#a498e22cb9657c7275d83effa77dd487b">colorSetRf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; color, <span class="keywordtype">float</span> r ) 
<a name="l00268"></a>00268 { 
<a name="l00269"></a>00269         <a class="code" href="namespacegbmath.htm#acc2f073f0400b3b83e286fb32abd84b1">colorSetR</a>( color, (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)( r * 255.0f ) );  
<a name="l00270"></a>00270 }
<a name="l00271"></a>00271 
<a name="l00272"></a><a class="code" href="namespacegbmath.htm#ace9092fff1027b38b1aff05dfe9bd308">00272</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#ace9092fff1027b38b1aff05dfe9bd308">colorSetGf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; color, <span class="keywordtype">float</span> g ) 
<a name="l00273"></a>00273 { 
<a name="l00274"></a>00274         <a class="code" href="namespacegbmath.htm#accf72509c11100fd01de8bb3f95e7e5a">colorSetG</a>( color, (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)( g * 255.0f ) );  
<a name="l00275"></a>00275 }
<a name="l00276"></a>00276 
<a name="l00277"></a>00277 
<a name="l00278"></a><a class="code" href="namespacegbmath.htm#a5a0a13beb72de2527e364cd39b312db3">00278</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>   <a class="code" href="namespacegbmath.htm#a5a0a13beb72de2527e364cd39b312db3">colorSetBf</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; color, <span class="keywordtype">float</span> b ) 
<a name="l00279"></a>00279 { 
<a name="l00280"></a>00280         <a class="code" href="namespacegbmath.htm#a63d997c76f20c4b6879cd2991c375d9e">colorSetB</a>( color, (<a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a>)( b * 255.0f ) );  
<a name="l00281"></a>00281 }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 
<a name="l00284"></a>00284 
<a name="l00285"></a>00285 
<a name="l00286"></a>00286 
<a name="l00287"></a>00287 <span class="comment">//-------------------------------------------------</span>
<a name="l00288"></a>00288 <span class="comment">//  Exchange of color components.</span>
<a name="l00289"></a>00289 <span class="comment">//-------------------------------------------------</span>
<a name="l00290"></a>00290 
<a name="l00291"></a><a class="code" href="namespacegbmath.htm#ac156a4f2083848be07c449693eb77830">00291</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>  <a class="code" href="namespacegbmath.htm#ac156a4f2083848be07c449693eb77830">colorRgb24_SwapRG</a>( <a class="code" href="structgbmath_1_1color3__24.htm" title="Three-standard color byte.">color3_24</a>&amp; color )
<a name="l00292"></a>00292 {
<a name="l00293"></a>00293         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> temp;
<a name="l00294"></a>00294         temp = color.<a class="code" href="structgbmath_1_1color3.htm#a4334237f7470c37229a375a83c52b733">r</a>;
<a name="l00295"></a>00295         color.<a class="code" href="structgbmath_1_1color3.htm#a4334237f7470c37229a375a83c52b733">r</a>=color.<a class="code" href="structgbmath_1_1color3.htm#a4769e1d5eb6b0c5ed75e404643c3c105">g</a>;
<a name="l00296"></a>00296         color.<a class="code" href="structgbmath_1_1color3.htm#a4769e1d5eb6b0c5ed75e404643c3c105">g</a>=temp;
<a name="l00297"></a>00297 }
<a name="l00298"></a>00298 
<a name="l00299"></a><a class="code" href="namespacegbmath.htm#acffc53836a6f186ac1a1c4b712e2d9a7">00299</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>  <a class="code" href="namespacegbmath.htm#acffc53836a6f186ac1a1c4b712e2d9a7">colorRgb24_SwapRB</a>( <a class="code" href="structgbmath_1_1color3__24.htm" title="Three-standard color byte.">color3_24</a>&amp; color )
<a name="l00300"></a>00300 {
<a name="l00301"></a>00301         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> temp;
<a name="l00302"></a>00302         temp = color.<a class="code" href="structgbmath_1_1color3.htm#a4334237f7470c37229a375a83c52b733">r</a>;
<a name="l00303"></a>00303         color.<a class="code" href="structgbmath_1_1color3.htm#a4334237f7470c37229a375a83c52b733">r</a>=color.<a class="code" href="structgbmath_1_1color3.htm#a1fa2594b4bbebc4efea2831bf88dd70a">b</a>;
<a name="l00304"></a>00304         color.<a class="code" href="structgbmath_1_1color3.htm#a1fa2594b4bbebc4efea2831bf88dd70a">b</a>=temp;
<a name="l00305"></a>00305 }
<a name="l00306"></a>00306 
<a name="l00307"></a><a class="code" href="namespacegbmath.htm#a2e5e11ee8e8eab42afd129f7bc63c679">00307</a> <span class="keyword">inline</span> <span class="keywordtype">void</span>  <a class="code" href="namespacegbmath.htm#a2e5e11ee8e8eab42afd129f7bc63c679">colorRgb24_SwapGB</a>( <a class="code" href="structgbmath_1_1color3__24.htm" title="Three-standard color byte.">color3_24</a>&amp; color )
<a name="l00308"></a>00308 {
<a name="l00309"></a>00309         <span class="keyword">register</span> <a class="code" href="namespacegbmath.htm#ad73cf6b0a8f2b7d9b6d5156f515f132a">byte_t</a> temp;
<a name="l00310"></a>00310         temp = color.<a class="code" href="structgbmath_1_1color3.htm#a4769e1d5eb6b0c5ed75e404643c3c105">g</a>;
<a name="l00311"></a>00311         color.<a class="code" href="structgbmath_1_1color3.htm#a4769e1d5eb6b0c5ed75e404643c3c105">g</a>=color.<a class="code" href="structgbmath_1_1color3.htm#a1fa2594b4bbebc4efea2831bf88dd70a">b</a>;
<a name="l00312"></a>00312         color.<a class="code" href="structgbmath_1_1color3.htm#a1fa2594b4bbebc4efea2831bf88dd70a">b</a>=temp;
<a name="l00313"></a>00313 }
<a name="l00314"></a>00314 
<a name="l00315"></a>00315 
<a name="l00317"></a><a class="code" href="namespacegbmath.htm#a9a4d6352a51c3b2c5a4ba8b543586bf6">00317</a> <span class="keyword">inline</span> <a class="code" href="structgbmath_1_1color3__24.htm" title="Three-standard color byte.">color3_24</a>   <a class="code" href="namespacegbmath.htm#a9a4d6352a51c3b2c5a4ba8b543586bf6" title="Конвертация uicolor32_t в color_rgb24_s.">color_rgb_fFrom_uicolor</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>    color)
<a name="l00318"></a>00318 {
<a name="l00319"></a>00319         <a class="code" href="structgbmath_1_1color3__24.htm" title="Three-standard color byte.">color3_24</a> res;
<a name="l00320"></a>00320         res.<a class="code" href="structgbmath_1_1color3.htm#a4334237f7470c37229a375a83c52b733">r</a>=(color &gt;&gt; 16);
<a name="l00321"></a>00321         res.<a class="code" href="structgbmath_1_1color3.htm#a4769e1d5eb6b0c5ed75e404643c3c105">g</a>=(color&gt;&gt;8);
<a name="l00322"></a>00322         res.<a class="code" href="structgbmath_1_1color3.htm#a1fa2594b4bbebc4efea2831bf88dd70a">b</a>=(color);
<a name="l00323"></a>00323         <span class="keywordflow">return</span> res;
<a name="l00324"></a>00324 }
<a name="l00325"></a>00325 
<a name="l00326"></a>00326 
<a name="l00327"></a>00327 
<a name="l00328"></a>00328 
<a name="l00329"></a>00329 }
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sat Aug 27 20:46:52 2011 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
