<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>gbmath: BoundSphere.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="dir_e91967769cb11a542f4c633d0973b8e7.htm">ext_doc</a>
  </div>
</div>
<div class="contents">
<h1>BoundSphere.c</h1><a href="_bound_sphere_8c.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">An Efficient Bounding Sphere</span>
<a name="l00003"></a>00003 <span class="comment">by Jack Ritter</span>
<a name="l00004"></a>00004 <span class="comment">from &quot;Graphics Gems&quot;, Academic Press, 1990</span>
<a name="l00005"></a>00005 <span class="comment">*/</span>
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="comment">/* Routine to calculate tight bounding sphere over    */</span>
<a name="l00008"></a>00008 <span class="comment">/* a set of points in 3D */</span>
<a name="l00009"></a>00009 <span class="comment">/* This contains the routine find_bounding_sphere(), */</span>
<a name="l00010"></a>00010 <span class="comment">/* the struct definition, and the globals used for parameters. */</span>
<a name="l00011"></a>00011 <span class="comment">/* The abs() of all coordinates must be &lt; BIGNUMBER */</span>
<a name="l00012"></a>00012 <span class="comment">/* Code written by Jack Ritter and Lyle Rains. */</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00015"></a>00015 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;<a class="code" href="_graphics_gems_8h.htm">GraphicsGems.h</a>&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a><a class="code" href="_bound_sphere_8c.htm#a729f44ea060095f705587bf181fb3709">00018</a> <span class="preprocessor">#define BIGNUMBER 100000000.0           </span><span class="comment">/* hundred million */</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="comment">/* GLOBALS. These are used as input and output parameters. */</span>
<a name="l00021"></a>00021  
<a name="l00022"></a><a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">00022</a> <span class="keyword">struct </span><a class="code" href="struct_point3_struct.htm">Point3Struct</a> caller_p,<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>;
<a name="l00023"></a><a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">00023</a> <span class="keywordtype">double</span> <a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">rad</a>;
<a name="l00024"></a><a class="code" href="_bound_sphere_8c.htm#a8f6bd5c759ff5ea44994b30649beb117">00024</a> <span class="keywordtype">int</span> <a class="code" href="_bound_sphere_8c.htm#a8f6bd5c759ff5ea44994b30649beb117">NUM_POINTS</a>;
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="comment">/* Call with no parameters. Caller must set NUM_POINTS */</span>
<a name="l00027"></a>00027 <span class="comment">/* before calling. */</span>
<a name="l00028"></a>00028 <span class="comment">/* Caller must supply the routine GET_iTH_POINT(i), which loads his */</span>
<a name="l00029"></a>00029 <span class="comment">/* ith point into the global struct caller_p. (0 &lt;= i &lt; NUM_POINTS). */</span>
<a name="l00030"></a>00030 <span class="comment">/* The calling order of the points is irrelevant. */</span>
<a name="l00031"></a>00031 <span class="comment">/* The final bounding sphere will be put into the globals */</span>
<a name="l00032"></a>00032 <span class="comment">/* cen and rad. */</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="_bound_sphere_8c.htm#aa0f8acd4a27736cb9bc1b3fbca6cd4ee">00035</a> <a class="code" href="_bound_sphere_8c.htm#aa0f8acd4a27736cb9bc1b3fbca6cd4ee">find_bounding_sphere</a>()
<a name="l00036"></a>00036 {
<a name="l00037"></a>00037 <span class="keyword">register</span> <span class="keywordtype">int</span> <a class="code" href="_ray_polygon_8c.htm#a7e98b8a17c0aad30ba64d47b74e2a6c1">i</a>;
<a name="l00038"></a>00038 <span class="keyword">register</span> <span class="keywordtype">double</span> dx,dy,dz;
<a name="l00039"></a>00039 <span class="keyword">register</span> <span class="keywordtype">double</span> rad_sq,xspan,yspan,zspan,maxspan;
<a name="l00040"></a>00040 <span class="keywordtype">double</span> old_to_p,old_to_p_sq,old_to_new;
<a name="l00041"></a>00041 <span class="keyword">struct </span><a class="code" href="struct_point3_struct.htm">Point3Struct</a> xmin,xmax,ymin,ymax,zmin,zmax,dia1,dia2;
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="comment">/* FIRST PASS: find 6 minima/maxima points */</span>
<a name="l00045"></a>00045 xmin.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>=ymin.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>=zmin.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>= <a class="code" href="_bound_sphere_8c.htm#a729f44ea060095f705587bf181fb3709">BIGNUMBER</a>; <span class="comment">/* initialize for min/max compare */</span>
<a name="l00046"></a>00046 xmax.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>=ymax.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>=zmax.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>= -<a class="code" href="_bound_sphere_8c.htm#a729f44ea060095f705587bf181fb3709">BIGNUMBER</a>;
<a name="l00047"></a>00047 <span class="keywordflow">for</span> (i=0;i&lt;<a class="code" href="_bound_sphere_8c.htm#a8f6bd5c759ff5ea44994b30649beb117">NUM_POINTS</a>;i++)
<a name="l00048"></a>00048         {
<a name="l00049"></a>00049         GET_iTH_POINT(i); <span class="comment">/* load global struct caller_p with */</span>
<a name="l00050"></a>00050                                         <span class="comment">/* his ith point. */</span>
<a name="l00051"></a>00051         <span class="keywordflow">if</span> (caller_p.x&lt;xmin.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>)
<a name="l00052"></a>00052                 xmin = caller_p; <span class="comment">/* New xminimum point */</span>
<a name="l00053"></a>00053         <span class="keywordflow">if</span> (caller_p.x&gt;xmax.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>)
<a name="l00054"></a>00054                 xmax = caller_p;
<a name="l00055"></a>00055         <span class="keywordflow">if</span> (caller_p.y&lt;ymin.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>)
<a name="l00056"></a>00056                 ymin = caller_p;
<a name="l00057"></a>00057         <span class="keywordflow">if</span> (caller_p.y&gt;ymax.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>)
<a name="l00058"></a>00058                 ymax = caller_p;
<a name="l00059"></a>00059         <span class="keywordflow">if</span> (caller_p.z&lt;zmin.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>)
<a name="l00060"></a>00060                 zmin = caller_p;
<a name="l00061"></a>00061         <span class="keywordflow">if</span> (caller_p.z&gt;zmax.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>)
<a name="l00062"></a>00062                 zmax = caller_p;
<a name="l00063"></a>00063         }
<a name="l00064"></a>00064 <span class="comment">/* Set xspan = distance between the 2 points xmin &amp; xmax (squared) */</span>
<a name="l00065"></a>00065 dx = xmax.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a> - xmin.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>;
<a name="l00066"></a>00066 dy = xmax.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a> - xmin.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>;
<a name="l00067"></a>00067 dz = xmax.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a> - xmin.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>;
<a name="l00068"></a>00068 xspan = dx*dx + dy*dy + dz*dz;
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 <span class="comment">/* Same for y &amp; z spans */</span>
<a name="l00071"></a>00071 dx = ymax.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a> - ymin.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>;
<a name="l00072"></a>00072 dy = ymax.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a> - ymin.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>;
<a name="l00073"></a>00073 dz = ymax.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a> - ymin.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>;
<a name="l00074"></a>00074 yspan = dx*dx + dy*dy + dz*dz;
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 dx = zmax.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a> - zmin.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>;
<a name="l00077"></a>00077 dy = zmax.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a> - zmin.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>;
<a name="l00078"></a>00078 dz = zmax.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a> - zmin.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>;
<a name="l00079"></a>00079 zspan = dx*dx + dy*dy + dz*dz;
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="comment">/* Set points dia1 &amp; dia2 to the maximally separated pair */</span>
<a name="l00082"></a>00082 dia1 = xmin; dia2 = xmax; <span class="comment">/* assume xspan biggest */</span>
<a name="l00083"></a>00083 maxspan = xspan;
<a name="l00084"></a>00084 <span class="keywordflow">if</span> (yspan&gt;maxspan)
<a name="l00085"></a>00085         {
<a name="l00086"></a>00086         maxspan = yspan;
<a name="l00087"></a>00087         dia1 = ymin; dia2 = ymax;
<a name="l00088"></a>00088         }
<a name="l00089"></a>00089 <span class="keywordflow">if</span> (zspan&gt;maxspan)
<a name="l00090"></a>00090         {
<a name="l00091"></a>00091         dia1 = zmin; dia2 = zmax;
<a name="l00092"></a>00092         }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="comment">/* dia1,dia2 is a diameter of initial sphere */</span>
<a name="l00096"></a>00096 <span class="comment">/* calc initial center */</span>
<a name="l00097"></a>00097 <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a> = (dia1.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>+dia2.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>)/2.0;
<a name="l00098"></a>00098 <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a> = (dia1.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>+dia2.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>)/2.0;
<a name="l00099"></a>00099 <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a> = (dia1.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>+dia2.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>)/2.0;
<a name="l00100"></a>00100 <span class="comment">/* calculate initial radius**2 and radius */</span>
<a name="l00101"></a>00101 dx = dia2.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>-<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>; <span class="comment">/* x component of radius vector */</span>
<a name="l00102"></a>00102 dy = dia2.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>-<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>; <span class="comment">/* y component of radius vector */</span>
<a name="l00103"></a>00103 dz = dia2.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>-<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>; <span class="comment">/* z component of radius vector */</span>
<a name="l00104"></a>00104 rad_sq = dx*dx + dy*dy + dz*dz;
<a name="l00105"></a>00105 <a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">rad</a> = sqrt(rad_sq);
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="comment">/* SECOND PASS: increment current sphere */</span>
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 <span class="keywordflow">for</span> (i=0;i&lt;NUM_POINTS;i++)
<a name="l00110"></a>00110         {
<a name="l00111"></a>00111         GET_iTH_POINT(i); <span class="comment">/* load global struct caller_p  */</span>
<a name="l00112"></a>00112                                         <span class="comment">/* with his ith point. */</span>
<a name="l00113"></a>00113         dx = caller_p.x-<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>;
<a name="l00114"></a>00114         dy = caller_p.y-<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>;
<a name="l00115"></a>00115         dz = caller_p.z-<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>;
<a name="l00116"></a>00116         old_to_p_sq = dx*dx + dy*dy + dz*dz;
<a name="l00117"></a>00117         <span class="keywordflow">if</span> (old_to_p_sq &gt; rad_sq)       <span class="comment">/* do r**2 test first */</span>
<a name="l00118"></a>00118                 {       <span class="comment">/* this point is outside of current sphere */</span>
<a name="l00119"></a>00119                 old_to_p = sqrt(old_to_p_sq);
<a name="l00120"></a>00120                 <span class="comment">/* calc radius of new sphere */</span>
<a name="l00121"></a>00121                 <a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">rad</a> = (<a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">rad</a> + old_to_p) / 2.0;
<a name="l00122"></a>00122                 rad_sq = <a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">rad</a>*<a class="code" href="_bound_sphere_8c.htm#ab6c28cf69c9a69a01e7ea6a37c85ba92">rad</a>;       <span class="comment">/* for next r**2 compare */</span>
<a name="l00123"></a>00123                 old_to_new = old_to_p - rad;
<a name="l00124"></a>00124                 <span class="comment">/* calc center of new sphere */</span>
<a name="l00125"></a>00125                 <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a> = (rad*<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a> + old_to_new*caller_p.x) / old_to_p;
<a name="l00126"></a>00126                 <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a> = (rad*<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a> + old_to_new*caller_p.y) / old_to_p;
<a name="l00127"></a>00127                 <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a> = (rad*<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a> + old_to_new*caller_p.z) / old_to_p;
<a name="l00128"></a>00128                 <span class="comment">/* Suppress if desired */</span>
<a name="l00129"></a>00129                 printf(<span class="stringliteral">&quot;\n New sphere: cen,rad = %f %f %f   %f&quot;</span>,
<a name="l00130"></a>00130                         <a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a0149d4af1251798c34261a99cef297e4">x</a>,<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a9ad9100443ed440ffee62de6be3df316">y</a>,<a class="code" href="_bound_sphere_8c.htm#a61e6967cb704e7937758b28ce410f13d">cen</a>.<a class="code" href="struct_point3_struct.htm#a717682dd15bb15c75f477d7720664182">z</a>, rad);
<a name="l00131"></a>00131                 }       
<a name="l00132"></a>00132         }
<a name="l00133"></a>00133 }                        <span class="comment">/* end of find_bounding_sphere()  */</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&nbsp;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sat Aug 27 16:32:23 2011 for gbmath by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
