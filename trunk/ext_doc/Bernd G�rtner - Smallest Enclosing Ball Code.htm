
<!-- saved from url=(0054)http://www.inf.ethz.ch/personal/gaertner/miniball.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title> Bernd G�rtner - Smallest Enclosing Ball Code</title>
<meta name="keywords" content="minimum bounding sphere, bounding sphere, minimum bounding ball, bounding ball, view culling, collision detection, bounding spheres hierarchy, bounding volumes"> 
</head>

<body bgcolor="#ffffff">

<h1> Smallest Enclosing Balls of Points - Fast and Robust in C++.</h1>

<h3>
(high-quality software for smallest enclosing balls of 
<em>balls</em> is available in the computational geometry algorithms library
<a href="http://www.cgal.org/">CGAL</a>)
</h3>

<table>
<tbody><tr>
<td> 
<img src="./Bernd G�rtner - Smallest Enclosing Ball Code_files/mb.gif" hspace="20"></td>

<td>
This is the miniball software for computing smallest enclosing balls of
points in arbitrary dimensions. It consists of a small C++ header file 
(around 500 lines of code) and an example program that includes it and
demonstrates the usage.<p></p><p>

The software comes in two versions. In the faster version, the dimension
is provided as a template argument and must therefore be known at compile
time: 
<a href="http://www.inf.ethz.ch/personal/gaertner/miniball/Miniball.h">Miniball.h</a> and
<a href="http://www.inf.ethz.ch/personal/gaertner/miniball/miniball_example.C">miniball_example.C</a>.</p><p></p><p>

In the more flexible version, the dimension is provided as a constructor
argument and can therefore be determined at runtime:
<a href="http://www.inf.ethz.ch/personal/gaertner/miniball/Miniball_dynamic_d.h">Miniball_dynamic_d.h</a> and 
<a href="http://www.inf.ethz.ch/personal/gaertner/miniball/miniball_example_dynamic_d.C">
miniball_dynamic_d_example.C</a>.</p><p></p><p>

The miniball software is available under the 
<a href="http://www.gnu.org/copyleft/gpl.html">
GNU General Public License</a>. If
your intended use is not compliant with this license, please buy a
<a href="http://www.inf.ethz.ch/personal/gaertner/miniball/license.html">commercial license</a> (&amp;euro 300).
You need a license if the software that you develop using
<em>Miniball V2.0</em> is not open source.</p><p></p><p>

<a href="http://www.inf.ethz.ch/personal/gaertner/miniball/changes.txt"> Changes</a> from previous versions.</p><p></p><p>

<a href="http://www.inf.ethz.ch/personal/gaertner/texts/own_work/esa99_final.pdf">The theory</a> behind the miniball 
software (Proc. 7th Annual European Symposium on Algorithms (ESA), Lecture 
Notes in Computer Science 1643 � Springer-Verlag, pp.325-338, 1999).</p><p></p><p>

</p></td></tr></tbody></table>

<h3>Main Features:</h3>
<ul>
	<li><b>Very fast in low dimensions.</b>
	    1 million points in 3-space are
	    processed within 0.5 seconds on any recent machine
	    <p></p><p> 
	</p></li><li><b>High numerical stability.</b>
	    Almost all input degeneracies (cospherical points, multiple
 	    points, points very close together) are routinely handled.
	    <p></p><p>
	</p></li><li><b>Easily integrates into your code.</b> 
	    The header is small and readable; it separates class 
	    definitions from class implementations and contains
	    documentation for all methods of the main class 
	    <em>Miniball</em>.
</li></ul>
<hr>
<a href="http://www.inf.ethz.ch/personal/gaertner/index.html"> Back </a> to the homepage



</body></html>